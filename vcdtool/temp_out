Parsing NoC.vcd
Parse successful.
Version:       
	ModelSim Version 2020.1

Date:          
	Thu Nov 11 01:39:15 2021

Signal count:  13301
Times Recorded:200
Scope: 
Scope: NoC_TB
	!	clk
	"	rst
	#	fd [32:0]
	$	Node0_data_in [32:0]
	%	Node0_valid_in
	&	Node0_ready_in
	'	Node0_data_out
	(	Node0_data_out
	)	Node0_data_out
	*	Node0_data_out
	+	Node0_data_out
	,	Node0_data_out
	-	Node0_data_out
	.	Node0_data_out
	/	Node0_data_out
	0	Node0_data_out
	1	Node0_data_out
	2	Node0_data_out
	3	Node0_data_out
	4	Node0_data_out
	5	Node0_data_out
	6	Node0_data_out
	7	Node0_data_out
	8	Node0_data_out
	9	Node0_data_out
	:	Node0_data_out
	;	Node0_data_out
	<	Node0_data_out
	=	Node0_data_out
	>	Node0_data_out
	?	Node0_data_out
	@	Node0_data_out
	A	Node0_data_out
	B	Node0_data_out
	C	Node0_data_out
	D	Node0_data_out
	E	Node0_data_out
	F	Node0_data_out
	G	Node0_valid_out
	H	Node0_ready_out
	I	Node1_data_in [32:0]
	J	Node1_valid_in
	K	Node1_ready_in
	L	Node1_data_out
	M	Node1_data_out
	N	Node1_data_out
	O	Node1_data_out
	P	Node1_data_out
	Q	Node1_data_out
	R	Node1_data_out
	S	Node1_data_out
	T	Node1_data_out
	U	Node1_data_out
	V	Node1_data_out
	W	Node1_data_out
	X	Node1_data_out
	Y	Node1_data_out
	Z	Node1_data_out
	[	Node1_data_out
	\	Node1_data_out
	]	Node1_data_out
	^	Node1_data_out
	_	Node1_data_out
	`	Node1_data_out
	a	Node1_data_out
	b	Node1_data_out
	c	Node1_data_out
	d	Node1_data_out
	e	Node1_data_out
	f	Node1_data_out
	g	Node1_data_out
	h	Node1_data_out
	i	Node1_data_out
	j	Node1_data_out
	k	Node1_data_out
	l	Node1_valid_out
	m	Node1_ready_out
	n	Node2_data_in [32:0]
	o	Node2_valid_in
	p	Node2_ready_in
	q	Node2_data_out
	r	Node2_data_out
	s	Node2_data_out
	t	Node2_data_out
	u	Node2_data_out
	v	Node2_data_out
	w	Node2_data_out
	x	Node2_data_out
	y	Node2_data_out
	z	Node2_data_out
	{	Node2_data_out
	|	Node2_data_out
	}	Node2_data_out
	~	Node2_data_out
	!!	Node2_data_out
	"!	Node2_data_out
	#!	Node2_data_out
	$!	Node2_data_out
	%!	Node2_data_out
	&!	Node2_data_out
	'!	Node2_data_out
	(!	Node2_data_out
	)!	Node2_data_out
	*!	Node2_data_out
	+!	Node2_data_out
	,!	Node2_data_out
	-!	Node2_data_out
	.!	Node2_data_out
	/!	Node2_data_out
	0!	Node2_data_out
	1!	Node2_data_out
	2!	Node2_data_out
	3!	Node2_valid_out
	4!	Node2_ready_out
	5!	Node3_data_in [32:0]
	6!	Node3_valid_in
	7!	Node3_ready_in
	8!	Node3_data_out
	9!	Node3_data_out
	:!	Node3_data_out
	;!	Node3_data_out
	<!	Node3_data_out
	=!	Node3_data_out
	>!	Node3_data_out
	?!	Node3_data_out
	@!	Node3_data_out
	A!	Node3_data_out
	B!	Node3_data_out
	C!	Node3_data_out
	D!	Node3_data_out
	E!	Node3_data_out
	F!	Node3_data_out
	G!	Node3_data_out
	H!	Node3_data_out
	I!	Node3_data_out
	J!	Node3_data_out
	K!	Node3_data_out
	L!	Node3_data_out
	M!	Node3_data_out
	N!	Node3_data_out
	O!	Node3_data_out
	P!	Node3_data_out
	Q!	Node3_data_out
	R!	Node3_data_out
	S!	Node3_data_out
	T!	Node3_data_out
	U!	Node3_data_out
	V!	Node3_data_out
	W!	Node3_data_out
	X!	Node3_valid_out
	Y!	Node3_ready_out
	Z!	Node4_data_in [32:0]
	[!	Node4_valid_in
	\!	Node4_ready_in
	]!	Node4_data_out
	^!	Node4_data_out
	_!	Node4_data_out
	`!	Node4_data_out
	a!	Node4_data_out
	b!	Node4_data_out
	c!	Node4_data_out
	d!	Node4_data_out
	e!	Node4_data_out
	f!	Node4_data_out
	g!	Node4_data_out
	h!	Node4_data_out
	i!	Node4_data_out
	j!	Node4_data_out
	k!	Node4_data_out
	l!	Node4_data_out
	m!	Node4_data_out
	n!	Node4_data_out
	o!	Node4_data_out
	p!	Node4_data_out
	q!	Node4_data_out
	r!	Node4_data_out
	s!	Node4_data_out
	t!	Node4_data_out
	u!	Node4_data_out
	v!	Node4_data_out
	w!	Node4_data_out
	x!	Node4_data_out
	y!	Node4_data_out
	z!	Node4_data_out
	{!	Node4_data_out
	|!	Node4_data_out
	}!	Node4_valid_out
	~!	Node4_ready_out
	!"	Node5_data_in [32:0]
	""	Node5_valid_in
	#"	Node5_ready_in
	$"	Node5_data_out
	%"	Node5_data_out
	&"	Node5_data_out
	'"	Node5_data_out
	("	Node5_data_out
	)"	Node5_data_out
	*"	Node5_data_out
	+"	Node5_data_out
	,"	Node5_data_out
	-"	Node5_data_out
	."	Node5_data_out
	/"	Node5_data_out
	0"	Node5_data_out
	1"	Node5_data_out
	2"	Node5_data_out
	3"	Node5_data_out
	4"	Node5_data_out
	5"	Node5_data_out
	6"	Node5_data_out
	7"	Node5_data_out
	8"	Node5_data_out
	9"	Node5_data_out
	:"	Node5_data_out
	;"	Node5_data_out
	<"	Node5_data_out
	="	Node5_data_out
	>"	Node5_data_out
	?"	Node5_data_out
	@"	Node5_data_out
	A"	Node5_data_out
	B"	Node5_data_out
	C"	Node5_data_out
	D"	Node5_valid_out
	E"	Node5_ready_out
	F"	i0 [32:0]
	G"	k0 [32:0]
	H"	i1 [32:0]
	I"	i5 [32:0]
Scope: noc
	J"	clk
	K"	rst
	L"	Node0_data_in
	M"	Node0_data_in
	N"	Node0_data_in
	O"	Node0_data_in
	P"	Node0_data_in
	Q"	Node0_data_in
	R"	Node0_data_in
	S"	Node0_data_in
	T"	Node0_data_in
	U"	Node0_data_in
	V"	Node0_data_in
	W"	Node0_data_in
	X"	Node0_data_in
	Y"	Node0_data_in
	Z"	Node0_data_in
	["	Node0_data_in
	\"	Node0_data_in
	]"	Node0_data_in
	^"	Node0_data_in
	_"	Node0_data_in
	`"	Node0_data_in
	a"	Node0_data_in
	b"	Node0_data_in
	c"	Node0_data_in
	d"	Node0_data_in
	e"	Node0_data_in
	f"	Node0_data_in
	g"	Node0_data_in
	h"	Node0_data_in
	i"	Node0_data_in
	j"	Node0_data_in
	k"	Node0_data_in
	l"	Node0_valid_in
	&	Node0_ready_in
	'	Node0_data_out
	(	Node0_data_out
	)	Node0_data_out
	*	Node0_data_out
	+	Node0_data_out
	,	Node0_data_out
	-	Node0_data_out
	.	Node0_data_out
	/	Node0_data_out
	0	Node0_data_out
	1	Node0_data_out
	2	Node0_data_out
	3	Node0_data_out
	4	Node0_data_out
	5	Node0_data_out
	6	Node0_data_out
	7	Node0_data_out
	8	Node0_data_out
	9	Node0_data_out
	:	Node0_data_out
	;	Node0_data_out
	<	Node0_data_out
	=	Node0_data_out
	>	Node0_data_out
	?	Node0_data_out
	@	Node0_data_out
	A	Node0_data_out
	B	Node0_data_out
	C	Node0_data_out
	D	Node0_data_out
	E	Node0_data_out
	F	Node0_data_out
	G	Node0_valid_out
	m"	Node0_ready_out
	n"	Node1_data_in
	o"	Node1_data_in
	p"	Node1_data_in
	q"	Node1_data_in
	r"	Node1_data_in
	s"	Node1_data_in
	t"	Node1_data_in
	u"	Node1_data_in
	v"	Node1_data_in
	w"	Node1_data_in
	x"	Node1_data_in
	y"	Node1_data_in
	z"	Node1_data_in
	{"	Node1_data_in
	|"	Node1_data_in
	}"	Node1_data_in
	~"	Node1_data_in
	!#	Node1_data_in
	"#	Node1_data_in
	##	Node1_data_in
	$#	Node1_data_in
	%#	Node1_data_in
	&#	Node1_data_in
	'#	Node1_data_in
	(#	Node1_data_in
	)#	Node1_data_in
	*#	Node1_data_in
	+#	Node1_data_in
	,#	Node1_data_in
	-#	Node1_data_in
	.#	Node1_data_in
	/#	Node1_data_in
	0#	Node1_valid_in
	K	Node1_ready_in
	L	Node1_data_out
	M	Node1_data_out
	N	Node1_data_out
	O	Node1_data_out
	P	Node1_data_out
	Q	Node1_data_out
	R	Node1_data_out
	S	Node1_data_out
	T	Node1_data_out
	U	Node1_data_out
	V	Node1_data_out
	W	Node1_data_out
	X	Node1_data_out
	Y	Node1_data_out
	Z	Node1_data_out
	[	Node1_data_out
	\	Node1_data_out
	]	Node1_data_out
	^	Node1_data_out
	_	Node1_data_out
	`	Node1_data_out
	a	Node1_data_out
	b	Node1_data_out
	c	Node1_data_out
	d	Node1_data_out
	e	Node1_data_out
	f	Node1_data_out
	g	Node1_data_out
	h	Node1_data_out
	i	Node1_data_out
	j	Node1_data_out
	k	Node1_data_out
	l	Node1_valid_out
	1#	Node1_ready_out
	2#	Node2_data_in
	3#	Node2_data_in
	4#	Node2_data_in
	5#	Node2_data_in
	6#	Node2_data_in
	7#	Node2_data_in
	8#	Node2_data_in
	9#	Node2_data_in
	:#	Node2_data_in
	;#	Node2_data_in
	<#	Node2_data_in
	=#	Node2_data_in
	>#	Node2_data_in
	?#	Node2_data_in
	@#	Node2_data_in
	A#	Node2_data_in
	B#	Node2_data_in
	C#	Node2_data_in
	D#	Node2_data_in
	E#	Node2_data_in
	F#	Node2_data_in
	G#	Node2_data_in
	H#	Node2_data_in
	I#	Node2_data_in
	J#	Node2_data_in
	K#	Node2_data_in
	L#	Node2_data_in
	M#	Node2_data_in
	N#	Node2_data_in
	O#	Node2_data_in
	P#	Node2_data_in
	Q#	Node2_data_in
	R#	Node2_valid_in
	p	Node2_ready_in
	q	Node2_data_out
	r	Node2_data_out
	s	Node2_data_out
	t	Node2_data_out
	u	Node2_data_out
	v	Node2_data_out
	w	Node2_data_out
	x	Node2_data_out
	y	Node2_data_out
	z	Node2_data_out
	{	Node2_data_out
	|	Node2_data_out
	}	Node2_data_out
	~	Node2_data_out
	!!	Node2_data_out
	"!	Node2_data_out
	#!	Node2_data_out
	$!	Node2_data_out
	%!	Node2_data_out
	&!	Node2_data_out
	'!	Node2_data_out
	(!	Node2_data_out
	)!	Node2_data_out
	*!	Node2_data_out
	+!	Node2_data_out
	,!	Node2_data_out
	-!	Node2_data_out
	.!	Node2_data_out
	/!	Node2_data_out
	0!	Node2_data_out
	1!	Node2_data_out
	2!	Node2_data_out
	3!	Node2_valid_out
	S#	Node2_ready_out
	T#	Node3_data_in
	U#	Node3_data_in
	V#	Node3_data_in
	W#	Node3_data_in
	X#	Node3_data_in
	Y#	Node3_data_in
	Z#	Node3_data_in
	[#	Node3_data_in
	\#	Node3_data_in
	]#	Node3_data_in
	^#	Node3_data_in
	_#	Node3_data_in
	`#	Node3_data_in
	a#	Node3_data_in
	b#	Node3_data_in
	c#	Node3_data_in
	d#	Node3_data_in
	e#	Node3_data_in
	f#	Node3_data_in
	g#	Node3_data_in
	h#	Node3_data_in
	i#	Node3_data_in
	j#	Node3_data_in
	k#	Node3_data_in
	l#	Node3_data_in
	m#	Node3_data_in
	n#	Node3_data_in
	o#	Node3_data_in
	p#	Node3_data_in
	q#	Node3_data_in
	r#	Node3_data_in
	s#	Node3_data_in
	t#	Node3_valid_in
	7!	Node3_ready_in
	8!	Node3_data_out
	9!	Node3_data_out
	:!	Node3_data_out
	;!	Node3_data_out
	<!	Node3_data_out
	=!	Node3_data_out
	>!	Node3_data_out
	?!	Node3_data_out
	@!	Node3_data_out
	A!	Node3_data_out
	B!	Node3_data_out
	C!	Node3_data_out
	D!	Node3_data_out
	E!	Node3_data_out
	F!	Node3_data_out
	G!	Node3_data_out
	H!	Node3_data_out
	I!	Node3_data_out
	J!	Node3_data_out
	K!	Node3_data_out
	L!	Node3_data_out
	M!	Node3_data_out
	N!	Node3_data_out
	O!	Node3_data_out
	P!	Node3_data_out
	Q!	Node3_data_out
	R!	Node3_data_out
	S!	Node3_data_out
	T!	Node3_data_out
	U!	Node3_data_out
	V!	Node3_data_out
	W!	Node3_data_out
	X!	Node3_valid_out
	u#	Node3_ready_out
	v#	Node4_data_in
	w#	Node4_data_in
	x#	Node4_data_in
	y#	Node4_data_in
	z#	Node4_data_in
	{#	Node4_data_in
	|#	Node4_data_in
	}#	Node4_data_in
	~#	Node4_data_in
	!$	Node4_data_in
	"$	Node4_data_in
	#$	Node4_data_in
	$$	Node4_data_in
	%$	Node4_data_in
	&$	Node4_data_in
	'$	Node4_data_in
	($	Node4_data_in
	)$	Node4_data_in
	*$	Node4_data_in
	+$	Node4_data_in
	,$	Node4_data_in
	-$	Node4_data_in
	.$	Node4_data_in
	/$	Node4_data_in
	0$	Node4_data_in
	1$	Node4_data_in
	2$	Node4_data_in
	3$	Node4_data_in
	4$	Node4_data_in
	5$	Node4_data_in
	6$	Node4_data_in
	7$	Node4_data_in
	8$	Node4_valid_in
	\!	Node4_ready_in
	]!	Node4_data_out
	^!	Node4_data_out
	_!	Node4_data_out
	`!	Node4_data_out
	a!	Node4_data_out
	b!	Node4_data_out
	c!	Node4_data_out
	d!	Node4_data_out
	e!	Node4_data_out
	f!	Node4_data_out
	g!	Node4_data_out
	h!	Node4_data_out
	i!	Node4_data_out
	j!	Node4_data_out
	k!	Node4_data_out
	l!	Node4_data_out
	m!	Node4_data_out
	n!	Node4_data_out
	o!	Node4_data_out
	p!	Node4_data_out
	q!	Node4_data_out
	r!	Node4_data_out
	s!	Node4_data_out
	t!	Node4_data_out
	u!	Node4_data_out
	v!	Node4_data_out
	w!	Node4_data_out
	x!	Node4_data_out
	y!	Node4_data_out
	z!	Node4_data_out
	{!	Node4_data_out
	|!	Node4_data_out
	}!	Node4_valid_out
	9$	Node4_ready_out
	:$	Node5_data_in
	;$	Node5_data_in
	<$	Node5_data_in
	=$	Node5_data_in
	>$	Node5_data_in
	?$	Node5_data_in
	@$	Node5_data_in
	A$	Node5_data_in
	B$	Node5_data_in
	C$	Node5_data_in
	D$	Node5_data_in
	E$	Node5_data_in
	F$	Node5_data_in
	G$	Node5_data_in
	H$	Node5_data_in
	I$	Node5_data_in
	J$	Node5_data_in
	K$	Node5_data_in
	L$	Node5_data_in
	M$	Node5_data_in
	N$	Node5_data_in
	O$	Node5_data_in
	P$	Node5_data_in
	Q$	Node5_data_in
	R$	Node5_data_in
	S$	Node5_data_in
	T$	Node5_data_in
	U$	Node5_data_in
	V$	Node5_data_in
	W$	Node5_data_in
	X$	Node5_data_in
	Y$	Node5_data_in
	Z$	Node5_valid_in
	#"	Node5_ready_in
	$"	Node5_data_out
	%"	Node5_data_out
	&"	Node5_data_out
	'"	Node5_data_out
	("	Node5_data_out
	)"	Node5_data_out
	*"	Node5_data_out
	+"	Node5_data_out
	,"	Node5_data_out
	-"	Node5_data_out
	."	Node5_data_out
	/"	Node5_data_out
	0"	Node5_data_out
	1"	Node5_data_out
	2"	Node5_data_out
	3"	Node5_data_out
	4"	Node5_data_out
	5"	Node5_data_out
	6"	Node5_data_out
	7"	Node5_data_out
	8"	Node5_data_out
	9"	Node5_data_out
	:"	Node5_data_out
	;"	Node5_data_out
	<"	Node5_data_out
	="	Node5_data_out
	>"	Node5_data_out
	?"	Node5_data_out
	@"	Node5_data_out
	A"	Node5_data_out
	B"	Node5_data_out
	C"	Node5_data_out
	D"	Node5_valid_out
	[$	Node5_ready_out
	\$	Node0_clk
	]$	Node0_rst
	^$	Node0_in0_data
	_$	Node0_in0_data
	`$	Node0_in0_data
	a$	Node0_in0_data
	b$	Node0_in0_data
	c$	Node0_in0_data
	d$	Node0_in0_data
	e$	Node0_in0_data
	f$	Node0_in0_data
	g$	Node0_in0_data
	h$	Node0_in0_data
	i$	Node0_in0_data
	j$	Node0_in0_data
	k$	Node0_in0_data
	l$	Node0_in0_data
	m$	Node0_in0_data
	n$	Node0_in0_data
	o$	Node0_in0_data
	p$	Node0_in0_data
	q$	Node0_in0_data
	r$	Node0_in0_data
	s$	Node0_in0_data
	t$	Node0_in0_data
	u$	Node0_in0_data
	v$	Node0_in0_data
	w$	Node0_in0_data
	x$	Node0_in0_data
	y$	Node0_in0_data
	z$	Node0_in0_data
	{$	Node0_in0_data
	|$	Node0_in0_data
	}$	Node0_in0_data
	~$	Node0_in0_ready
	!%	Node0_in0_valid
	"%	Node0_in1_data
	#%	Node0_in1_data
	$%	Node0_in1_data
	%%	Node0_in1_data
	&%	Node0_in1_data
	'%	Node0_in1_data
	(%	Node0_in1_data
	)%	Node0_in1_data
	*%	Node0_in1_data
	+%	Node0_in1_data
	,%	Node0_in1_data
	-%	Node0_in1_data
	.%	Node0_in1_data
	/%	Node0_in1_data
	0%	Node0_in1_data
	1%	Node0_in1_data
	2%	Node0_in1_data
	3%	Node0_in1_data
	4%	Node0_in1_data
	5%	Node0_in1_data
	6%	Node0_in1_data
	7%	Node0_in1_data
	8%	Node0_in1_data
	9%	Node0_in1_data
	:%	Node0_in1_data
	;%	Node0_in1_data
	<%	Node0_in1_data
	=%	Node0_in1_data
	>%	Node0_in1_data
	?%	Node0_in1_data
	@%	Node0_in1_data
	A%	Node0_in1_data
	B%	Node0_in1_ready
	C%	Node0_in1_valid
	D%	Node0_out0_data
	E%	Node0_out0_data
	F%	Node0_out0_data
	G%	Node0_out0_data
	H%	Node0_out0_data
	I%	Node0_out0_data
	J%	Node0_out0_data
	K%	Node0_out0_data
	L%	Node0_out0_data
	M%	Node0_out0_data
	N%	Node0_out0_data
	O%	Node0_out0_data
	P%	Node0_out0_data
	Q%	Node0_out0_data
	R%	Node0_out0_data
	S%	Node0_out0_data
	T%	Node0_out0_data
	U%	Node0_out0_data
	V%	Node0_out0_data
	W%	Node0_out0_data
	X%	Node0_out0_data
	Y%	Node0_out0_data
	Z%	Node0_out0_data
	[%	Node0_out0_data
	\%	Node0_out0_data
	]%	Node0_out0_data
	^%	Node0_out0_data
	_%	Node0_out0_data
	`%	Node0_out0_data
	a%	Node0_out0_data
	b%	Node0_out0_data
	c%	Node0_out0_data
	d%	Node0_out0_ready
	e%	Node0_out0_valid
	f%	Node0_out1_data
	g%	Node0_out1_data
	h%	Node0_out1_data
	i%	Node0_out1_data
	j%	Node0_out1_data
	k%	Node0_out1_data
	l%	Node0_out1_data
	m%	Node0_out1_data
	n%	Node0_out1_data
	o%	Node0_out1_data
	p%	Node0_out1_data
	q%	Node0_out1_data
	r%	Node0_out1_data
	s%	Node0_out1_data
	t%	Node0_out1_data
	u%	Node0_out1_data
	v%	Node0_out1_data
	w%	Node0_out1_data
	x%	Node0_out1_data
	y%	Node0_out1_data
	z%	Node0_out1_data
	{%	Node0_out1_data
	|%	Node0_out1_data
	}%	Node0_out1_data
	~%	Node0_out1_data
	!&	Node0_out1_data
	"&	Node0_out1_data
	#&	Node0_out1_data
	$&	Node0_out1_data
	%&	Node0_out1_data
	&&	Node0_out1_data
	'&	Node0_out1_data
	(&	Node0_out1_ready
	)&	Node0_out1_valid
	*&	Node1_clk
	+&	Node1_rst
	,&	Node1_in0_data
	-&	Node1_in0_data
	.&	Node1_in0_data
	/&	Node1_in0_data
	0&	Node1_in0_data
	1&	Node1_in0_data
	2&	Node1_in0_data
	3&	Node1_in0_data
	4&	Node1_in0_data
	5&	Node1_in0_data
	6&	Node1_in0_data
	7&	Node1_in0_data
	8&	Node1_in0_data
	9&	Node1_in0_data
	:&	Node1_in0_data
	;&	Node1_in0_data
	<&	Node1_in0_data
	=&	Node1_in0_data
	>&	Node1_in0_data
	?&	Node1_in0_data
	@&	Node1_in0_data
	A&	Node1_in0_data
	B&	Node1_in0_data
	C&	Node1_in0_data
	D&	Node1_in0_data
	E&	Node1_in0_data
	F&	Node1_in0_data
	G&	Node1_in0_data
	H&	Node1_in0_data
	I&	Node1_in0_data
	J&	Node1_in0_data
	K&	Node1_in0_data
	L&	Node1_in0_ready
	M&	Node1_in0_valid
	N&	Node1_in1_data
	O&	Node1_in1_data
	P&	Node1_in1_data
	Q&	Node1_in1_data
	R&	Node1_in1_data
	S&	Node1_in1_data
	T&	Node1_in1_data
	U&	Node1_in1_data
	V&	Node1_in1_data
	W&	Node1_in1_data
	X&	Node1_in1_data
	Y&	Node1_in1_data
	Z&	Node1_in1_data
	[&	Node1_in1_data
	\&	Node1_in1_data
	]&	Node1_in1_data
	^&	Node1_in1_data
	_&	Node1_in1_data
	`&	Node1_in1_data
	a&	Node1_in1_data
	b&	Node1_in1_data
	c&	Node1_in1_data
	d&	Node1_in1_data
	e&	Node1_in1_data
	f&	Node1_in1_data
	g&	Node1_in1_data
	h&	Node1_in1_data
	i&	Node1_in1_data
	j&	Node1_in1_data
	k&	Node1_in1_data
	l&	Node1_in1_data
	m&	Node1_in1_data
	n&	Node1_in1_ready
	o&	Node1_in1_valid
	p&	Node1_in2_data
	q&	Node1_in2_data
	r&	Node1_in2_data
	s&	Node1_in2_data
	t&	Node1_in2_data
	u&	Node1_in2_data
	v&	Node1_in2_data
	w&	Node1_in2_data
	x&	Node1_in2_data
	y&	Node1_in2_data
	z&	Node1_in2_data
	{&	Node1_in2_data
	|&	Node1_in2_data
	}&	Node1_in2_data
	~&	Node1_in2_data
	!'	Node1_in2_data
	"'	Node1_in2_data
	#'	Node1_in2_data
	$'	Node1_in2_data
	%'	Node1_in2_data
	&'	Node1_in2_data
	''	Node1_in2_data
	('	Node1_in2_data
	)'	Node1_in2_data
	*'	Node1_in2_data
	+'	Node1_in2_data
	,'	Node1_in2_data
	-'	Node1_in2_data
	.'	Node1_in2_data
	/'	Node1_in2_data
	0'	Node1_in2_data
	1'	Node1_in2_data
	2'	Node1_in2_ready
	3'	Node1_in2_valid
	4'	Node1_out0_data
	5'	Node1_out0_data
	6'	Node1_out0_data
	7'	Node1_out0_data
	8'	Node1_out0_data
	9'	Node1_out0_data
	:'	Node1_out0_data
	;'	Node1_out0_data
	<'	Node1_out0_data
	='	Node1_out0_data
	>'	Node1_out0_data
	?'	Node1_out0_data
	@'	Node1_out0_data
	A'	Node1_out0_data
	B'	Node1_out0_data
	C'	Node1_out0_data
	D'	Node1_out0_data
	E'	Node1_out0_data
	F'	Node1_out0_data
	G'	Node1_out0_data
	H'	Node1_out0_data
	I'	Node1_out0_data
	J'	Node1_out0_data
	K'	Node1_out0_data
	L'	Node1_out0_data
	M'	Node1_out0_data
	N'	Node1_out0_data
	O'	Node1_out0_data
	P'	Node1_out0_data
	Q'	Node1_out0_data
	R'	Node1_out0_data
	S'	Node1_out0_data
	T'	Node1_out0_ready
	U'	Node1_out0_valid
	V'	Node1_out1_data
	W'	Node1_out1_data
	X'	Node1_out1_data
	Y'	Node1_out1_data
	Z'	Node1_out1_data
	['	Node1_out1_data
	\'	Node1_out1_data
	]'	Node1_out1_data
	^'	Node1_out1_data
	_'	Node1_out1_data
	`'	Node1_out1_data
	a'	Node1_out1_data
	b'	Node1_out1_data
	c'	Node1_out1_data
	d'	Node1_out1_data
	e'	Node1_out1_data
	f'	Node1_out1_data
	g'	Node1_out1_data
	h'	Node1_out1_data
	i'	Node1_out1_data
	j'	Node1_out1_data
	k'	Node1_out1_data
	l'	Node1_out1_data
	m'	Node1_out1_data
	n'	Node1_out1_data
	o'	Node1_out1_data
	p'	Node1_out1_data
	q'	Node1_out1_data
	r'	Node1_out1_data
	s'	Node1_out1_data
	t'	Node1_out1_data
	u'	Node1_out1_data
	v'	Node1_out1_ready
	w'	Node1_out1_valid
	x'	Node1_out2_data
	y'	Node1_out2_data
	z'	Node1_out2_data
	{'	Node1_out2_data
	|'	Node1_out2_data
	}'	Node1_out2_data
	~'	Node1_out2_data
	!(	Node1_out2_data
	"(	Node1_out2_data
	#(	Node1_out2_data
	$(	Node1_out2_data
	%(	Node1_out2_data
	&(	Node1_out2_data
	'(	Node1_out2_data
	((	Node1_out2_data
	)(	Node1_out2_data
	*(	Node1_out2_data
	+(	Node1_out2_data
	,(	Node1_out2_data
	-(	Node1_out2_data
	.(	Node1_out2_data
	/(	Node1_out2_data
	0(	Node1_out2_data
	1(	Node1_out2_data
	2(	Node1_out2_data
	3(	Node1_out2_data
	4(	Node1_out2_data
	5(	Node1_out2_data
	6(	Node1_out2_data
	7(	Node1_out2_data
	8(	Node1_out2_data
	9(	Node1_out2_data
	:(	Node1_out2_ready
	;(	Node1_out2_valid
	<(	Node2_clk
	=(	Node2_rst
	>(	Node2_in0_data
	?(	Node2_in0_data
	@(	Node2_in0_data
	A(	Node2_in0_data
	B(	Node2_in0_data
	C(	Node2_in0_data
	D(	Node2_in0_data
	E(	Node2_in0_data
	F(	Node2_in0_data
	G(	Node2_in0_data
	H(	Node2_in0_data
	I(	Node2_in0_data
	J(	Node2_in0_data
	K(	Node2_in0_data
	L(	Node2_in0_data
	M(	Node2_in0_data
	N(	Node2_in0_data
	O(	Node2_in0_data
	P(	Node2_in0_data
	Q(	Node2_in0_data
	R(	Node2_in0_data
	S(	Node2_in0_data
	T(	Node2_in0_data
	U(	Node2_in0_data
	V(	Node2_in0_data
	W(	Node2_in0_data
	X(	Node2_in0_data
	Y(	Node2_in0_data
	Z(	Node2_in0_data
	[(	Node2_in0_data
	\(	Node2_in0_data
	](	Node2_in0_data
	^(	Node2_in0_ready
	_(	Node2_in0_valid
	`(	Node2_in1_data
	a(	Node2_in1_data
	b(	Node2_in1_data
	c(	Node2_in1_data
	d(	Node2_in1_data
	e(	Node2_in1_data
	f(	Node2_in1_data
	g(	Node2_in1_data
	h(	Node2_in1_data
	i(	Node2_in1_data
	j(	Node2_in1_data
	k(	Node2_in1_data
	l(	Node2_in1_data
	m(	Node2_in1_data
	n(	Node2_in1_data
	o(	Node2_in1_data
	p(	Node2_in1_data
	q(	Node2_in1_data
	r(	Node2_in1_data
	s(	Node2_in1_data
	t(	Node2_in1_data
	u(	Node2_in1_data
	v(	Node2_in1_data
	w(	Node2_in1_data
	x(	Node2_in1_data
	y(	Node2_in1_data
	z(	Node2_in1_data
	{(	Node2_in1_data
	|(	Node2_in1_data
	}(	Node2_in1_data
	~(	Node2_in1_data
	!)	Node2_in1_data
	")	Node2_in1_ready
	#)	Node2_in1_valid
	$)	Node2_in2_data
	%)	Node2_in2_data
	&)	Node2_in2_data
	')	Node2_in2_data
	()	Node2_in2_data
	))	Node2_in2_data
	*)	Node2_in2_data
	+)	Node2_in2_data
	,)	Node2_in2_data
	-)	Node2_in2_data
	.)	Node2_in2_data
	/)	Node2_in2_data
	0)	Node2_in2_data
	1)	Node2_in2_data
	2)	Node2_in2_data
	3)	Node2_in2_data
	4)	Node2_in2_data
	5)	Node2_in2_data
	6)	Node2_in2_data
	7)	Node2_in2_data
	8)	Node2_in2_data
	9)	Node2_in2_data
	:)	Node2_in2_data
	;)	Node2_in2_data
	<)	Node2_in2_data
	=)	Node2_in2_data
	>)	Node2_in2_data
	?)	Node2_in2_data
	@)	Node2_in2_data
	A)	Node2_in2_data
	B)	Node2_in2_data
	C)	Node2_in2_data
	D)	Node2_in2_ready
	E)	Node2_in2_valid
	F)	Node2_out0_data
	G)	Node2_out0_data
	H)	Node2_out0_data
	I)	Node2_out0_data
	J)	Node2_out0_data
	K)	Node2_out0_data
	L)	Node2_out0_data
	M)	Node2_out0_data
	N)	Node2_out0_data
	O)	Node2_out0_data
	P)	Node2_out0_data
	Q)	Node2_out0_data
	R)	Node2_out0_data
	S)	Node2_out0_data
	T)	Node2_out0_data
	U)	Node2_out0_data
	V)	Node2_out0_data
	W)	Node2_out0_data
	X)	Node2_out0_data
	Y)	Node2_out0_data
	Z)	Node2_out0_data
	[)	Node2_out0_data
	\)	Node2_out0_data
	])	Node2_out0_data
	^)	Node2_out0_data
	_)	Node2_out0_data
	`)	Node2_out0_data
	a)	Node2_out0_data
	b)	Node2_out0_data
	c)	Node2_out0_data
	d)	Node2_out0_data
	e)	Node2_out0_data
	f)	Node2_out0_ready
	g)	Node2_out0_valid
	h)	Node2_out1_data
	i)	Node2_out1_data
	j)	Node2_out1_data
	k)	Node2_out1_data
	l)	Node2_out1_data
	m)	Node2_out1_data
	n)	Node2_out1_data
	o)	Node2_out1_data
	p)	Node2_out1_data
	q)	Node2_out1_data
	r)	Node2_out1_data
	s)	Node2_out1_data
	t)	Node2_out1_data
	u)	Node2_out1_data
	v)	Node2_out1_data
	w)	Node2_out1_data
	x)	Node2_out1_data
	y)	Node2_out1_data
	z)	Node2_out1_data
	{)	Node2_out1_data
	|)	Node2_out1_data
	})	Node2_out1_data
	~)	Node2_out1_data
	!*	Node2_out1_data
	"*	Node2_out1_data
	#*	Node2_out1_data
	$*	Node2_out1_data
	%*	Node2_out1_data
	&*	Node2_out1_data
	'*	Node2_out1_data
	(*	Node2_out1_data
	)*	Node2_out1_data
	**	Node2_out1_ready
	+*	Node2_out1_valid
	,*	Node2_out2_data
	-*	Node2_out2_data
	.*	Node2_out2_data
	/*	Node2_out2_data
	0*	Node2_out2_data
	1*	Node2_out2_data
	2*	Node2_out2_data
	3*	Node2_out2_data
	4*	Node2_out2_data
	5*	Node2_out2_data
	6*	Node2_out2_data
	7*	Node2_out2_data
	8*	Node2_out2_data
	9*	Node2_out2_data
	:*	Node2_out2_data
	;*	Node2_out2_data
	<*	Node2_out2_data
	=*	Node2_out2_data
	>*	Node2_out2_data
	?*	Node2_out2_data
	@*	Node2_out2_data
	A*	Node2_out2_data
	B*	Node2_out2_data
	C*	Node2_out2_data
	D*	Node2_out2_data
	E*	Node2_out2_data
	F*	Node2_out2_data
	G*	Node2_out2_data
	H*	Node2_out2_data
	I*	Node2_out2_data
	J*	Node2_out2_data
	K*	Node2_out2_data
	L*	Node2_out2_ready
	M*	Node2_out2_valid
	N*	Node3_clk
	O*	Node3_rst
	P*	Node3_in0_data
	Q*	Node3_in0_data
	R*	Node3_in0_data
	S*	Node3_in0_data
	T*	Node3_in0_data
	U*	Node3_in0_data
	V*	Node3_in0_data
	W*	Node3_in0_data
	X*	Node3_in0_data
	Y*	Node3_in0_data
	Z*	Node3_in0_data
	[*	Node3_in0_data
	\*	Node3_in0_data
	]*	Node3_in0_data
	^*	Node3_in0_data
	_*	Node3_in0_data
	`*	Node3_in0_data
	a*	Node3_in0_data
	b*	Node3_in0_data
	c*	Node3_in0_data
	d*	Node3_in0_data
	e*	Node3_in0_data
	f*	Node3_in0_data
	g*	Node3_in0_data
	h*	Node3_in0_data
	i*	Node3_in0_data
	j*	Node3_in0_data
	k*	Node3_in0_data
	l*	Node3_in0_data
	m*	Node3_in0_data
	n*	Node3_in0_data
	o*	Node3_in0_data
	p*	Node3_in0_ready
	q*	Node3_in0_valid
	r*	Node3_in1_data
	s*	Node3_in1_data
	t*	Node3_in1_data
	u*	Node3_in1_data
	v*	Node3_in1_data
	w*	Node3_in1_data
	x*	Node3_in1_data
	y*	Node3_in1_data
	z*	Node3_in1_data
	{*	Node3_in1_data
	|*	Node3_in1_data
	}*	Node3_in1_data
	~*	Node3_in1_data
	!+	Node3_in1_data
	"+	Node3_in1_data
	#+	Node3_in1_data
	$+	Node3_in1_data
	%+	Node3_in1_data
	&+	Node3_in1_data
	'+	Node3_in1_data
	(+	Node3_in1_data
	)+	Node3_in1_data
	*+	Node3_in1_data
	++	Node3_in1_data
	,+	Node3_in1_data
	-+	Node3_in1_data
	.+	Node3_in1_data
	/+	Node3_in1_data
	0+	Node3_in1_data
	1+	Node3_in1_data
	2+	Node3_in1_data
	3+	Node3_in1_data
	4+	Node3_in1_ready
	5+	Node3_in1_valid
	6+	Node3_in2_data
	7+	Node3_in2_data
	8+	Node3_in2_data
	9+	Node3_in2_data
	:+	Node3_in2_data
	;+	Node3_in2_data
	<+	Node3_in2_data
	=+	Node3_in2_data
	>+	Node3_in2_data
	?+	Node3_in2_data
	@+	Node3_in2_data
	A+	Node3_in2_data
	B+	Node3_in2_data
	C+	Node3_in2_data
	D+	Node3_in2_data
	E+	Node3_in2_data
	F+	Node3_in2_data
	G+	Node3_in2_data
	H+	Node3_in2_data
	I+	Node3_in2_data
	J+	Node3_in2_data
	K+	Node3_in2_data
	L+	Node3_in2_data
	M+	Node3_in2_data
	N+	Node3_in2_data
	O+	Node3_in2_data
	P+	Node3_in2_data
	Q+	Node3_in2_data
	R+	Node3_in2_data
	S+	Node3_in2_data
	T+	Node3_in2_data
	U+	Node3_in2_data
	V+	Node3_in2_ready
	W+	Node3_in2_valid
	X+	Node3_out0_data
	Y+	Node3_out0_data
	Z+	Node3_out0_data
	[+	Node3_out0_data
	\+	Node3_out0_data
	]+	Node3_out0_data
	^+	Node3_out0_data
	_+	Node3_out0_data
	`+	Node3_out0_data
	a+	Node3_out0_data
	b+	Node3_out0_data
	c+	Node3_out0_data
	d+	Node3_out0_data
	e+	Node3_out0_data
	f+	Node3_out0_data
	g+	Node3_out0_data
	h+	Node3_out0_data
	i+	Node3_out0_data
	j+	Node3_out0_data
	k+	Node3_out0_data
	l+	Node3_out0_data
	m+	Node3_out0_data
	n+	Node3_out0_data
	o+	Node3_out0_data
	p+	Node3_out0_data
	q+	Node3_out0_data
	r+	Node3_out0_data
	s+	Node3_out0_data
	t+	Node3_out0_data
	u+	Node3_out0_data
	v+	Node3_out0_data
	w+	Node3_out0_data
	x+	Node3_out0_ready
	y+	Node3_out0_valid
	z+	Node3_out1_data
	{+	Node3_out1_data
	|+	Node3_out1_data
	}+	Node3_out1_data
	~+	Node3_out1_data
	!,	Node3_out1_data
	",	Node3_out1_data
	#,	Node3_out1_data
	$,	Node3_out1_data
	%,	Node3_out1_data
	&,	Node3_out1_data
	',	Node3_out1_data
	(,	Node3_out1_data
	),	Node3_out1_data
	*,	Node3_out1_data
	+,	Node3_out1_data
	,,	Node3_out1_data
	-,	Node3_out1_data
	.,	Node3_out1_data
	/,	Node3_out1_data
	0,	Node3_out1_data
	1,	Node3_out1_data
	2,	Node3_out1_data
	3,	Node3_out1_data
	4,	Node3_out1_data
	5,	Node3_out1_data
	6,	Node3_out1_data
	7,	Node3_out1_data
	8,	Node3_out1_data
	9,	Node3_out1_data
	:,	Node3_out1_data
	;,	Node3_out1_data
	<,	Node3_out1_ready
	=,	Node3_out1_valid
	>,	Node3_out2_data
	?,	Node3_out2_data
	@,	Node3_out2_data
	A,	Node3_out2_data
	B,	Node3_out2_data
	C,	Node3_out2_data
	D,	Node3_out2_data
	E,	Node3_out2_data
	F,	Node3_out2_data
	G,	Node3_out2_data
	H,	Node3_out2_data
	I,	Node3_out2_data
	J,	Node3_out2_data
	K,	Node3_out2_data
	L,	Node3_out2_data
	M,	Node3_out2_data
	N,	Node3_out2_data
	O,	Node3_out2_data
	P,	Node3_out2_data
	Q,	Node3_out2_data
	R,	Node3_out2_data
	S,	Node3_out2_data
	T,	Node3_out2_data
	U,	Node3_out2_data
	V,	Node3_out2_data
	W,	Node3_out2_data
	X,	Node3_out2_data
	Y,	Node3_out2_data
	Z,	Node3_out2_data
	[,	Node3_out2_data
	\,	Node3_out2_data
	],	Node3_out2_data
	^,	Node3_out2_ready
	_,	Node3_out2_valid
	`,	Node4_clk
	a,	Node4_rst
	b,	Node4_in0_data
	c,	Node4_in0_data
	d,	Node4_in0_data
	e,	Node4_in0_data
	f,	Node4_in0_data
	g,	Node4_in0_data
	h,	Node4_in0_data
	i,	Node4_in0_data
	j,	Node4_in0_data
	k,	Node4_in0_data
	l,	Node4_in0_data
	m,	Node4_in0_data
	n,	Node4_in0_data
	o,	Node4_in0_data
	p,	Node4_in0_data
	q,	Node4_in0_data
	r,	Node4_in0_data
	s,	Node4_in0_data
	t,	Node4_in0_data
	u,	Node4_in0_data
	v,	Node4_in0_data
	w,	Node4_in0_data
	x,	Node4_in0_data
	y,	Node4_in0_data
	z,	Node4_in0_data
	{,	Node4_in0_data
	|,	Node4_in0_data
	},	Node4_in0_data
	~,	Node4_in0_data
	!-	Node4_in0_data
	"-	Node4_in0_data
	#-	Node4_in0_data
	$-	Node4_in0_ready
	%-	Node4_in0_valid
	&-	Node4_in1_data
	'-	Node4_in1_data
	(-	Node4_in1_data
	)-	Node4_in1_data
	*-	Node4_in1_data
	+-	Node4_in1_data
	,-	Node4_in1_data
	--	Node4_in1_data
	.-	Node4_in1_data
	/-	Node4_in1_data
	0-	Node4_in1_data
	1-	Node4_in1_data
	2-	Node4_in1_data
	3-	Node4_in1_data
	4-	Node4_in1_data
	5-	Node4_in1_data
	6-	Node4_in1_data
	7-	Node4_in1_data
	8-	Node4_in1_data
	9-	Node4_in1_data
	:-	Node4_in1_data
	;-	Node4_in1_data
	<-	Node4_in1_data
	=-	Node4_in1_data
	>-	Node4_in1_data
	?-	Node4_in1_data
	@-	Node4_in1_data
	A-	Node4_in1_data
	B-	Node4_in1_data
	C-	Node4_in1_data
	D-	Node4_in1_data
	E-	Node4_in1_data
	F-	Node4_in1_ready
	G-	Node4_in1_valid
	H-	Node4_in2_data
	I-	Node4_in2_data
	J-	Node4_in2_data
	K-	Node4_in2_data
	L-	Node4_in2_data
	M-	Node4_in2_data
	N-	Node4_in2_data
	O-	Node4_in2_data
	P-	Node4_in2_data
	Q-	Node4_in2_data
	R-	Node4_in2_data
	S-	Node4_in2_data
	T-	Node4_in2_data
	U-	Node4_in2_data
	V-	Node4_in2_data
	W-	Node4_in2_data
	X-	Node4_in2_data
	Y-	Node4_in2_data
	Z-	Node4_in2_data
	[-	Node4_in2_data
	\-	Node4_in2_data
	]-	Node4_in2_data
	^-	Node4_in2_data
	_-	Node4_in2_data
	`-	Node4_in2_data
	a-	Node4_in2_data
	b-	Node4_in2_data
	c-	Node4_in2_data
	d-	Node4_in2_data
	e-	Node4_in2_data
	f-	Node4_in2_data
	g-	Node4_in2_data
	h-	Node4_in2_ready
	i-	Node4_in2_valid
	j-	Node4_out0_data
	k-	Node4_out0_data
	l-	Node4_out0_data
	m-	Node4_out0_data
	n-	Node4_out0_data
	o-	Node4_out0_data
	p-	Node4_out0_data
	q-	Node4_out0_data
	r-	Node4_out0_data
	s-	Node4_out0_data
	t-	Node4_out0_data
	u-	Node4_out0_data
	v-	Node4_out0_data
	w-	Node4_out0_data
	x-	Node4_out0_data
	y-	Node4_out0_data
	z-	Node4_out0_data
	{-	Node4_out0_data
	|-	Node4_out0_data
	}-	Node4_out0_data
	~-	Node4_out0_data
	!.	Node4_out0_data
	".	Node4_out0_data
	#.	Node4_out0_data
	$.	Node4_out0_data
	%.	Node4_out0_data
	&.	Node4_out0_data
	'.	Node4_out0_data
	(.	Node4_out0_data
	).	Node4_out0_data
	*.	Node4_out0_data
	+.	Node4_out0_data
	,.	Node4_out0_ready
	-.	Node4_out0_valid
	..	Node4_out1_data
	/.	Node4_out1_data
	0.	Node4_out1_data
	1.	Node4_out1_data
	2.	Node4_out1_data
	3.	Node4_out1_data
	4.	Node4_out1_data
	5.	Node4_out1_data
	6.	Node4_out1_data
	7.	Node4_out1_data
	8.	Node4_out1_data
	9.	Node4_out1_data
	:.	Node4_out1_data
	;.	Node4_out1_data
	<.	Node4_out1_data
	=.	Node4_out1_data
	>.	Node4_out1_data
	?.	Node4_out1_data
	@.	Node4_out1_data
	A.	Node4_out1_data
	B.	Node4_out1_data
	C.	Node4_out1_data
	D.	Node4_out1_data
	E.	Node4_out1_data
	F.	Node4_out1_data
	G.	Node4_out1_data
	H.	Node4_out1_data
	I.	Node4_out1_data
	J.	Node4_out1_data
	K.	Node4_out1_data
	L.	Node4_out1_data
	M.	Node4_out1_data
	N.	Node4_out1_ready
	O.	Node4_out1_valid
	P.	Node4_out2_data
	Q.	Node4_out2_data
	R.	Node4_out2_data
	S.	Node4_out2_data
	T.	Node4_out2_data
	U.	Node4_out2_data
	V.	Node4_out2_data
	W.	Node4_out2_data
	X.	Node4_out2_data
	Y.	Node4_out2_data
	Z.	Node4_out2_data
	[.	Node4_out2_data
	\.	Node4_out2_data
	].	Node4_out2_data
	^.	Node4_out2_data
	_.	Node4_out2_data
	`.	Node4_out2_data
	a.	Node4_out2_data
	b.	Node4_out2_data
	c.	Node4_out2_data
	d.	Node4_out2_data
	e.	Node4_out2_data
	f.	Node4_out2_data
	g.	Node4_out2_data
	h.	Node4_out2_data
	i.	Node4_out2_data
	j.	Node4_out2_data
	k.	Node4_out2_data
	l.	Node4_out2_data
	m.	Node4_out2_data
	n.	Node4_out2_data
	o.	Node4_out2_data
	p.	Node4_out2_ready
	q.	Node4_out2_valid
	r.	Node5_clk
	s.	Node5_rst
	t.	Node5_in0_data
	u.	Node5_in0_data
	v.	Node5_in0_data
	w.	Node5_in0_data
	x.	Node5_in0_data
	y.	Node5_in0_data
	z.	Node5_in0_data
	{.	Node5_in0_data
	|.	Node5_in0_data
	}.	Node5_in0_data
	~.	Node5_in0_data
	!/	Node5_in0_data
	"/	Node5_in0_data
	#/	Node5_in0_data
	$/	Node5_in0_data
	%/	Node5_in0_data
	&/	Node5_in0_data
	'/	Node5_in0_data
	(/	Node5_in0_data
	)/	Node5_in0_data
	*/	Node5_in0_data
	+/	Node5_in0_data
	,/	Node5_in0_data
	-/	Node5_in0_data
	./	Node5_in0_data
	//	Node5_in0_data
	0/	Node5_in0_data
	1/	Node5_in0_data
	2/	Node5_in0_data
	3/	Node5_in0_data
	4/	Node5_in0_data
	5/	Node5_in0_data
	6/	Node5_in0_ready
	7/	Node5_in0_valid
	8/	Node5_in1_data
	9/	Node5_in1_data
	:/	Node5_in1_data
	;/	Node5_in1_data
	</	Node5_in1_data
	=/	Node5_in1_data
	>/	Node5_in1_data
	?/	Node5_in1_data
	@/	Node5_in1_data
	A/	Node5_in1_data
	B/	Node5_in1_data
	C/	Node5_in1_data
	D/	Node5_in1_data
	E/	Node5_in1_data
	F/	Node5_in1_data
	G/	Node5_in1_data
	H/	Node5_in1_data
	I/	Node5_in1_data
	J/	Node5_in1_data
	K/	Node5_in1_data
	L/	Node5_in1_data
	M/	Node5_in1_data
	N/	Node5_in1_data
	O/	Node5_in1_data
	P/	Node5_in1_data
	Q/	Node5_in1_data
	R/	Node5_in1_data
	S/	Node5_in1_data
	T/	Node5_in1_data
	U/	Node5_in1_data
	V/	Node5_in1_data
	W/	Node5_in1_data
	X/	Node5_in1_ready
	Y/	Node5_in1_valid
	Z/	Node5_out0_data
	[/	Node5_out0_data
	\/	Node5_out0_data
	]/	Node5_out0_data
	^/	Node5_out0_data
	_/	Node5_out0_data
	`/	Node5_out0_data
	a/	Node5_out0_data
	b/	Node5_out0_data
	c/	Node5_out0_data
	d/	Node5_out0_data
	e/	Node5_out0_data
	f/	Node5_out0_data
	g/	Node5_out0_data
	h/	Node5_out0_data
	i/	Node5_out0_data
	j/	Node5_out0_data
	k/	Node5_out0_data
	l/	Node5_out0_data
	m/	Node5_out0_data
	n/	Node5_out0_data
	o/	Node5_out0_data
	p/	Node5_out0_data
	q/	Node5_out0_data
	r/	Node5_out0_data
	s/	Node5_out0_data
	t/	Node5_out0_data
	u/	Node5_out0_data
	v/	Node5_out0_data
	w/	Node5_out0_data
	x/	Node5_out0_data
	y/	Node5_out0_data
	z/	Node5_out0_ready
	{/	Node5_out0_valid
	|/	Node5_out1_data
	}/	Node5_out1_data
	~/	Node5_out1_data
	!0	Node5_out1_data
	"0	Node5_out1_data
	#0	Node5_out1_data
	$0	Node5_out1_data
	%0	Node5_out1_data
	&0	Node5_out1_data
	'0	Node5_out1_data
	(0	Node5_out1_data
	)0	Node5_out1_data
	*0	Node5_out1_data
	+0	Node5_out1_data
	,0	Node5_out1_data
	-0	Node5_out1_data
	.0	Node5_out1_data
	/0	Node5_out1_data
	00	Node5_out1_data
	10	Node5_out1_data
	20	Node5_out1_data
	30	Node5_out1_data
	40	Node5_out1_data
	50	Node5_out1_data
	60	Node5_out1_data
	70	Node5_out1_data
	80	Node5_out1_data
	90	Node5_out1_data
	:0	Node5_out1_data
	;0	Node5_out1_data
	<0	Node5_out1_data
	=0	Node5_out1_data
	>0	Node5_out1_ready
	?0	Node5_out1_valid
Scope: Router_Node0
	@0	N [32:0]
	A0	INDEX [32:0]
	B0	INPUTS [32:0]
	C0	OUTPUTS [32:0]
	D0	DATA_WIDTH [32:0]
	E0	TYPE_WIDTH [32:0]
	F0	REQUEST_WIDTH [32:0]
	G0	FlitPerPacket [32:0]
	H0	PhitPerFlit [32:0]
	I0	FIFO_DEPTH [32:0]
	\$	clk
	]$	rst
	"%	data_in_bus
	#%	data_in_bus
	$%	data_in_bus
	%%	data_in_bus
	&%	data_in_bus
	'%	data_in_bus
	(%	data_in_bus
	)%	data_in_bus
	*%	data_in_bus
	+%	data_in_bus
	,%	data_in_bus
	-%	data_in_bus
	.%	data_in_bus
	/%	data_in_bus
	0%	data_in_bus
	1%	data_in_bus
	2%	data_in_bus
	3%	data_in_bus
	4%	data_in_bus
	5%	data_in_bus
	6%	data_in_bus
	7%	data_in_bus
	8%	data_in_bus
	9%	data_in_bus
	:%	data_in_bus
	;%	data_in_bus
	<%	data_in_bus
	=%	data_in_bus
	>%	data_in_bus
	?%	data_in_bus
	@%	data_in_bus
	A%	data_in_bus
	^$	data_in_bus
	_$	data_in_bus
	`$	data_in_bus
	a$	data_in_bus
	b$	data_in_bus
	c$	data_in_bus
	d$	data_in_bus
	e$	data_in_bus
	f$	data_in_bus
	g$	data_in_bus
	h$	data_in_bus
	i$	data_in_bus
	j$	data_in_bus
	k$	data_in_bus
	l$	data_in_bus
	m$	data_in_bus
	n$	data_in_bus
	o$	data_in_bus
	p$	data_in_bus
	q$	data_in_bus
	r$	data_in_bus
	s$	data_in_bus
	t$	data_in_bus
	u$	data_in_bus
	v$	data_in_bus
	w$	data_in_bus
	x$	data_in_bus
	y$	data_in_bus
	z$	data_in_bus
	{$	data_in_bus
	|$	data_in_bus
	}$	data_in_bus
	C%	valid_in_bus
	!%	valid_in_bus
	B%	ready_in_bus
	~$	ready_in_bus
	f%	data_out_bus
	g%	data_out_bus
	h%	data_out_bus
	i%	data_out_bus
	j%	data_out_bus
	k%	data_out_bus
	l%	data_out_bus
	m%	data_out_bus
	n%	data_out_bus
	o%	data_out_bus
	p%	data_out_bus
	q%	data_out_bus
	r%	data_out_bus
	s%	data_out_bus
	t%	data_out_bus
	u%	data_out_bus
	v%	data_out_bus
	w%	data_out_bus
	x%	data_out_bus
	y%	data_out_bus
	z%	data_out_bus
	{%	data_out_bus
	|%	data_out_bus
	}%	data_out_bus
	~%	data_out_bus
	!&	data_out_bus
	"&	data_out_bus
	#&	data_out_bus
	$&	data_out_bus
	%&	data_out_bus
	&&	data_out_bus
	'&	data_out_bus
	D%	data_out_bus
	E%	data_out_bus
	F%	data_out_bus
	G%	data_out_bus
	H%	data_out_bus
	I%	data_out_bus
	J%	data_out_bus
	K%	data_out_bus
	L%	data_out_bus
	M%	data_out_bus
	N%	data_out_bus
	O%	data_out_bus
	P%	data_out_bus
	Q%	data_out_bus
	R%	data_out_bus
	S%	data_out_bus
	T%	data_out_bus
	U%	data_out_bus
	V%	data_out_bus
	W%	data_out_bus
	X%	data_out_bus
	Y%	data_out_bus
	Z%	data_out_bus
	[%	data_out_bus
	\%	data_out_bus
	]%	data_out_bus
	^%	data_out_bus
	_%	data_out_bus
	`%	data_out_bus
	a%	data_out_bus
	b%	data_out_bus
	c%	data_out_bus
	)&	valid_out_bus
	e%	valid_out_bus
	(&	ready_out_bus
	d%	ready_out_bus
	J0	data_in_switch
	K0	data_in_switch
	L0	data_in_switch
	M0	data_in_switch
	N0	data_in_switch
	O0	data_in_switch
	P0	data_in_switch
	Q0	data_in_switch
	R0	data_in_switch
	S0	data_in_switch
	T0	data_in_switch
	U0	data_in_switch
	V0	data_in_switch
	W0	data_in_switch
	X0	data_in_switch
	Y0	data_in_switch
	Z0	data_in_switch
	[0	data_in_switch
	\0	data_in_switch
	]0	data_in_switch
	^0	data_in_switch
	_0	data_in_switch
	`0	data_in_switch
	a0	data_in_switch
	b0	data_in_switch
	c0	data_in_switch
	d0	data_in_switch
	e0	data_in_switch
	f0	data_in_switch
	g0	data_in_switch
	h0	data_in_switch
	i0	data_in_switch
	j0	data_in_switch
	k0	data_in_switch
	l0	data_in_switch
	m0	data_in_switch
	n0	data_in_switch
	o0	data_in_switch
	p0	data_in_switch
	q0	data_in_switch
	r0	data_in_switch
	s0	data_in_switch
	t0	data_in_switch
	u0	data_in_switch
	v0	data_in_switch
	w0	data_in_switch
	x0	data_in_switch
	y0	data_in_switch
	z0	data_in_switch
	{0	data_in_switch
	|0	data_in_switch
	}0	data_in_switch
	~0	data_in_switch
	!1	data_in_switch
	"1	data_in_switch
	#1	data_in_switch
	$1	data_in_switch
	%1	data_in_switch
	&1	data_in_switch
	'1	data_in_switch
	(1	data_in_switch
	)1	data_in_switch
	*1	data_in_switch
	+1	data_in_switch
	,1	data_out_port
	-1	data_out_port
	.1	data_out_port
	/1	data_out_port
	01	data_out_port
	11	data_out_port
	21	data_out_port
	31	data_out_port
	41	data_out_port
	51	data_out_port
	61	data_out_port
	71	data_out_port
	81	data_out_port
	91	data_out_port
	:1	data_out_port
	;1	data_out_port
	<1	data_out_port
	=1	data_out_port
	>1	data_out_port
	?1	data_out_port
	@1	data_out_port
	A1	data_out_port
	B1	data_out_port
	C1	data_out_port
	D1	data_out_port
	E1	data_out_port
	F1	data_out_port
	G1	data_out_port
	H1	data_out_port
	I1	data_out_port
	J1	data_out_port
	K1	data_out_port
	L1	data_out_port
	M1	data_out_port
	N1	data_out_port
	O1	data_out_port
	P1	data_out_port
	Q1	data_out_port
	R1	data_out_port
	S1	data_out_port
	T1	data_out_port
	U1	data_out_port
	V1	data_out_port
	W1	data_out_port
	X1	data_out_port
	Y1	data_out_port
	Z1	data_out_port
	[1	data_out_port
	\1	data_out_port
	]1	data_out_port
	^1	data_out_port
	_1	data_out_port
	`1	data_out_port
	a1	data_out_port
	b1	data_out_port
	c1	data_out_port
	d1	data_out_port
	e1	data_out_port
	f1	data_out_port
	g1	data_out_port
	h1	data_out_port
	i1	data_out_port
	j1	data_out_port
	k1	data_out_port
	l1	valid_in_switch
	m1	valid_in_switch
	n1	valid_out_port
	o1	valid_out_port
	p1	ready_in_switch
	q1	ready_in_switch
	r1	ready_out_port
	s1	ready_out_port
	t1	routeRelieve
	u1	routeRelieve
	v1	routeReserveRequestValid
	w1	routeReserveRequestValid
	x1	routeReserveRequest
	y1	routeReserveRequest
	z1	routeReserveStatus
	{1	routeReserveStatus
Scope: genblk1
	|1	i [32:0]
Scope: port
	}1	N [32:0]
	~1	INDEX [32:0]
	!2	DATA_WIDTH [32:0]
	"2	TYPE_WIDTH [32:0]
	#2	REQUEST_WIDTH [32:0]
	$2	FlitPerPacket [32:0]
	%2	PhitPerFlit [32:0]
	&2	FIFO_DEPTH [32:0]
	\$	clk
	]$	rst
	"%	data_in
	#%	data_in
	$%	data_in
	%%	data_in
	&%	data_in
	'%	data_in
	(%	data_in
	)%	data_in
	*%	data_in
	+%	data_in
	,%	data_in
	-%	data_in
	.%	data_in
	/%	data_in
	0%	data_in
	1%	data_in
	2%	data_in
	3%	data_in
	4%	data_in
	5%	data_in
	6%	data_in
	7%	data_in
	8%	data_in
	9%	data_in
	:%	data_in
	;%	data_in
	<%	data_in
	=%	data_in
	>%	data_in
	?%	data_in
	@%	data_in
	A%	data_in
	C%	valid_in
	B%	ready_in
	,1	data_out
	-1	data_out
	.1	data_out
	/1	data_out
	01	data_out
	11	data_out
	21	data_out
	31	data_out
	41	data_out
	51	data_out
	61	data_out
	71	data_out
	81	data_out
	91	data_out
	:1	data_out
	;1	data_out
	<1	data_out
	=1	data_out
	>1	data_out
	?1	data_out
	@1	data_out
	A1	data_out
	B1	data_out
	C1	data_out
	D1	data_out
	E1	data_out
	F1	data_out
	G1	data_out
	H1	data_out
	I1	data_out
	J1	data_out
	K1	data_out
	n1	valid_out
	r1	ready_out
	t1	routeRelieve
	v1	routeReserveRequestValid
	x1	routeReserveRequest
	z1	routeReserveStatus
	'2	popBuffer
	(2	pushBuffer
	)2	full
	*2	empty
Scope: portControlLogic
	+2	N [32:0]
	,2	INDEX [32:0]
	-2	DATA_WIDTH [32:0]
	.2	TYPE_WIDTH [32:0]
	/2	REQUEST_WIDTH [32:0]
	02	FlitPerPacket [32:0]
	12	PhitPerFlit [32:0]
	\$	clk
	]$	rst
	"%	data_in
	#%	data_in
	$%	data_in
	%%	data_in
	&%	data_in
	'%	data_in
	(%	data_in
	)%	data_in
	*%	data_in
	+%	data_in
	,%	data_in
	-%	data_in
	.%	data_in
	/%	data_in
	0%	data_in
	1%	data_in
	2%	data_in
	3%	data_in
	4%	data_in
	5%	data_in
	6%	data_in
	7%	data_in
	8%	data_in
	9%	data_in
	:%	data_in
	;%	data_in
	<%	data_in
	=%	data_in
	>%	data_in
	?%	data_in
	@%	data_in
	A%	data_in
	C%	valid_in
	B%	ready_in
	n1	valid_out
	r1	ready_out
	,1	Flit
	-1	Flit
	.1	Flit
	/1	Flit
	01	Flit
	11	Flit
	21	Flit
	31	Flit
	41	Flit
	51	Flit
	61	Flit
	71	Flit
	81	Flit
	91	Flit
	:1	Flit
	;1	Flit
	<1	Flit
	=1	Flit
	>1	Flit
	?1	Flit
	@1	Flit
	A1	Flit
	B1	Flit
	C1	Flit
	D1	Flit
	E1	Flit
	F1	Flit
	G1	Flit
	H1	Flit
	I1	Flit
	J1	Flit
	K1	Flit
	'2	popBuffer
	(2	pushBuffer
	)2	full
	*2	empty
	t1	routeRelieve
	v1	routeReserveRequestValid
	x1	routeReserveRequest
	z1	routeReserveStatus
	22	FlitType
	32	FlitType
	42	reserveRoute
	52	routeReserveStatus_CFSM
	62	Head_Phit
	72	Head_Phit
	82	Head_Phit
	92	Head_Phit
	:2	Head_Phit
	;2	Head_Phit
	<2	Head_Phit
	=2	Head_Phit
	>2	Head_Phit
	?2	Head_Phit
	@2	Head_Phit
	A2	Head_Phit
	B2	Head_Phit
	C2	Head_Phit
	D2	Head_Phit
	E2	Head_Phit
	F2	Head_Phit
	G2	Head_Phit
	H2	Head_Phit
	I2	Head_Phit
	J2	Head_Phit
	K2	Head_Phit
	L2	Head_Phit
	M2	Head_Phit
	N2	Head_Phit
	O2	Head_Phit
	P2	Head_Phit
	Q2	Head_Phit
	R2	Head_Phit
	S2	Head_Phit
	T2	Head_Phit
	U2	Head_Phit
	V2	headFlitValid
	W2	phitCounter
	X2	headFlitStatus
	Y2	Handshake
Scope: controlFSM
	Z2	FlitPerPacket [32:0]
	[2	PhitPerFlit [32:0]
	\2	REQUEST_WIDTH [32:0]
	]2	TYPE_WIDTH [32:0]
	^2	HEAD [32:0]
	_2	PAYLOAD [32:0]
	`2	TAIL [32:0]
	a2	UnRouted [32:0]
	b2	HeadFlit [32:0]
	c2	ReservePath [32:0]
	d2	Route [32:0]
	e2	TailFlit [32:0]
	\$	clk
	]$	rst
	C%	valid_in
	B%	ready_in
	n1	valid_out
	r1	ready_out
	22	FlitType
	32	FlitType
	42	reserveRoute
	52	routeReserveStatus
	V2	headFlitValid
	f2	phitCounter
	X2	headFlitStatus
	'2	popBuffer
	(2	pushBuffer
	Y2	Handshake
	)2	full
	*2	empty
	t1	routeRelieve
	g2	state [3:0]
	h2	nextState [3:0]
	i2	flitCounter [4:0]
	j2	TailReceived
	k2	flitValid
	l2	pushBuffer_state
Scope: headFlitBuffer
	m2	N [32:0]
	n2	INDEX [32:0]
	o2	DATA_WIDTH [32:0]
	p2	PhitPerFlit [32:0]
	q2	REQUEST_WIDTH [32:0]
	\$	clk
	]$	rst
	Y2	Handshake
	"%	Head_Phit
	#%	Head_Phit
	$%	Head_Phit
	%%	Head_Phit
	&%	Head_Phit
	'%	Head_Phit
	(%	Head_Phit
	)%	Head_Phit
	*%	Head_Phit
	+%	Head_Phit
	,%	Head_Phit
	-%	Head_Phit
	.%	Head_Phit
	/%	Head_Phit
	0%	Head_Phit
	1%	Head_Phit
	2%	Head_Phit
	3%	Head_Phit
	4%	Head_Phit
	5%	Head_Phit
	6%	Head_Phit
	7%	Head_Phit
	8%	Head_Phit
	9%	Head_Phit
	:%	Head_Phit
	;%	Head_Phit
	<%	Head_Phit
	=%	Head_Phit
	>%	Head_Phit
	?%	Head_Phit
	@%	Head_Phit
	A%	Head_Phit
	V2	headFlitValid
	W2	phitCounter
	42	reserveRoute
	52	routeReserveStatus_CFSM
	X2	headFlitStatus
	v1	routeReserveRequestValid
	x1	routeReserveRequest
	z1	routeReserveStatus_Switch
	r2	headBuffer [32:0]
	s2	headFlitValidStatus
Scope: headFlitDecoder
	t2	N [32:0]
	u2	INDEX [32:0]
	v2	DATA_WIDTH [32:0]
	w2	PhitPerFlit [32:0]
	x2	REQUEST_WIDTH [32:0]
	y2	HeadFlit
	z2	HeadFlit
	{2	HeadFlit
	|2	HeadFlit
	}2	HeadFlit
	~2	HeadFlit
	!3	HeadFlit
	"3	HeadFlit
	#3	HeadFlit
	$3	HeadFlit
	%3	HeadFlit
	&3	HeadFlit
	'3	HeadFlit
	(3	HeadFlit
	)3	HeadFlit
	*3	HeadFlit
	+3	HeadFlit
	,3	HeadFlit
	-3	HeadFlit
	.3	HeadFlit
	/3	HeadFlit
	03	HeadFlit
	13	HeadFlit
	23	HeadFlit
	33	HeadFlit
	43	HeadFlit
	53	HeadFlit
	63	HeadFlit
	73	HeadFlit
	83	HeadFlit
	93	HeadFlit
	:3	HeadFlit
	x1	RequestMessage
	;3	pathString [2048:0]
	<3	index [32:0]
	=3	i [32:0]
	>3	Destination
	?3	Destination
	@3	Destination
Scope: flitIdentifier
	A3	DATA_WIDTH [32:0]
	B3	TYPE_WIDTH [32:0]
	C3	PhitPerFlit [32:0]
	D3	HeadIdentifier [32:0]
	E3	PayLoadIdentifier [32:0]
	F3	TailIdentifier [32:0]
	G3	DEFAULT [32:0]
	H3	HEAD [32:0]
	I3	PAYLOAD [32:0]
	J3	TAIL [32:0]
	,1	Flit
	-1	Flit
	.1	Flit
	/1	Flit
	01	Flit
	11	Flit
	21	Flit
	31	Flit
	41	Flit
	51	Flit
	61	Flit
	71	Flit
	81	Flit
	91	Flit
	:1	Flit
	;1	Flit
	<1	Flit
	=1	Flit
	>1	Flit
	?1	Flit
	@1	Flit
	A1	Flit
	B1	Flit
	C1	Flit
	D1	Flit
	E1	Flit
	F1	Flit
	G1	Flit
	H1	Flit
	I1	Flit
	J1	Flit
	K1	Flit
	K3	FlitType [2:0]
Scope: fifo
	L3	DATA_WIDTH [32:0]
	M3	FIFO_DEPTH [32:0]
	N3	ADDRESS_WIDTH [32:0]
	\$	clk
	]$	rst
	*2	empty
	'2	rd_en
	O3	dout [32:0]
	)2	full
	(2	wr_en
	"%	din
	#%	din
	$%	din
	%%	din
	&%	din
	'%	din
	(%	din
	)%	din
	*%	din
	+%	din
	,%	din
	-%	din
	.%	din
	/%	din
	0%	din
	1%	din
	2%	din
	3%	din
	4%	din
	5%	din
	6%	din
	7%	din
	8%	din
	9%	din
	:%	din
	;%	din
	<%	din
	=%	din
	>%	din
	?%	din
	@%	din
	A%	din
	P3	head_tail
	Q3	head_tail
	R3	head_tail
	S3	head_tail
	T3	head [4:0]
	U3	tail [4:0]
	V3	i [32:0]
Scope: genblk1
	W3	i [32:0]
Scope: port
	X3	N [32:0]
	Y3	INDEX [32:0]
	Z3	DATA_WIDTH [32:0]
	[3	TYPE_WIDTH [32:0]
	\3	REQUEST_WIDTH [32:0]
	]3	FlitPerPacket [32:0]
	^3	PhitPerFlit [32:0]
	_3	FIFO_DEPTH [32:0]
	\$	clk
	]$	rst
	^$	data_in
	_$	data_in
	`$	data_in
	a$	data_in
	b$	data_in
	c$	data_in
	d$	data_in
	e$	data_in
	f$	data_in
	g$	data_in
	h$	data_in
	i$	data_in
	j$	data_in
	k$	data_in
	l$	data_in
	m$	data_in
	n$	data_in
	o$	data_in
	p$	data_in
	q$	data_in
	r$	data_in
	s$	data_in
	t$	data_in
	u$	data_in
	v$	data_in
	w$	data_in
	x$	data_in
	y$	data_in
	z$	data_in
	{$	data_in
	|$	data_in
	}$	data_in
	!%	valid_in
	~$	ready_in
	L1	data_out
	M1	data_out
	N1	data_out
	O1	data_out
	P1	data_out
	Q1	data_out
	R1	data_out
	S1	data_out
	T1	data_out
	U1	data_out
	V1	data_out
	W1	data_out
	X1	data_out
	Y1	data_out
	Z1	data_out
	[1	data_out
	\1	data_out
	]1	data_out
	^1	data_out
	_1	data_out
	`1	data_out
	a1	data_out
	b1	data_out
	c1	data_out
	d1	data_out
	e1	data_out
	f1	data_out
	g1	data_out
	h1	data_out
	i1	data_out
	j1	data_out
	k1	data_out
	o1	valid_out
	s1	ready_out
	u1	routeRelieve
	w1	routeReserveRequestValid
	y1	routeReserveRequest
	{1	routeReserveStatus
	`3	popBuffer
	a3	pushBuffer
	b3	full
	c3	empty
Scope: portControlLogic
	d3	N [32:0]
	e3	INDEX [32:0]
	f3	DATA_WIDTH [32:0]
	g3	TYPE_WIDTH [32:0]
	h3	REQUEST_WIDTH [32:0]
	i3	FlitPerPacket [32:0]
	j3	PhitPerFlit [32:0]
	\$	clk
	]$	rst
	^$	data_in
	_$	data_in
	`$	data_in
	a$	data_in
	b$	data_in
	c$	data_in
	d$	data_in
	e$	data_in
	f$	data_in
	g$	data_in
	h$	data_in
	i$	data_in
	j$	data_in
	k$	data_in
	l$	data_in
	m$	data_in
	n$	data_in
	o$	data_in
	p$	data_in
	q$	data_in
	r$	data_in
	s$	data_in
	t$	data_in
	u$	data_in
	v$	data_in
	w$	data_in
	x$	data_in
	y$	data_in
	z$	data_in
	{$	data_in
	|$	data_in
	}$	data_in
	!%	valid_in
	~$	ready_in
	o1	valid_out
	s1	ready_out
	L1	Flit
	M1	Flit
	N1	Flit
	O1	Flit
	P1	Flit
	Q1	Flit
	R1	Flit
	S1	Flit
	T1	Flit
	U1	Flit
	V1	Flit
	W1	Flit
	X1	Flit
	Y1	Flit
	Z1	Flit
	[1	Flit
	\1	Flit
	]1	Flit
	^1	Flit
	_1	Flit
	`1	Flit
	a1	Flit
	b1	Flit
	c1	Flit
	d1	Flit
	e1	Flit
	f1	Flit
	g1	Flit
	h1	Flit
	i1	Flit
	j1	Flit
	k1	Flit
	`3	popBuffer
	a3	pushBuffer
	b3	full
	c3	empty
	u1	routeRelieve
	w1	routeReserveRequestValid
	y1	routeReserveRequest
	{1	routeReserveStatus
	k3	FlitType
	l3	FlitType
	m3	reserveRoute
	n3	routeReserveStatus_CFSM
	o3	Head_Phit
	p3	Head_Phit
	q3	Head_Phit
	r3	Head_Phit
	s3	Head_Phit
	t3	Head_Phit
	u3	Head_Phit
	v3	Head_Phit
	w3	Head_Phit
	x3	Head_Phit
	y3	Head_Phit
	z3	Head_Phit
	{3	Head_Phit
	|3	Head_Phit
	}3	Head_Phit
	~3	Head_Phit
	!4	Head_Phit
	"4	Head_Phit
	#4	Head_Phit
	$4	Head_Phit
	%4	Head_Phit
	&4	Head_Phit
	'4	Head_Phit
	(4	Head_Phit
	)4	Head_Phit
	*4	Head_Phit
	+4	Head_Phit
	,4	Head_Phit
	-4	Head_Phit
	.4	Head_Phit
	/4	Head_Phit
	04	Head_Phit
	14	headFlitValid
	24	phitCounter
	34	headFlitStatus
	44	Handshake
Scope: controlFSM
	54	FlitPerPacket [32:0]
	64	PhitPerFlit [32:0]
	74	REQUEST_WIDTH [32:0]
	84	TYPE_WIDTH [32:0]
	94	HEAD [32:0]
	:4	PAYLOAD [32:0]
	;4	TAIL [32:0]
	<4	UnRouted [32:0]
	=4	HeadFlit [32:0]
	>4	ReservePath [32:0]
	?4	Route [32:0]
	@4	TailFlit [32:0]
	\$	clk
	]$	rst
	!%	valid_in
	~$	ready_in
	o1	valid_out
	s1	ready_out
	k3	FlitType
	l3	FlitType
	m3	reserveRoute
	n3	routeReserveStatus
	14	headFlitValid
	A4	phitCounter
	34	headFlitStatus
	`3	popBuffer
	a3	pushBuffer
	44	Handshake
	b3	full
	c3	empty
	u1	routeRelieve
	B4	state [3:0]
	C4	nextState [3:0]
	D4	flitCounter [4:0]
	E4	TailReceived
	F4	flitValid
	G4	pushBuffer_state
Scope: headFlitBuffer
	H4	N [32:0]
	I4	INDEX [32:0]
	J4	DATA_WIDTH [32:0]
	K4	PhitPerFlit [32:0]
	L4	REQUEST_WIDTH [32:0]
	\$	clk
	]$	rst
	44	Handshake
	^$	Head_Phit
	_$	Head_Phit
	`$	Head_Phit
	a$	Head_Phit
	b$	Head_Phit
	c$	Head_Phit
	d$	Head_Phit
	e$	Head_Phit
	f$	Head_Phit
	g$	Head_Phit
	h$	Head_Phit
	i$	Head_Phit
	j$	Head_Phit
	k$	Head_Phit
	l$	Head_Phit
	m$	Head_Phit
	n$	Head_Phit
	o$	Head_Phit
	p$	Head_Phit
	q$	Head_Phit
	r$	Head_Phit
	s$	Head_Phit
	t$	Head_Phit
	u$	Head_Phit
	v$	Head_Phit
	w$	Head_Phit
	x$	Head_Phit
	y$	Head_Phit
	z$	Head_Phit
	{$	Head_Phit
	|$	Head_Phit
	}$	Head_Phit
	14	headFlitValid
	24	phitCounter
	m3	reserveRoute
	n3	routeReserveStatus_CFSM
	34	headFlitStatus
	w1	routeReserveRequestValid
	y1	routeReserveRequest
	{1	routeReserveStatus_Switch
	M4	headBuffer [32:0]
	N4	headFlitValidStatus
Scope: headFlitDecoder
	O4	N [32:0]
	P4	INDEX [32:0]
	Q4	DATA_WIDTH [32:0]
	R4	PhitPerFlit [32:0]
	S4	REQUEST_WIDTH [32:0]
	T4	HeadFlit
	U4	HeadFlit
	V4	HeadFlit
	W4	HeadFlit
	X4	HeadFlit
	Y4	HeadFlit
	Z4	HeadFlit
	[4	HeadFlit
	\4	HeadFlit
	]4	HeadFlit
	^4	HeadFlit
	_4	HeadFlit
	`4	HeadFlit
	a4	HeadFlit
	b4	HeadFlit
	c4	HeadFlit
	d4	HeadFlit
	e4	HeadFlit
	f4	HeadFlit
	g4	HeadFlit
	h4	HeadFlit
	i4	HeadFlit
	j4	HeadFlit
	k4	HeadFlit
	l4	HeadFlit
	m4	HeadFlit
	n4	HeadFlit
	o4	HeadFlit
	p4	HeadFlit
	q4	HeadFlit
	r4	HeadFlit
	s4	HeadFlit
	y1	RequestMessage
	t4	pathString [2048:0]
	u4	index [32:0]
	v4	i [32:0]
	w4	Destination
	x4	Destination
	y4	Destination
Scope: flitIdentifier
	z4	DATA_WIDTH [32:0]
	{4	TYPE_WIDTH [32:0]
	|4	PhitPerFlit [32:0]
	}4	HeadIdentifier [32:0]
	~4	PayLoadIdentifier [32:0]
	!5	TailIdentifier [32:0]
	"5	DEFAULT [32:0]
	#5	HEAD [32:0]
	$5	PAYLOAD [32:0]
	%5	TAIL [32:0]
	L1	Flit
	M1	Flit
	N1	Flit
	O1	Flit
	P1	Flit
	Q1	Flit
	R1	Flit
	S1	Flit
	T1	Flit
	U1	Flit
	V1	Flit
	W1	Flit
	X1	Flit
	Y1	Flit
	Z1	Flit
	[1	Flit
	\1	Flit
	]1	Flit
	^1	Flit
	_1	Flit
	`1	Flit
	a1	Flit
	b1	Flit
	c1	Flit
	d1	Flit
	e1	Flit
	f1	Flit
	g1	Flit
	h1	Flit
	i1	Flit
	j1	Flit
	k1	Flit
	&5	FlitType [2:0]
Scope: fifo
	'5	DATA_WIDTH [32:0]
	(5	FIFO_DEPTH [32:0]
	)5	ADDRESS_WIDTH [32:0]
	\$	clk
	]$	rst
	c3	empty
	`3	rd_en
	*5	dout [32:0]
	b3	full
	a3	wr_en
	^$	din
	_$	din
	`$	din
	a$	din
	b$	din
	c$	din
	d$	din
	e$	din
	f$	din
	g$	din
	h$	din
	i$	din
	j$	din
	k$	din
	l$	din
	m$	din
	n$	din
	o$	din
	p$	din
	q$	din
	r$	din
	s$	din
	t$	din
	u$	din
	v$	din
	w$	din
	x$	din
	y$	din
	z$	din
	{$	din
	|$	din
	}$	din
	+5	head_tail
	,5	head_tail
	-5	head_tail
	.5	head_tail
	/5	head [4:0]
	05	tail [4:0]
	15	i [32:0]
Scope: switch
	25	N [32:0]
	35	INPUTS [32:0]
	45	OUTPUTS [32:0]
	55	DATA_WIDTH [32:0]
	65	REQUEST_WIDTH [32:0]
	\$	clk
	]$	rst
	v1	routeReserveRequestValid
	w1	routeReserveRequestValid
	x1	routeReserveRequest
	y1	routeReserveRequest
	t1	routeRelieve
	u1	routeRelieve
	z1	routeReserveStatus
	{1	routeReserveStatus
	J0	data_in
	K0	data_in
	L0	data_in
	M0	data_in
	N0	data_in
	O0	data_in
	P0	data_in
	Q0	data_in
	R0	data_in
	S0	data_in
	T0	data_in
	U0	data_in
	V0	data_in
	W0	data_in
	X0	data_in
	Y0	data_in
	Z0	data_in
	[0	data_in
	\0	data_in
	]0	data_in
	^0	data_in
	_0	data_in
	`0	data_in
	a0	data_in
	b0	data_in
	c0	data_in
	d0	data_in
	e0	data_in
	f0	data_in
	g0	data_in
	h0	data_in
	i0	data_in
	j0	data_in
	k0	data_in
	l0	data_in
	m0	data_in
	n0	data_in
	o0	data_in
	p0	data_in
	q0	data_in
	r0	data_in
	s0	data_in
	t0	data_in
	u0	data_in
	v0	data_in
	w0	data_in
	x0	data_in
	y0	data_in
	z0	data_in
	{0	data_in
	|0	data_in
	}0	data_in
	~0	data_in
	!1	data_in
	"1	data_in
	#1	data_in
	$1	data_in
	%1	data_in
	&1	data_in
	'1	data_in
	(1	data_in
	)1	data_in
	*1	data_in
	+1	data_in
	l1	valid_in
	m1	valid_in
	p1	ready_in
	q1	ready_in
	f%	data_out
	g%	data_out
	h%	data_out
	i%	data_out
	j%	data_out
	k%	data_out
	l%	data_out
	m%	data_out
	n%	data_out
	o%	data_out
	p%	data_out
	q%	data_out
	r%	data_out
	s%	data_out
	t%	data_out
	u%	data_out
	v%	data_out
	w%	data_out
	x%	data_out
	y%	data_out
	z%	data_out
	{%	data_out
	|%	data_out
	}%	data_out
	~%	data_out
	!&	data_out
	"&	data_out
	#&	data_out
	$&	data_out
	%&	data_out
	&&	data_out
	'&	data_out
	D%	data_out
	E%	data_out
	F%	data_out
	G%	data_out
	H%	data_out
	I%	data_out
	J%	data_out
	K%	data_out
	L%	data_out
	M%	data_out
	N%	data_out
	O%	data_out
	P%	data_out
	Q%	data_out
	R%	data_out
	S%	data_out
	T%	data_out
	U%	data_out
	V%	data_out
	W%	data_out
	X%	data_out
	Y%	data_out
	Z%	data_out
	[%	data_out
	\%	data_out
	]%	data_out
	^%	data_out
	_%	data_out
	`%	data_out
	a%	data_out
	b%	data_out
	c%	data_out
	)&	valid_out
	e%	valid_out
	(&	ready_out
	d%	ready_out
	75	routeSelect
	85	routeSelect
	95	outputBusy
	:5	outputBusy
	;5	PortReserved
	<5	PortReserved
Scope: switchControl
	=5	N [32:0]
	>5	INPUTS [32:0]
	?5	OUTPUTS [32:0]
	@5	DATA_WIDTH [32:0]
	A5	REQUEST_WIDTH [32:0]
	B5	STATE_WIDTH [32:0]
	C5	UnRouted [32:0]
	D5	Check [32:0]
	E5	Arbitrate [32:0]
	F5	PathReserved1 [32:0]
	G5	PathReserved0 [32:0]
	\$	clk
	]$	rst
	v1	routeReserveRequestValid
	w1	routeReserveRequestValid
	x1	routeReserveRequest
	y1	routeReserveRequest
	t1	routeRelieve
	u1	routeRelieve
	H5	routeReserveStatus [2:0]
	I5	routeSelect [2:0]
	J5	outputBusy [2:0]
	K5	PortReserved [2:0]
	L5	switchRequest [2:0]
	M5	outputRelieve [2:0]
	N5	PortBusy [2:0]
	O5	Conflict [2:0]
	P5	switchState [6:0]
	Q5	switchState_next [6:0]
	R5	i0 [32:0]
	S5	i1 [32:0]
	T5	i2 [32:0]
	U5	i3 [32:0]
	V5	i4 [32:0]
	W5	j4 [32:0]
	X5	i5 [32:0]
	Y5	i6 [32:0]
	Z5	i7 [32:0]
	[5	j7 [32:0]
	\5	i8 [32:0]
	]5	j8 [32:0]
	^5	i9 [32:0]
	_5	j9 [32:0]
Scope: muxSwitch
	`5	INPUTS [32:0]
	a5	OUTPUTS [32:0]
	b5	DATA_WIDTH [32:0]
	c5	REQUEST_WIDTH [32:0]
	75	routeSelect
	85	routeSelect
	95	outputBusy
	:5	outputBusy
	;5	PortReserved
	<5	PortReserved
	J0	data_in
	K0	data_in
	L0	data_in
	M0	data_in
	N0	data_in
	O0	data_in
	P0	data_in
	Q0	data_in
	R0	data_in
	S0	data_in
	T0	data_in
	U0	data_in
	V0	data_in
	W0	data_in
	X0	data_in
	Y0	data_in
	Z0	data_in
	[0	data_in
	\0	data_in
	]0	data_in
	^0	data_in
	_0	data_in
	`0	data_in
	a0	data_in
	b0	data_in
	c0	data_in
	d0	data_in
	e0	data_in
	f0	data_in
	g0	data_in
	h0	data_in
	i0	data_in
	j0	data_in
	k0	data_in
	l0	data_in
	m0	data_in
	n0	data_in
	o0	data_in
	p0	data_in
	q0	data_in
	r0	data_in
	s0	data_in
	t0	data_in
	u0	data_in
	v0	data_in
	w0	data_in
	x0	data_in
	y0	data_in
	z0	data_in
	{0	data_in
	|0	data_in
	}0	data_in
	~0	data_in
	!1	data_in
	"1	data_in
	#1	data_in
	$1	data_in
	%1	data_in
	&1	data_in
	'1	data_in
	(1	data_in
	)1	data_in
	*1	data_in
	+1	data_in
	l1	valid_in
	m1	valid_in
	d5	ready_in [2:0]
	e5	data_out [64:0]
	f5	valid_out [2:0]
	(&	ready_out
	d%	ready_out
	g5	i1 [32:0]
	h5	j1 [32:0]
	i5	i2 [32:0]
	j5	j2 [32:0]
	k5	i3 [32:0]
	l5	j3 [32:0]
Scope: Router_Node1
	m5	N [32:0]
	n5	INDEX [32:0]
	o5	INPUTS [32:0]
	p5	OUTPUTS [32:0]
	q5	DATA_WIDTH [32:0]
	r5	TYPE_WIDTH [32:0]
	s5	REQUEST_WIDTH [32:0]
	t5	FlitPerPacket [32:0]
	u5	PhitPerFlit [32:0]
	v5	FIFO_DEPTH [32:0]
	*&	clk
	+&	rst
	p&	data_in_bus
	q&	data_in_bus
	r&	data_in_bus
	s&	data_in_bus
	t&	data_in_bus
	u&	data_in_bus
	v&	data_in_bus
	w&	data_in_bus
	x&	data_in_bus
	y&	data_in_bus
	z&	data_in_bus
	{&	data_in_bus
	|&	data_in_bus
	}&	data_in_bus
	~&	data_in_bus
	!'	data_in_bus
	"'	data_in_bus
	#'	data_in_bus
	$'	data_in_bus
	%'	data_in_bus
	&'	data_in_bus
	''	data_in_bus
	('	data_in_bus
	)'	data_in_bus
	*'	data_in_bus
	+'	data_in_bus
	,'	data_in_bus
	-'	data_in_bus
	.'	data_in_bus
	/'	data_in_bus
	0'	data_in_bus
	1'	data_in_bus
	N&	data_in_bus
	O&	data_in_bus
	P&	data_in_bus
	Q&	data_in_bus
	R&	data_in_bus
	S&	data_in_bus
	T&	data_in_bus
	U&	data_in_bus
	V&	data_in_bus
	W&	data_in_bus
	X&	data_in_bus
	Y&	data_in_bus
	Z&	data_in_bus
	[&	data_in_bus
	\&	data_in_bus
	]&	data_in_bus
	^&	data_in_bus
	_&	data_in_bus
	`&	data_in_bus
	a&	data_in_bus
	b&	data_in_bus
	c&	data_in_bus
	d&	data_in_bus
	e&	data_in_bus
	f&	data_in_bus
	g&	data_in_bus
	h&	data_in_bus
	i&	data_in_bus
	j&	data_in_bus
	k&	data_in_bus
	l&	data_in_bus
	m&	data_in_bus
	,&	data_in_bus
	-&	data_in_bus
	.&	data_in_bus
	/&	data_in_bus
	0&	data_in_bus
	1&	data_in_bus
	2&	data_in_bus
	3&	data_in_bus
	4&	data_in_bus
	5&	data_in_bus
	6&	data_in_bus
	7&	data_in_bus
	8&	data_in_bus
	9&	data_in_bus
	:&	data_in_bus
	;&	data_in_bus
	<&	data_in_bus
	=&	data_in_bus
	>&	data_in_bus
	?&	data_in_bus
	@&	data_in_bus
	A&	data_in_bus
	B&	data_in_bus
	C&	data_in_bus
	D&	data_in_bus
	E&	data_in_bus
	F&	data_in_bus
	G&	data_in_bus
	H&	data_in_bus
	I&	data_in_bus
	J&	data_in_bus
	K&	data_in_bus
	3'	valid_in_bus
	o&	valid_in_bus
	M&	valid_in_bus
	2'	ready_in_bus
	n&	ready_in_bus
	L&	ready_in_bus
	x'	data_out_bus
	y'	data_out_bus
	z'	data_out_bus
	{'	data_out_bus
	|'	data_out_bus
	}'	data_out_bus
	~'	data_out_bus
	!(	data_out_bus
	"(	data_out_bus
	#(	data_out_bus
	$(	data_out_bus
	%(	data_out_bus
	&(	data_out_bus
	'(	data_out_bus
	((	data_out_bus
	)(	data_out_bus
	*(	data_out_bus
	+(	data_out_bus
	,(	data_out_bus
	-(	data_out_bus
	.(	data_out_bus
	/(	data_out_bus
	0(	data_out_bus
	1(	data_out_bus
	2(	data_out_bus
	3(	data_out_bus
	4(	data_out_bus
	5(	data_out_bus
	6(	data_out_bus
	7(	data_out_bus
	8(	data_out_bus
	9(	data_out_bus
	V'	data_out_bus
	W'	data_out_bus
	X'	data_out_bus
	Y'	data_out_bus
	Z'	data_out_bus
	['	data_out_bus
	\'	data_out_bus
	]'	data_out_bus
	^'	data_out_bus
	_'	data_out_bus
	`'	data_out_bus
	a'	data_out_bus
	b'	data_out_bus
	c'	data_out_bus
	d'	data_out_bus
	e'	data_out_bus
	f'	data_out_bus
	g'	data_out_bus
	h'	data_out_bus
	i'	data_out_bus
	j'	data_out_bus
	k'	data_out_bus
	l'	data_out_bus
	m'	data_out_bus
	n'	data_out_bus
	o'	data_out_bus
	p'	data_out_bus
	q'	data_out_bus
	r'	data_out_bus
	s'	data_out_bus
	t'	data_out_bus
	u'	data_out_bus
	4'	data_out_bus
	5'	data_out_bus
	6'	data_out_bus
	7'	data_out_bus
	8'	data_out_bus
	9'	data_out_bus
	:'	data_out_bus
	;'	data_out_bus
	<'	data_out_bus
	='	data_out_bus
	>'	data_out_bus
	?'	data_out_bus
	@'	data_out_bus
	A'	data_out_bus
	B'	data_out_bus
	C'	data_out_bus
	D'	data_out_bus
	E'	data_out_bus
	F'	data_out_bus
	G'	data_out_bus
	H'	data_out_bus
	I'	data_out_bus
	J'	data_out_bus
	K'	data_out_bus
	L'	data_out_bus
	M'	data_out_bus
	N'	data_out_bus
	O'	data_out_bus
	P'	data_out_bus
	Q'	data_out_bus
	R'	data_out_bus
	S'	data_out_bus
	;(	valid_out_bus
	w'	valid_out_bus
	U'	valid_out_bus
	:(	ready_out_bus
	v'	ready_out_bus
	T'	ready_out_bus
	w5	data_in_switch
	x5	data_in_switch
	y5	data_in_switch
	z5	data_in_switch
	{5	data_in_switch
	|5	data_in_switch
	}5	data_in_switch
	~5	data_in_switch
	!6	data_in_switch
	"6	data_in_switch
	#6	data_in_switch
	$6	data_in_switch
	%6	data_in_switch
	&6	data_in_switch
	'6	data_in_switch
	(6	data_in_switch
	)6	data_in_switch
	*6	data_in_switch
	+6	data_in_switch
	,6	data_in_switch
	-6	data_in_switch
	.6	data_in_switch
	/6	data_in_switch
	06	data_in_switch
	16	data_in_switch
	26	data_in_switch
	36	data_in_switch
	46	data_in_switch
	56	data_in_switch
	66	data_in_switch
	76	data_in_switch
	86	data_in_switch
	96	data_in_switch
	:6	data_in_switch
	;6	data_in_switch
	<6	data_in_switch
	=6	data_in_switch
	>6	data_in_switch
	?6	data_in_switch
	@6	data_in_switch
	A6	data_in_switch
	B6	data_in_switch
	C6	data_in_switch
	D6	data_in_switch
	E6	data_in_switch
	F6	data_in_switch
	G6	data_in_switch
	H6	data_in_switch
	I6	data_in_switch
	J6	data_in_switch
	K6	data_in_switch
	L6	data_in_switch
	M6	data_in_switch
	N6	data_in_switch
	O6	data_in_switch
	P6	data_in_switch
	Q6	data_in_switch
	R6	data_in_switch
	S6	data_in_switch
	T6	data_in_switch
	U6	data_in_switch
	V6	data_in_switch
	W6	data_in_switch
	X6	data_in_switch
	Y6	data_in_switch
	Z6	data_in_switch
	[6	data_in_switch
	\6	data_in_switch
	]6	data_in_switch
	^6	data_in_switch
	_6	data_in_switch
	`6	data_in_switch
	a6	data_in_switch
	b6	data_in_switch
	c6	data_in_switch
	d6	data_in_switch
	e6	data_in_switch
	f6	data_in_switch
	g6	data_in_switch
	h6	data_in_switch
	i6	data_in_switch
	j6	data_in_switch
	k6	data_in_switch
	l6	data_in_switch
	m6	data_in_switch
	n6	data_in_switch
	o6	data_in_switch
	p6	data_in_switch
	q6	data_in_switch
	r6	data_in_switch
	s6	data_in_switch
	t6	data_in_switch
	u6	data_in_switch
	v6	data_in_switch
	w6	data_in_switch
	x6	data_in_switch
	y6	data_out_port
	z6	data_out_port
	{6	data_out_port
	|6	data_out_port
	}6	data_out_port
	~6	data_out_port
	!7	data_out_port
	"7	data_out_port
	#7	data_out_port
	$7	data_out_port
	%7	data_out_port
	&7	data_out_port
	'7	data_out_port
	(7	data_out_port
	)7	data_out_port
	*7	data_out_port
	+7	data_out_port
	,7	data_out_port
	-7	data_out_port
	.7	data_out_port
	/7	data_out_port
	07	data_out_port
	17	data_out_port
	27	data_out_port
	37	data_out_port
	47	data_out_port
	57	data_out_port
	67	data_out_port
	77	data_out_port
	87	data_out_port
	97	data_out_port
	:7	data_out_port
	;7	data_out_port
	<7	data_out_port
	=7	data_out_port
	>7	data_out_port
	?7	data_out_port
	@7	data_out_port
	A7	data_out_port
	B7	data_out_port
	C7	data_out_port
	D7	data_out_port
	E7	data_out_port
	F7	data_out_port
	G7	data_out_port
	H7	data_out_port
	I7	data_out_port
	J7	data_out_port
	K7	data_out_port
	L7	data_out_port
	M7	data_out_port
	N7	data_out_port
	O7	data_out_port
	P7	data_out_port
	Q7	data_out_port
	R7	data_out_port
	S7	data_out_port
	T7	data_out_port
	U7	data_out_port
	V7	data_out_port
	W7	data_out_port
	X7	data_out_port
	Y7	data_out_port
	Z7	data_out_port
	[7	data_out_port
	\7	data_out_port
	]7	data_out_port
	^7	data_out_port
	_7	data_out_port
	`7	data_out_port
	a7	data_out_port
	b7	data_out_port
	c7	data_out_port
	d7	data_out_port
	e7	data_out_port
	f7	data_out_port
	g7	data_out_port
	h7	data_out_port
	i7	data_out_port
	j7	data_out_port
	k7	data_out_port
	l7	data_out_port
	m7	data_out_port
	n7	data_out_port
	o7	data_out_port
	p7	data_out_port
	q7	data_out_port
	r7	data_out_port
	s7	data_out_port
	t7	data_out_port
	u7	data_out_port
	v7	data_out_port
	w7	data_out_port
	x7	data_out_port
	y7	data_out_port
	z7	data_out_port
	{7	valid_in_switch
	|7	valid_in_switch
	}7	valid_in_switch
	~7	valid_out_port
	!8	valid_out_port
	"8	valid_out_port
	#8	ready_in_switch
	$8	ready_in_switch
	%8	ready_in_switch
	&8	ready_out_port
	'8	ready_out_port
	(8	ready_out_port
	)8	routeRelieve
	*8	routeRelieve
	+8	routeRelieve
	,8	routeReserveRequestValid
	-8	routeReserveRequestValid
	.8	routeReserveRequestValid
	/8	routeReserveRequest
	08	routeReserveRequest
	18	routeReserveRequest
	28	routeReserveRequest
	38	routeReserveRequest
	48	routeReserveRequest
	58	routeReserveStatus
	68	routeReserveStatus
	78	routeReserveStatus
Scope: genblk1
	88	i [32:0]
Scope: port
	98	N [32:0]
	:8	INDEX [32:0]
	;8	DATA_WIDTH [32:0]
	<8	TYPE_WIDTH [32:0]
	=8	REQUEST_WIDTH [32:0]
	>8	FlitPerPacket [32:0]
	?8	PhitPerFlit [32:0]
	@8	FIFO_DEPTH [32:0]
	*&	clk
	+&	rst
	p&	data_in
	q&	data_in
	r&	data_in
	s&	data_in
	t&	data_in
	u&	data_in
	v&	data_in
	w&	data_in
	x&	data_in
	y&	data_in
	z&	data_in
	{&	data_in
	|&	data_in
	}&	data_in
	~&	data_in
	!'	data_in
	"'	data_in
	#'	data_in
	$'	data_in
	%'	data_in
	&'	data_in
	''	data_in
	('	data_in
	)'	data_in
	*'	data_in
	+'	data_in
	,'	data_in
	-'	data_in
	.'	data_in
	/'	data_in
	0'	data_in
	1'	data_in
	3'	valid_in
	2'	ready_in
	y6	data_out
	z6	data_out
	{6	data_out
	|6	data_out
	}6	data_out
	~6	data_out
	!7	data_out
	"7	data_out
	#7	data_out
	$7	data_out
	%7	data_out
	&7	data_out
	'7	data_out
	(7	data_out
	)7	data_out
	*7	data_out
	+7	data_out
	,7	data_out
	-7	data_out
	.7	data_out
	/7	data_out
	07	data_out
	17	data_out
	27	data_out
	37	data_out
	47	data_out
	57	data_out
	67	data_out
	77	data_out
	87	data_out
	97	data_out
	:7	data_out
	~7	valid_out
	&8	ready_out
	)8	routeRelieve
	,8	routeReserveRequestValid
	/8	routeReserveRequest
	08	routeReserveRequest
	58	routeReserveStatus
	A8	popBuffer
	B8	pushBuffer
	C8	full
	D8	empty
Scope: portControlLogic
	E8	N [32:0]
	F8	INDEX [32:0]
	G8	DATA_WIDTH [32:0]
	H8	TYPE_WIDTH [32:0]
	I8	REQUEST_WIDTH [32:0]
	J8	FlitPerPacket [32:0]
	K8	PhitPerFlit [32:0]
	*&	clk
	+&	rst
	p&	data_in
	q&	data_in
	r&	data_in
	s&	data_in
	t&	data_in
	u&	data_in
	v&	data_in
	w&	data_in
	x&	data_in
	y&	data_in
	z&	data_in
	{&	data_in
	|&	data_in
	}&	data_in
	~&	data_in
	!'	data_in
	"'	data_in
	#'	data_in
	$'	data_in
	%'	data_in
	&'	data_in
	''	data_in
	('	data_in
	)'	data_in
	*'	data_in
	+'	data_in
	,'	data_in
	-'	data_in
	.'	data_in
	/'	data_in
	0'	data_in
	1'	data_in
	3'	valid_in
	2'	ready_in
	~7	valid_out
	&8	ready_out
	y6	Flit
	z6	Flit
	{6	Flit
	|6	Flit
	}6	Flit
	~6	Flit
	!7	Flit
	"7	Flit
	#7	Flit
	$7	Flit
	%7	Flit
	&7	Flit
	'7	Flit
	(7	Flit
	)7	Flit
	*7	Flit
	+7	Flit
	,7	Flit
	-7	Flit
	.7	Flit
	/7	Flit
	07	Flit
	17	Flit
	27	Flit
	37	Flit
	47	Flit
	57	Flit
	67	Flit
	77	Flit
	87	Flit
	97	Flit
	:7	Flit
	A8	popBuffer
	B8	pushBuffer
	C8	full
	D8	empty
	)8	routeRelieve
	,8	routeReserveRequestValid
	/8	routeReserveRequest
	08	routeReserveRequest
	58	routeReserveStatus
	L8	FlitType
	M8	FlitType
	N8	reserveRoute
	O8	routeReserveStatus_CFSM
	P8	Head_Phit
	Q8	Head_Phit
	R8	Head_Phit
	S8	Head_Phit
	T8	Head_Phit
	U8	Head_Phit
	V8	Head_Phit
	W8	Head_Phit
	X8	Head_Phit
	Y8	Head_Phit
	Z8	Head_Phit
	[8	Head_Phit
	\8	Head_Phit
	]8	Head_Phit
	^8	Head_Phit
	_8	Head_Phit
	`8	Head_Phit
	a8	Head_Phit
	b8	Head_Phit
	c8	Head_Phit
	d8	Head_Phit
	e8	Head_Phit
	f8	Head_Phit
	g8	Head_Phit
	h8	Head_Phit
	i8	Head_Phit
	j8	Head_Phit
	k8	Head_Phit
	l8	Head_Phit
	m8	Head_Phit
	n8	Head_Phit
	o8	Head_Phit
	p8	headFlitValid
	q8	phitCounter
	r8	headFlitStatus
	s8	Handshake
Scope: controlFSM
	t8	FlitPerPacket [32:0]
	u8	PhitPerFlit [32:0]
	v8	REQUEST_WIDTH [32:0]
	w8	TYPE_WIDTH [32:0]
	x8	HEAD [32:0]
	y8	PAYLOAD [32:0]
	z8	TAIL [32:0]
	{8	UnRouted [32:0]
	|8	HeadFlit [32:0]
	}8	ReservePath [32:0]
	~8	Route [32:0]
	!9	TailFlit [32:0]
	*&	clk
	+&	rst
	3'	valid_in
	2'	ready_in
	~7	valid_out
	&8	ready_out
	L8	FlitType
	M8	FlitType
	N8	reserveRoute
	O8	routeReserveStatus
	p8	headFlitValid
	"9	phitCounter
	r8	headFlitStatus
	A8	popBuffer
	B8	pushBuffer
	s8	Handshake
	C8	full
	D8	empty
	)8	routeRelieve
	#9	state [3:0]
	$9	nextState [3:0]
	%9	flitCounter [4:0]
	&9	TailReceived
	'9	flitValid
	(9	pushBuffer_state
Scope: headFlitBuffer
	)9	N [32:0]
	*9	INDEX [32:0]
	+9	DATA_WIDTH [32:0]
	,9	PhitPerFlit [32:0]
	-9	REQUEST_WIDTH [32:0]
	*&	clk
	+&	rst
	s8	Handshake
	p&	Head_Phit
	q&	Head_Phit
	r&	Head_Phit
	s&	Head_Phit
	t&	Head_Phit
	u&	Head_Phit
	v&	Head_Phit
	w&	Head_Phit
	x&	Head_Phit
	y&	Head_Phit
	z&	Head_Phit
	{&	Head_Phit
	|&	Head_Phit
	}&	Head_Phit
	~&	Head_Phit
	!'	Head_Phit
	"'	Head_Phit
	#'	Head_Phit
	$'	Head_Phit
	%'	Head_Phit
	&'	Head_Phit
	''	Head_Phit
	('	Head_Phit
	)'	Head_Phit
	*'	Head_Phit
	+'	Head_Phit
	,'	Head_Phit
	-'	Head_Phit
	.'	Head_Phit
	/'	Head_Phit
	0'	Head_Phit
	1'	Head_Phit
	p8	headFlitValid
	q8	phitCounter
	N8	reserveRoute
	O8	routeReserveStatus_CFSM
	r8	headFlitStatus
	,8	routeReserveRequestValid
	/8	routeReserveRequest
	08	routeReserveRequest
	58	routeReserveStatus_Switch
	.9	headBuffer [32:0]
	/9	headFlitValidStatus
Scope: headFlitDecoder
	09	N [32:0]
	19	INDEX [32:0]
	29	DATA_WIDTH [32:0]
	39	PhitPerFlit [32:0]
	49	REQUEST_WIDTH [32:0]
	59	HeadFlit
	69	HeadFlit
	79	HeadFlit
	89	HeadFlit
	99	HeadFlit
	:9	HeadFlit
	;9	HeadFlit
	<9	HeadFlit
	=9	HeadFlit
	>9	HeadFlit
	?9	HeadFlit
	@9	HeadFlit
	A9	HeadFlit
	B9	HeadFlit
	C9	HeadFlit
	D9	HeadFlit
	E9	HeadFlit
	F9	HeadFlit
	G9	HeadFlit
	H9	HeadFlit
	I9	HeadFlit
	J9	HeadFlit
	K9	HeadFlit
	L9	HeadFlit
	M9	HeadFlit
	N9	HeadFlit
	O9	HeadFlit
	P9	HeadFlit
	Q9	HeadFlit
	R9	HeadFlit
	S9	HeadFlit
	T9	HeadFlit
	/8	RequestMessage
	08	RequestMessage
	U9	pathString [2048:0]
	V9	index [32:0]
	W9	i [32:0]
	X9	Destination
	Y9	Destination
	Z9	Destination
Scope: flitIdentifier
	[9	DATA_WIDTH [32:0]
	\9	TYPE_WIDTH [32:0]
	]9	PhitPerFlit [32:0]
	^9	HeadIdentifier [32:0]
	_9	PayLoadIdentifier [32:0]
	`9	TailIdentifier [32:0]
	a9	DEFAULT [32:0]
	b9	HEAD [32:0]
	c9	PAYLOAD [32:0]
	d9	TAIL [32:0]
	y6	Flit
	z6	Flit
	{6	Flit
	|6	Flit
	}6	Flit
	~6	Flit
	!7	Flit
	"7	Flit
	#7	Flit
	$7	Flit
	%7	Flit
	&7	Flit
	'7	Flit
	(7	Flit
	)7	Flit
	*7	Flit
	+7	Flit
	,7	Flit
	-7	Flit
	.7	Flit
	/7	Flit
	07	Flit
	17	Flit
	27	Flit
	37	Flit
	47	Flit
	57	Flit
	67	Flit
	77	Flit
	87	Flit
	97	Flit
	:7	Flit
	e9	FlitType [2:0]
Scope: fifo
	f9	DATA_WIDTH [32:0]
	g9	FIFO_DEPTH [32:0]
	h9	ADDRESS_WIDTH [32:0]
	*&	clk
	+&	rst
	D8	empty
	A8	rd_en
	i9	dout [32:0]
	C8	full
	B8	wr_en
	p&	din
	q&	din
	r&	din
	s&	din
	t&	din
	u&	din
	v&	din
	w&	din
	x&	din
	y&	din
	z&	din
	{&	din
	|&	din
	}&	din
	~&	din
	!'	din
	"'	din
	#'	din
	$'	din
	%'	din
	&'	din
	''	din
	('	din
	)'	din
	*'	din
	+'	din
	,'	din
	-'	din
	.'	din
	/'	din
	0'	din
	1'	din
	j9	head_tail
	k9	head_tail
	l9	head_tail
	m9	head_tail
	n9	head [4:0]
	o9	tail [4:0]
	p9	i [32:0]
Scope: genblk1
	q9	i [32:0]
Scope: port
	r9	N [32:0]
	s9	INDEX [32:0]
	t9	DATA_WIDTH [32:0]
	u9	TYPE_WIDTH [32:0]
	v9	REQUEST_WIDTH [32:0]
	w9	FlitPerPacket [32:0]
	x9	PhitPerFlit [32:0]
	y9	FIFO_DEPTH [32:0]
	*&	clk
	+&	rst
	N&	data_in
	O&	data_in
	P&	data_in
	Q&	data_in
	R&	data_in
	S&	data_in
	T&	data_in
	U&	data_in
	V&	data_in
	W&	data_in
	X&	data_in
	Y&	data_in
	Z&	data_in
	[&	data_in
	\&	data_in
	]&	data_in
	^&	data_in
	_&	data_in
	`&	data_in
	a&	data_in
	b&	data_in
	c&	data_in
	d&	data_in
	e&	data_in
	f&	data_in
	g&	data_in
	h&	data_in
	i&	data_in
	j&	data_in
	k&	data_in
	l&	data_in
	m&	data_in
	o&	valid_in
	n&	ready_in
	;7	data_out
	<7	data_out
	=7	data_out
	>7	data_out
	?7	data_out
	@7	data_out
	A7	data_out
	B7	data_out
	C7	data_out
	D7	data_out
	E7	data_out
	F7	data_out
	G7	data_out
	H7	data_out
	I7	data_out
	J7	data_out
	K7	data_out
	L7	data_out
	M7	data_out
	N7	data_out
	O7	data_out
	P7	data_out
	Q7	data_out
	R7	data_out
	S7	data_out
	T7	data_out
	U7	data_out
	V7	data_out
	W7	data_out
	X7	data_out
	Y7	data_out
	Z7	data_out
	!8	valid_out
	'8	ready_out
	*8	routeRelieve
	-8	routeReserveRequestValid
	18	routeReserveRequest
	28	routeReserveRequest
	68	routeReserveStatus
	z9	popBuffer
	{9	pushBuffer
	|9	full
	}9	empty
Scope: portControlLogic
	~9	N [32:0]
	!:	INDEX [32:0]
	":	DATA_WIDTH [32:0]
	#:	TYPE_WIDTH [32:0]
	$:	REQUEST_WIDTH [32:0]
	%:	FlitPerPacket [32:0]
	&:	PhitPerFlit [32:0]
	*&	clk
	+&	rst
	N&	data_in
	O&	data_in
	P&	data_in
	Q&	data_in
	R&	data_in
	S&	data_in
	T&	data_in
	U&	data_in
	V&	data_in
	W&	data_in
	X&	data_in
	Y&	data_in
	Z&	data_in
	[&	data_in
	\&	data_in
	]&	data_in
	^&	data_in
	_&	data_in
	`&	data_in
	a&	data_in
	b&	data_in
	c&	data_in
	d&	data_in
	e&	data_in
	f&	data_in
	g&	data_in
	h&	data_in
	i&	data_in
	j&	data_in
	k&	data_in
	l&	data_in
	m&	data_in
	o&	valid_in
	n&	ready_in
	!8	valid_out
	'8	ready_out
	;7	Flit
	<7	Flit
	=7	Flit
	>7	Flit
	?7	Flit
	@7	Flit
	A7	Flit
	B7	Flit
	C7	Flit
	D7	Flit
	E7	Flit
	F7	Flit
	G7	Flit
	H7	Flit
	I7	Flit
	J7	Flit
	K7	Flit
	L7	Flit
	M7	Flit
	N7	Flit
	O7	Flit
	P7	Flit
	Q7	Flit
	R7	Flit
	S7	Flit
	T7	Flit
	U7	Flit
	V7	Flit
	W7	Flit
	X7	Flit
	Y7	Flit
	Z7	Flit
	z9	popBuffer
	{9	pushBuffer
	|9	full
	}9	empty
	*8	routeRelieve
	-8	routeReserveRequestValid
	18	routeReserveRequest
	28	routeReserveRequest
	68	routeReserveStatus
	':	FlitType
	(:	FlitType
	):	reserveRoute
	*:	routeReserveStatus_CFSM
	+:	Head_Phit
	,:	Head_Phit
	-:	Head_Phit
	.:	Head_Phit
	/:	Head_Phit
	0:	Head_Phit
	1:	Head_Phit
	2:	Head_Phit
	3:	Head_Phit
	4:	Head_Phit
	5:	Head_Phit
	6:	Head_Phit
	7:	Head_Phit
	8:	Head_Phit
	9:	Head_Phit
	::	Head_Phit
	;:	Head_Phit
	<:	Head_Phit
	=:	Head_Phit
	>:	Head_Phit
	?:	Head_Phit
	@:	Head_Phit
	A:	Head_Phit
	B:	Head_Phit
	C:	Head_Phit
	D:	Head_Phit
	E:	Head_Phit
	F:	Head_Phit
	G:	Head_Phit
	H:	Head_Phit
	I:	Head_Phit
	J:	Head_Phit
	K:	headFlitValid
	L:	phitCounter
	M:	headFlitStatus
	N:	Handshake
Scope: controlFSM
	O:	FlitPerPacket [32:0]
	P:	PhitPerFlit [32:0]
	Q:	REQUEST_WIDTH [32:0]
	R:	TYPE_WIDTH [32:0]
	S:	HEAD [32:0]
	T:	PAYLOAD [32:0]
	U:	TAIL [32:0]
	V:	UnRouted [32:0]
	W:	HeadFlit [32:0]
	X:	ReservePath [32:0]
	Y:	Route [32:0]
	Z:	TailFlit [32:0]
	*&	clk
	+&	rst
	o&	valid_in
	n&	ready_in
	!8	valid_out
	'8	ready_out
	':	FlitType
	(:	FlitType
	):	reserveRoute
	*:	routeReserveStatus
	K:	headFlitValid
	[:	phitCounter
	M:	headFlitStatus
	z9	popBuffer
	{9	pushBuffer
	N:	Handshake
	|9	full
	}9	empty
	*8	routeRelieve
	\:	state [3:0]
	]:	nextState [3:0]
	^:	flitCounter [4:0]
	_:	TailReceived
	`:	flitValid
	a:	pushBuffer_state
Scope: headFlitBuffer
	b:	N [32:0]
	c:	INDEX [32:0]
	d:	DATA_WIDTH [32:0]
	e:	PhitPerFlit [32:0]
	f:	REQUEST_WIDTH [32:0]
	*&	clk
	+&	rst
	N:	Handshake
	N&	Head_Phit
	O&	Head_Phit
	P&	Head_Phit
	Q&	Head_Phit
	R&	Head_Phit
	S&	Head_Phit
	T&	Head_Phit
	U&	Head_Phit
	V&	Head_Phit
	W&	Head_Phit
	X&	Head_Phit
	Y&	Head_Phit
	Z&	Head_Phit
	[&	Head_Phit
	\&	Head_Phit
	]&	Head_Phit
	^&	Head_Phit
	_&	Head_Phit
	`&	Head_Phit
	a&	Head_Phit
	b&	Head_Phit
	c&	Head_Phit
	d&	Head_Phit
	e&	Head_Phit
	f&	Head_Phit
	g&	Head_Phit
	h&	Head_Phit
	i&	Head_Phit
	j&	Head_Phit
	k&	Head_Phit
	l&	Head_Phit
	m&	Head_Phit
	K:	headFlitValid
	L:	phitCounter
	):	reserveRoute
	*:	routeReserveStatus_CFSM
	M:	headFlitStatus
	-8	routeReserveRequestValid
	18	routeReserveRequest
	28	routeReserveRequest
	68	routeReserveStatus_Switch
	g:	headBuffer [32:0]
	h:	headFlitValidStatus
Scope: headFlitDecoder
	i:	N [32:0]
	j:	INDEX [32:0]
	k:	DATA_WIDTH [32:0]
	l:	PhitPerFlit [32:0]
	m:	REQUEST_WIDTH [32:0]
	n:	HeadFlit
	o:	HeadFlit
	p:	HeadFlit
	q:	HeadFlit
	r:	HeadFlit
	s:	HeadFlit
	t:	HeadFlit
	u:	HeadFlit
	v:	HeadFlit
	w:	HeadFlit
	x:	HeadFlit
	y:	HeadFlit
	z:	HeadFlit
	{:	HeadFlit
	|:	HeadFlit
	}:	HeadFlit
	~:	HeadFlit
	!;	HeadFlit
	";	HeadFlit
	#;	HeadFlit
	$;	HeadFlit
	%;	HeadFlit
	&;	HeadFlit
	';	HeadFlit
	(;	HeadFlit
	);	HeadFlit
	*;	HeadFlit
	+;	HeadFlit
	,;	HeadFlit
	-;	HeadFlit
	.;	HeadFlit
	/;	HeadFlit
	18	RequestMessage
	28	RequestMessage
	0;	pathString [2048:0]
	1;	index [32:0]
	2;	i [32:0]
	3;	Destination
	4;	Destination
	5;	Destination
Scope: flitIdentifier
	6;	DATA_WIDTH [32:0]
	7;	TYPE_WIDTH [32:0]
	8;	PhitPerFlit [32:0]
	9;	HeadIdentifier [32:0]
	:;	PayLoadIdentifier [32:0]
	;;	TailIdentifier [32:0]
	<;	DEFAULT [32:0]
	=;	HEAD [32:0]
	>;	PAYLOAD [32:0]
	?;	TAIL [32:0]
	;7	Flit
	<7	Flit
	=7	Flit
	>7	Flit
	?7	Flit
	@7	Flit
	A7	Flit
	B7	Flit
	C7	Flit
	D7	Flit
	E7	Flit
	F7	Flit
	G7	Flit
	H7	Flit
	I7	Flit
	J7	Flit
	K7	Flit
	L7	Flit
	M7	Flit
	N7	Flit
	O7	Flit
	P7	Flit
	Q7	Flit
	R7	Flit
	S7	Flit
	T7	Flit
	U7	Flit
	V7	Flit
	W7	Flit
	X7	Flit
	Y7	Flit
	Z7	Flit
	@;	FlitType [2:0]
Scope: fifo
	A;	DATA_WIDTH [32:0]
	B;	FIFO_DEPTH [32:0]
	C;	ADDRESS_WIDTH [32:0]
	*&	clk
	+&	rst
	}9	empty
	z9	rd_en
	D;	dout [32:0]
	|9	full
	{9	wr_en
	N&	din
	O&	din
	P&	din
	Q&	din
	R&	din
	S&	din
	T&	din
	U&	din
	V&	din
	W&	din
	X&	din
	Y&	din
	Z&	din
	[&	din
	\&	din
	]&	din
	^&	din
	_&	din
	`&	din
	a&	din
	b&	din
	c&	din
	d&	din
	e&	din
	f&	din
	g&	din
	h&	din
	i&	din
	j&	din
	k&	din
	l&	din
	m&	din
	E;	head_tail
	F;	head_tail
	G;	head_tail
	H;	head_tail
	I;	head [4:0]
	J;	tail [4:0]
	K;	i [32:0]
Scope: genblk1
	L;	i [32:0]
Scope: port
	M;	N [32:0]
	N;	INDEX [32:0]
	O;	DATA_WIDTH [32:0]
	P;	TYPE_WIDTH [32:0]
	Q;	REQUEST_WIDTH [32:0]
	R;	FlitPerPacket [32:0]
	S;	PhitPerFlit [32:0]
	T;	FIFO_DEPTH [32:0]
	*&	clk
	+&	rst
	,&	data_in
	-&	data_in
	.&	data_in
	/&	data_in
	0&	data_in
	1&	data_in
	2&	data_in
	3&	data_in
	4&	data_in
	5&	data_in
	6&	data_in
	7&	data_in
	8&	data_in
	9&	data_in
	:&	data_in
	;&	data_in
	<&	data_in
	=&	data_in
	>&	data_in
	?&	data_in
	@&	data_in
	A&	data_in
	B&	data_in
	C&	data_in
	D&	data_in
	E&	data_in
	F&	data_in
	G&	data_in
	H&	data_in
	I&	data_in
	J&	data_in
	K&	data_in
	M&	valid_in
	L&	ready_in
	[7	data_out
	\7	data_out
	]7	data_out
	^7	data_out
	_7	data_out
	`7	data_out
	a7	data_out
	b7	data_out
	c7	data_out
	d7	data_out
	e7	data_out
	f7	data_out
	g7	data_out
	h7	data_out
	i7	data_out
	j7	data_out
	k7	data_out
	l7	data_out
	m7	data_out
	n7	data_out
	o7	data_out
	p7	data_out
	q7	data_out
	r7	data_out
	s7	data_out
	t7	data_out
	u7	data_out
	v7	data_out
	w7	data_out
	x7	data_out
	y7	data_out
	z7	data_out
	"8	valid_out
	(8	ready_out
	+8	routeRelieve
	.8	routeReserveRequestValid
	38	routeReserveRequest
	48	routeReserveRequest
	78	routeReserveStatus
	U;	popBuffer
	V;	pushBuffer
	W;	full
	X;	empty
Scope: portControlLogic
	Y;	N [32:0]
	Z;	INDEX [32:0]
	[;	DATA_WIDTH [32:0]
	\;	TYPE_WIDTH [32:0]
	];	REQUEST_WIDTH [32:0]
	^;	FlitPerPacket [32:0]
	_;	PhitPerFlit [32:0]
	*&	clk
	+&	rst
	,&	data_in
	-&	data_in
	.&	data_in
	/&	data_in
	0&	data_in
	1&	data_in
	2&	data_in
	3&	data_in
	4&	data_in
	5&	data_in
	6&	data_in
	7&	data_in
	8&	data_in
	9&	data_in
	:&	data_in
	;&	data_in
	<&	data_in
	=&	data_in
	>&	data_in
	?&	data_in
	@&	data_in
	A&	data_in
	B&	data_in
	C&	data_in
	D&	data_in
	E&	data_in
	F&	data_in
	G&	data_in
	H&	data_in
	I&	data_in
	J&	data_in
	K&	data_in
	M&	valid_in
	L&	ready_in
	"8	valid_out
	(8	ready_out
	[7	Flit
	\7	Flit
	]7	Flit
	^7	Flit
	_7	Flit
	`7	Flit
	a7	Flit
	b7	Flit
	c7	Flit
	d7	Flit
	e7	Flit
	f7	Flit
	g7	Flit
	h7	Flit
	i7	Flit
	j7	Flit
	k7	Flit
	l7	Flit
	m7	Flit
	n7	Flit
	o7	Flit
	p7	Flit
	q7	Flit
	r7	Flit
	s7	Flit
	t7	Flit
	u7	Flit
	v7	Flit
	w7	Flit
	x7	Flit
	y7	Flit
	z7	Flit
	U;	popBuffer
	V;	pushBuffer
	W;	full
	X;	empty
	+8	routeRelieve
	.8	routeReserveRequestValid
	38	routeReserveRequest
	48	routeReserveRequest
	78	routeReserveStatus
	`;	FlitType
	a;	FlitType
	b;	reserveRoute
	c;	routeReserveStatus_CFSM
	d;	Head_Phit
	e;	Head_Phit
	f;	Head_Phit
	g;	Head_Phit
	h;	Head_Phit
	i;	Head_Phit
	j;	Head_Phit
	k;	Head_Phit
	l;	Head_Phit
	m;	Head_Phit
	n;	Head_Phit
	o;	Head_Phit
	p;	Head_Phit
	q;	Head_Phit
	r;	Head_Phit
	s;	Head_Phit
	t;	Head_Phit
	u;	Head_Phit
	v;	Head_Phit
	w;	Head_Phit
	x;	Head_Phit
	y;	Head_Phit
	z;	Head_Phit
	{;	Head_Phit
	|;	Head_Phit
	};	Head_Phit
	~;	Head_Phit
	!<	Head_Phit
	"<	Head_Phit
	#<	Head_Phit
	$<	Head_Phit
	%<	Head_Phit
	&<	headFlitValid
	'<	phitCounter
	(<	headFlitStatus
	)<	Handshake
Scope: controlFSM
	*<	FlitPerPacket [32:0]
	+<	PhitPerFlit [32:0]
	,<	REQUEST_WIDTH [32:0]
	-<	TYPE_WIDTH [32:0]
	.<	HEAD [32:0]
	/<	PAYLOAD [32:0]
	0<	TAIL [32:0]
	1<	UnRouted [32:0]
	2<	HeadFlit [32:0]
	3<	ReservePath [32:0]
	4<	Route [32:0]
	5<	TailFlit [32:0]
	*&	clk
	+&	rst
	M&	valid_in
	L&	ready_in
	"8	valid_out
	(8	ready_out
	`;	FlitType
	a;	FlitType
	b;	reserveRoute
	c;	routeReserveStatus
	&<	headFlitValid
	6<	phitCounter
	(<	headFlitStatus
	U;	popBuffer
	V;	pushBuffer
	)<	Handshake
	W;	full
	X;	empty
	+8	routeRelieve
	7<	state [3:0]
	8<	nextState [3:0]
	9<	flitCounter [4:0]
	:<	TailReceived
	;<	flitValid
	<<	pushBuffer_state
Scope: headFlitBuffer
	=<	N [32:0]
	><	INDEX [32:0]
	?<	DATA_WIDTH [32:0]
	@<	PhitPerFlit [32:0]
	A<	REQUEST_WIDTH [32:0]
	*&	clk
	+&	rst
	)<	Handshake
	,&	Head_Phit
	-&	Head_Phit
	.&	Head_Phit
	/&	Head_Phit
	0&	Head_Phit
	1&	Head_Phit
	2&	Head_Phit
	3&	Head_Phit
	4&	Head_Phit
	5&	Head_Phit
	6&	Head_Phit
	7&	Head_Phit
	8&	Head_Phit
	9&	Head_Phit
	:&	Head_Phit
	;&	Head_Phit
	<&	Head_Phit
	=&	Head_Phit
	>&	Head_Phit
	?&	Head_Phit
	@&	Head_Phit
	A&	Head_Phit
	B&	Head_Phit
	C&	Head_Phit
	D&	Head_Phit
	E&	Head_Phit
	F&	Head_Phit
	G&	Head_Phit
	H&	Head_Phit
	I&	Head_Phit
	J&	Head_Phit
	K&	Head_Phit
	&<	headFlitValid
	'<	phitCounter
	b;	reserveRoute
	c;	routeReserveStatus_CFSM
	(<	headFlitStatus
	.8	routeReserveRequestValid
	38	routeReserveRequest
	48	routeReserveRequest
	78	routeReserveStatus_Switch
	B<	headBuffer [32:0]
	C<	headFlitValidStatus
Scope: headFlitDecoder
	D<	N [32:0]
	E<	INDEX [32:0]
	F<	DATA_WIDTH [32:0]
	G<	PhitPerFlit [32:0]
	H<	REQUEST_WIDTH [32:0]
	I<	HeadFlit
	J<	HeadFlit
	K<	HeadFlit
	L<	HeadFlit
	M<	HeadFlit
	N<	HeadFlit
	O<	HeadFlit
	P<	HeadFlit
	Q<	HeadFlit
	R<	HeadFlit
	S<	HeadFlit
	T<	HeadFlit
	U<	HeadFlit
	V<	HeadFlit
	W<	HeadFlit
	X<	HeadFlit
	Y<	HeadFlit
	Z<	HeadFlit
	[<	HeadFlit
	\<	HeadFlit
	]<	HeadFlit
	^<	HeadFlit
	_<	HeadFlit
	`<	HeadFlit
	a<	HeadFlit
	b<	HeadFlit
	c<	HeadFlit
	d<	HeadFlit
	e<	HeadFlit
	f<	HeadFlit
	g<	HeadFlit
	h<	HeadFlit
	38	RequestMessage
	48	RequestMessage
	i<	pathString [2048:0]
	j<	index [32:0]
	k<	i [32:0]
	l<	Destination
	m<	Destination
	n<	Destination
Scope: flitIdentifier
	o<	DATA_WIDTH [32:0]
	p<	TYPE_WIDTH [32:0]
	q<	PhitPerFlit [32:0]
	r<	HeadIdentifier [32:0]
	s<	PayLoadIdentifier [32:0]
	t<	TailIdentifier [32:0]
	u<	DEFAULT [32:0]
	v<	HEAD [32:0]
	w<	PAYLOAD [32:0]
	x<	TAIL [32:0]
	[7	Flit
	\7	Flit
	]7	Flit
	^7	Flit
	_7	Flit
	`7	Flit
	a7	Flit
	b7	Flit
	c7	Flit
	d7	Flit
	e7	Flit
	f7	Flit
	g7	Flit
	h7	Flit
	i7	Flit
	j7	Flit
	k7	Flit
	l7	Flit
	m7	Flit
	n7	Flit
	o7	Flit
	p7	Flit
	q7	Flit
	r7	Flit
	s7	Flit
	t7	Flit
	u7	Flit
	v7	Flit
	w7	Flit
	x7	Flit
	y7	Flit
	z7	Flit
	y<	FlitType [2:0]
Scope: fifo
	z<	DATA_WIDTH [32:0]
	{<	FIFO_DEPTH [32:0]
	|<	ADDRESS_WIDTH [32:0]
	*&	clk
	+&	rst
	X;	empty
	U;	rd_en
	}<	dout [32:0]
	W;	full
	V;	wr_en
	,&	din
	-&	din
	.&	din
	/&	din
	0&	din
	1&	din
	2&	din
	3&	din
	4&	din
	5&	din
	6&	din
	7&	din
	8&	din
	9&	din
	:&	din
	;&	din
	<&	din
	=&	din
	>&	din
	?&	din
	@&	din
	A&	din
	B&	din
	C&	din
	D&	din
	E&	din
	F&	din
	G&	din
	H&	din
	I&	din
	J&	din
	K&	din
	~<	head_tail
	!=	head_tail
	"=	head_tail
	#=	head_tail
	$=	head [4:0]
	%=	tail [4:0]
	&=	i [32:0]
Scope: switch
	'=	N [32:0]
	(=	INPUTS [32:0]
	)=	OUTPUTS [32:0]
	*=	DATA_WIDTH [32:0]
	+=	REQUEST_WIDTH [32:0]
	*&	clk
	+&	rst
	,8	routeReserveRequestValid
	-8	routeReserveRequestValid
	.8	routeReserveRequestValid
	/8	routeReserveRequest
	08	routeReserveRequest
	18	routeReserveRequest
	28	routeReserveRequest
	38	routeReserveRequest
	48	routeReserveRequest
	)8	routeRelieve
	*8	routeRelieve
	+8	routeRelieve
	58	routeReserveStatus
	68	routeReserveStatus
	78	routeReserveStatus
	w5	data_in
	x5	data_in
	y5	data_in
	z5	data_in
	{5	data_in
	|5	data_in
	}5	data_in
	~5	data_in
	!6	data_in
	"6	data_in
	#6	data_in
	$6	data_in
	%6	data_in
	&6	data_in
	'6	data_in
	(6	data_in
	)6	data_in
	*6	data_in
	+6	data_in
	,6	data_in
	-6	data_in
	.6	data_in
	/6	data_in
	06	data_in
	16	data_in
	26	data_in
	36	data_in
	46	data_in
	56	data_in
	66	data_in
	76	data_in
	86	data_in
	96	data_in
	:6	data_in
	;6	data_in
	<6	data_in
	=6	data_in
	>6	data_in
	?6	data_in
	@6	data_in
	A6	data_in
	B6	data_in
	C6	data_in
	D6	data_in
	E6	data_in
	F6	data_in
	G6	data_in
	H6	data_in
	I6	data_in
	J6	data_in
	K6	data_in
	L6	data_in
	M6	data_in
	N6	data_in
	O6	data_in
	P6	data_in
	Q6	data_in
	R6	data_in
	S6	data_in
	T6	data_in
	U6	data_in
	V6	data_in
	W6	data_in
	X6	data_in
	Y6	data_in
	Z6	data_in
	[6	data_in
	\6	data_in
	]6	data_in
	^6	data_in
	_6	data_in
	`6	data_in
	a6	data_in
	b6	data_in
	c6	data_in
	d6	data_in
	e6	data_in
	f6	data_in
	g6	data_in
	h6	data_in
	i6	data_in
	j6	data_in
	k6	data_in
	l6	data_in
	m6	data_in
	n6	data_in
	o6	data_in
	p6	data_in
	q6	data_in
	r6	data_in
	s6	data_in
	t6	data_in
	u6	data_in
	v6	data_in
	w6	data_in
	x6	data_in
	{7	valid_in
	|7	valid_in
	}7	valid_in
	#8	ready_in
	$8	ready_in
	%8	ready_in
	x'	data_out
	y'	data_out
	z'	data_out
	{'	data_out
	|'	data_out
	}'	data_out
	~'	data_out
	!(	data_out
	"(	data_out
	#(	data_out
	$(	data_out
	%(	data_out
	&(	data_out
	'(	data_out
	((	data_out
	)(	data_out
	*(	data_out
	+(	data_out
	,(	data_out
	-(	data_out
	.(	data_out
	/(	data_out
	0(	data_out
	1(	data_out
	2(	data_out
	3(	data_out
	4(	data_out
	5(	data_out
	6(	data_out
	7(	data_out
	8(	data_out
	9(	data_out
	V'	data_out
	W'	data_out
	X'	data_out
	Y'	data_out
	Z'	data_out
	['	data_out
	\'	data_out
	]'	data_out
	^'	data_out
	_'	data_out
	`'	data_out
	a'	data_out
	b'	data_out
	c'	data_out
	d'	data_out
	e'	data_out
	f'	data_out
	g'	data_out
	h'	data_out
	i'	data_out
	j'	data_out
	k'	data_out
	l'	data_out
	m'	data_out
	n'	data_out
	o'	data_out
	p'	data_out
	q'	data_out
	r'	data_out
	s'	data_out
	t'	data_out
	u'	data_out
	4'	data_out
	5'	data_out
	6'	data_out
	7'	data_out
	8'	data_out
	9'	data_out
	:'	data_out
	;'	data_out
	<'	data_out
	='	data_out
	>'	data_out
	?'	data_out
	@'	data_out
	A'	data_out
	B'	data_out
	C'	data_out
	D'	data_out
	E'	data_out
	F'	data_out
	G'	data_out
	H'	data_out
	I'	data_out
	J'	data_out
	K'	data_out
	L'	data_out
	M'	data_out
	N'	data_out
	O'	data_out
	P'	data_out
	Q'	data_out
	R'	data_out
	S'	data_out
	;(	valid_out
	w'	valid_out
	U'	valid_out
	:(	ready_out
	v'	ready_out
	T'	ready_out
	,=	routeSelect
	-=	routeSelect
	.=	routeSelect
	/=	routeSelect
	0=	routeSelect
	1=	routeSelect
	2=	outputBusy
	3=	outputBusy
	4=	outputBusy
	5=	PortReserved
	6=	PortReserved
	7=	PortReserved
Scope: switchControl
	8=	N [32:0]
	9=	INPUTS [32:0]
	:=	OUTPUTS [32:0]
	;=	DATA_WIDTH [32:0]
	<=	REQUEST_WIDTH [32:0]
	==	STATE_WIDTH [32:0]
	>=	UnRouted [32:0]
	?=	Check [32:0]
	@=	Arbitrate [32:0]
	A=	PathReserved1 [32:0]
	B=	PathReserved0 [32:0]
	*&	clk
	+&	rst
	,8	routeReserveRequestValid
	-8	routeReserveRequestValid
	.8	routeReserveRequestValid
	/8	routeReserveRequest
	08	routeReserveRequest
	18	routeReserveRequest
	28	routeReserveRequest
	38	routeReserveRequest
	48	routeReserveRequest
	)8	routeRelieve
	*8	routeRelieve
	+8	routeRelieve
	C=	routeReserveStatus [3:0]
	D=	routeSelect [6:0]
	E=	outputBusy [3:0]
	F=	PortReserved [3:0]
	G=	switchRequest [3:0]
	H=	outputRelieve [3:0]
	I=	PortBusy [3:0]
	J=	Conflict [3:0]
	K=	switchState [9:0]
	L=	switchState_next [9:0]
	M=	i0 [32:0]
	N=	i1 [32:0]
	O=	i2 [32:0]
	P=	i3 [32:0]
	Q=	i4 [32:0]
	R=	j4 [32:0]
	S=	i5 [32:0]
	T=	i6 [32:0]
	U=	i7 [32:0]
	V=	j7 [32:0]
	W=	i8 [32:0]
	X=	j8 [32:0]
	Y=	i9 [32:0]
	Z=	j9 [32:0]
Scope: muxSwitch
	[=	INPUTS [32:0]
	\=	OUTPUTS [32:0]
	]=	DATA_WIDTH [32:0]
	^=	REQUEST_WIDTH [32:0]
	,=	routeSelect
	-=	routeSelect
	.=	routeSelect
	/=	routeSelect
	0=	routeSelect
	1=	routeSelect
	2=	outputBusy
	3=	outputBusy
	4=	outputBusy
	5=	PortReserved
	6=	PortReserved
	7=	PortReserved
	w5	data_in
	x5	data_in
	y5	data_in
	z5	data_in
	{5	data_in
	|5	data_in
	}5	data_in
	~5	data_in
	!6	data_in
	"6	data_in
	#6	data_in
	$6	data_in
	%6	data_in
	&6	data_in
	'6	data_in
	(6	data_in
	)6	data_in
	*6	data_in
	+6	data_in
	,6	data_in
	-6	data_in
	.6	data_in
	/6	data_in
	06	data_in
	16	data_in
	26	data_in
	36	data_in
	46	data_in
	56	data_in
	66	data_in
	76	data_in
	86	data_in
	96	data_in
	:6	data_in
	;6	data_in
	<6	data_in
	=6	data_in
	>6	data_in
	?6	data_in
	@6	data_in
	A6	data_in
	B6	data_in
	C6	data_in
	D6	data_in
	E6	data_in
	F6	data_in
	G6	data_in
	H6	data_in
	I6	data_in
	J6	data_in
	K6	data_in
	L6	data_in
	M6	data_in
	N6	data_in
	O6	data_in
	P6	data_in
	Q6	data_in
	R6	data_in
	S6	data_in
	T6	data_in
	U6	data_in
	V6	data_in
	W6	data_in
	X6	data_in
	Y6	data_in
	Z6	data_in
	[6	data_in
	\6	data_in
	]6	data_in
	^6	data_in
	_6	data_in
	`6	data_in
	a6	data_in
	b6	data_in
	c6	data_in
	d6	data_in
	e6	data_in
	f6	data_in
	g6	data_in
	h6	data_in
	i6	data_in
	j6	data_in
	k6	data_in
	l6	data_in
	m6	data_in
	n6	data_in
	o6	data_in
	p6	data_in
	q6	data_in
	r6	data_in
	s6	data_in
	t6	data_in
	u6	data_in
	v6	data_in
	w6	data_in
	x6	data_in
	{7	valid_in
	|7	valid_in
	}7	valid_in
	_=	ready_in [3:0]
	`=	data_out [96:0]
	a=	valid_out [3:0]
	:(	ready_out
	v'	ready_out
	T'	ready_out
	b=	i1 [32:0]
	c=	j1 [32:0]
	d=	i2 [32:0]
	e=	j2 [32:0]
	f=	i3 [32:0]
	g=	j3 [32:0]
Scope: Router_Node2
	h=	N [32:0]
	i=	INDEX [32:0]
	j=	INPUTS [32:0]
	k=	OUTPUTS [32:0]
	l=	DATA_WIDTH [32:0]
	m=	TYPE_WIDTH [32:0]
	n=	REQUEST_WIDTH [32:0]
	o=	FlitPerPacket [32:0]
	p=	PhitPerFlit [32:0]
	q=	FIFO_DEPTH [32:0]
	<(	clk
	=(	rst
	$)	data_in_bus
	%)	data_in_bus
	&)	data_in_bus
	')	data_in_bus
	()	data_in_bus
	))	data_in_bus
	*)	data_in_bus
	+)	data_in_bus
	,)	data_in_bus
	-)	data_in_bus
	.)	data_in_bus
	/)	data_in_bus
	0)	data_in_bus
	1)	data_in_bus
	2)	data_in_bus
	3)	data_in_bus
	4)	data_in_bus
	5)	data_in_bus
	6)	data_in_bus
	7)	data_in_bus
	8)	data_in_bus
	9)	data_in_bus
	:)	data_in_bus
	;)	data_in_bus
	<)	data_in_bus
	=)	data_in_bus
	>)	data_in_bus
	?)	data_in_bus
	@)	data_in_bus
	A)	data_in_bus
	B)	data_in_bus
	C)	data_in_bus
	`(	data_in_bus
	a(	data_in_bus
	b(	data_in_bus
	c(	data_in_bus
	d(	data_in_bus
	e(	data_in_bus
	f(	data_in_bus
	g(	data_in_bus
	h(	data_in_bus
	i(	data_in_bus
	j(	data_in_bus
	k(	data_in_bus
	l(	data_in_bus
	m(	data_in_bus
	n(	data_in_bus
	o(	data_in_bus
	p(	data_in_bus
	q(	data_in_bus
	r(	data_in_bus
	s(	data_in_bus
	t(	data_in_bus
	u(	data_in_bus
	v(	data_in_bus
	w(	data_in_bus
	x(	data_in_bus
	y(	data_in_bus
	z(	data_in_bus
	{(	data_in_bus
	|(	data_in_bus
	}(	data_in_bus
	~(	data_in_bus
	!)	data_in_bus
	>(	data_in_bus
	?(	data_in_bus
	@(	data_in_bus
	A(	data_in_bus
	B(	data_in_bus
	C(	data_in_bus
	D(	data_in_bus
	E(	data_in_bus
	F(	data_in_bus
	G(	data_in_bus
	H(	data_in_bus
	I(	data_in_bus
	J(	data_in_bus
	K(	data_in_bus
	L(	data_in_bus
	M(	data_in_bus
	N(	data_in_bus
	O(	data_in_bus
	P(	data_in_bus
	Q(	data_in_bus
	R(	data_in_bus
	S(	data_in_bus
	T(	data_in_bus
	U(	data_in_bus
	V(	data_in_bus
	W(	data_in_bus
	X(	data_in_bus
	Y(	data_in_bus
	Z(	data_in_bus
	[(	data_in_bus
	\(	data_in_bus
	](	data_in_bus
	E)	valid_in_bus
	#)	valid_in_bus
	_(	valid_in_bus
	D)	ready_in_bus
	")	ready_in_bus
	^(	ready_in_bus
	,*	data_out_bus
	-*	data_out_bus
	.*	data_out_bus
	/*	data_out_bus
	0*	data_out_bus
	1*	data_out_bus
	2*	data_out_bus
	3*	data_out_bus
	4*	data_out_bus
	5*	data_out_bus
	6*	data_out_bus
	7*	data_out_bus
	8*	data_out_bus
	9*	data_out_bus
	:*	data_out_bus
	;*	data_out_bus
	<*	data_out_bus
	=*	data_out_bus
	>*	data_out_bus
	?*	data_out_bus
	@*	data_out_bus
	A*	data_out_bus
	B*	data_out_bus
	C*	data_out_bus
	D*	data_out_bus
	E*	data_out_bus
	F*	data_out_bus
	G*	data_out_bus
	H*	data_out_bus
	I*	data_out_bus
	J*	data_out_bus
	K*	data_out_bus
	h)	data_out_bus
	i)	data_out_bus
	j)	data_out_bus
	k)	data_out_bus
	l)	data_out_bus
	m)	data_out_bus
	n)	data_out_bus
	o)	data_out_bus
	p)	data_out_bus
	q)	data_out_bus
	r)	data_out_bus
	s)	data_out_bus
	t)	data_out_bus
	u)	data_out_bus
	v)	data_out_bus
	w)	data_out_bus
	x)	data_out_bus
	y)	data_out_bus
	z)	data_out_bus
	{)	data_out_bus
	|)	data_out_bus
	})	data_out_bus
	~)	data_out_bus
	!*	data_out_bus
	"*	data_out_bus
	#*	data_out_bus
	$*	data_out_bus
	%*	data_out_bus
	&*	data_out_bus
	'*	data_out_bus
	(*	data_out_bus
	)*	data_out_bus
	F)	data_out_bus
	G)	data_out_bus
	H)	data_out_bus
	I)	data_out_bus
	J)	data_out_bus
	K)	data_out_bus
	L)	data_out_bus
	M)	data_out_bus
	N)	data_out_bus
	O)	data_out_bus
	P)	data_out_bus
	Q)	data_out_bus
	R)	data_out_bus
	S)	data_out_bus
	T)	data_out_bus
	U)	data_out_bus
	V)	data_out_bus
	W)	data_out_bus
	X)	data_out_bus
	Y)	data_out_bus
	Z)	data_out_bus
	[)	data_out_bus
	\)	data_out_bus
	])	data_out_bus
	^)	data_out_bus
	_)	data_out_bus
	`)	data_out_bus
	a)	data_out_bus
	b)	data_out_bus
	c)	data_out_bus
	d)	data_out_bus
	e)	data_out_bus
	M*	valid_out_bus
	+*	valid_out_bus
	g)	valid_out_bus
	L*	ready_out_bus
	**	ready_out_bus
	f)	ready_out_bus
	r=	data_in_switch
	s=	data_in_switch
	t=	data_in_switch
	u=	data_in_switch
	v=	data_in_switch
	w=	data_in_switch
	x=	data_in_switch
	y=	data_in_switch
	z=	data_in_switch
	{=	data_in_switch
	|=	data_in_switch
	}=	data_in_switch
	~=	data_in_switch
	!>	data_in_switch
	">	data_in_switch
	#>	data_in_switch
	$>	data_in_switch
	%>	data_in_switch
	&>	data_in_switch
	'>	data_in_switch
	(>	data_in_switch
	)>	data_in_switch
	*>	data_in_switch
	+>	data_in_switch
	,>	data_in_switch
	->	data_in_switch
	.>	data_in_switch
	/>	data_in_switch
	0>	data_in_switch
	1>	data_in_switch
	2>	data_in_switch
	3>	data_in_switch
	4>	data_in_switch
	5>	data_in_switch
	6>	data_in_switch
	7>	data_in_switch
	8>	data_in_switch
	9>	data_in_switch
	:>	data_in_switch
	;>	data_in_switch
	<>	data_in_switch
	=>	data_in_switch
	>>	data_in_switch
	?>	data_in_switch
	@>	data_in_switch
	A>	data_in_switch
	B>	data_in_switch
	C>	data_in_switch
	D>	data_in_switch
	E>	data_in_switch
	F>	data_in_switch
	G>	data_in_switch
	H>	data_in_switch
	I>	data_in_switch
	J>	data_in_switch
	K>	data_in_switch
	L>	data_in_switch
	M>	data_in_switch
	N>	data_in_switch
	O>	data_in_switch
	P>	data_in_switch
	Q>	data_in_switch
	R>	data_in_switch
	S>	data_in_switch
	T>	data_in_switch
	U>	data_in_switch
	V>	data_in_switch
	W>	data_in_switch
	X>	data_in_switch
	Y>	data_in_switch
	Z>	data_in_switch
	[>	data_in_switch
	\>	data_in_switch
	]>	data_in_switch
	^>	data_in_switch
	_>	data_in_switch
	`>	data_in_switch
	a>	data_in_switch
	b>	data_in_switch
	c>	data_in_switch
	d>	data_in_switch
	e>	data_in_switch
	f>	data_in_switch
	g>	data_in_switch
	h>	data_in_switch
	i>	data_in_switch
	j>	data_in_switch
	k>	data_in_switch
	l>	data_in_switch
	m>	data_in_switch
	n>	data_in_switch
	o>	data_in_switch
	p>	data_in_switch
	q>	data_in_switch
	r>	data_in_switch
	s>	data_in_switch
	t>	data_out_port
	u>	data_out_port
	v>	data_out_port
	w>	data_out_port
	x>	data_out_port
	y>	data_out_port
	z>	data_out_port
	{>	data_out_port
	|>	data_out_port
	}>	data_out_port
	~>	data_out_port
	!?	data_out_port
	"?	data_out_port
	#?	data_out_port
	$?	data_out_port
	%?	data_out_port
	&?	data_out_port
	'?	data_out_port
	(?	data_out_port
	)?	data_out_port
	*?	data_out_port
	+?	data_out_port
	,?	data_out_port
	-?	data_out_port
	.?	data_out_port
	/?	data_out_port
	0?	data_out_port
	1?	data_out_port
	2?	data_out_port
	3?	data_out_port
	4?	data_out_port
	5?	data_out_port
	6?	data_out_port
	7?	data_out_port
	8?	data_out_port
	9?	data_out_port
	:?	data_out_port
	;?	data_out_port
	<?	data_out_port
	=?	data_out_port
	>?	data_out_port
	??	data_out_port
	@?	data_out_port
	A?	data_out_port
	B?	data_out_port
	C?	data_out_port
	D?	data_out_port
	E?	data_out_port
	F?	data_out_port
	G?	data_out_port
	H?	data_out_port
	I?	data_out_port
	J?	data_out_port
	K?	data_out_port
	L?	data_out_port
	M?	data_out_port
	N?	data_out_port
	O?	data_out_port
	P?	data_out_port
	Q?	data_out_port
	R?	data_out_port
	S?	data_out_port
	T?	data_out_port
	U?	data_out_port
	V?	data_out_port
	W?	data_out_port
	X?	data_out_port
	Y?	data_out_port
	Z?	data_out_port
	[?	data_out_port
	\?	data_out_port
	]?	data_out_port
	^?	data_out_port
	_?	data_out_port
	`?	data_out_port
	a?	data_out_port
	b?	data_out_port
	c?	data_out_port
	d?	data_out_port
	e?	data_out_port
	f?	data_out_port
	g?	data_out_port
	h?	data_out_port
	i?	data_out_port
	j?	data_out_port
	k?	data_out_port
	l?	data_out_port
	m?	data_out_port
	n?	data_out_port
	o?	data_out_port
	p?	data_out_port
	q?	data_out_port
	r?	data_out_port
	s?	data_out_port
	t?	data_out_port
	u?	data_out_port
	v?	valid_in_switch
	w?	valid_in_switch
	x?	valid_in_switch
	y?	valid_out_port
	z?	valid_out_port
	{?	valid_out_port
	|?	ready_in_switch
	}?	ready_in_switch
	~?	ready_in_switch
	!@	ready_out_port
	"@	ready_out_port
	#@	ready_out_port
	$@	routeRelieve
	%@	routeRelieve
	&@	routeRelieve
	'@	routeReserveRequestValid
	(@	routeReserveRequestValid
	)@	routeReserveRequestValid
	*@	routeReserveRequest
	+@	routeReserveRequest
	,@	routeReserveRequest
	-@	routeReserveRequest
	.@	routeReserveRequest
	/@	routeReserveRequest
	0@	routeReserveStatus
	1@	routeReserveStatus
	2@	routeReserveStatus
Scope: genblk1
	3@	i [32:0]
Scope: port
	4@	N [32:0]
	5@	INDEX [32:0]
	6@	DATA_WIDTH [32:0]
	7@	TYPE_WIDTH [32:0]
	8@	REQUEST_WIDTH [32:0]
	9@	FlitPerPacket [32:0]
	:@	PhitPerFlit [32:0]
	;@	FIFO_DEPTH [32:0]
	<(	clk
	=(	rst
	$)	data_in
	%)	data_in
	&)	data_in
	')	data_in
	()	data_in
	))	data_in
	*)	data_in
	+)	data_in
	,)	data_in
	-)	data_in
	.)	data_in
	/)	data_in
	0)	data_in
	1)	data_in
	2)	data_in
	3)	data_in
	4)	data_in
	5)	data_in
	6)	data_in
	7)	data_in
	8)	data_in
	9)	data_in
	:)	data_in
	;)	data_in
	<)	data_in
	=)	data_in
	>)	data_in
	?)	data_in
	@)	data_in
	A)	data_in
	B)	data_in
	C)	data_in
	E)	valid_in
	D)	ready_in
	t>	data_out
	u>	data_out
	v>	data_out
	w>	data_out
	x>	data_out
	y>	data_out
	z>	data_out
	{>	data_out
	|>	data_out
	}>	data_out
	~>	data_out
	!?	data_out
	"?	data_out
	#?	data_out
	$?	data_out
	%?	data_out
	&?	data_out
	'?	data_out
	(?	data_out
	)?	data_out
	*?	data_out
	+?	data_out
	,?	data_out
	-?	data_out
	.?	data_out
	/?	data_out
	0?	data_out
	1?	data_out
	2?	data_out
	3?	data_out
	4?	data_out
	5?	data_out
	y?	valid_out
	!@	ready_out
	$@	routeRelieve
	'@	routeReserveRequestValid
	*@	routeReserveRequest
	+@	routeReserveRequest
	0@	routeReserveStatus
	<@	popBuffer
	=@	pushBuffer
	>@	full
	?@	empty
Scope: portControlLogic
	@@	N [32:0]
	A@	INDEX [32:0]
	B@	DATA_WIDTH [32:0]
	C@	TYPE_WIDTH [32:0]
	D@	REQUEST_WIDTH [32:0]
	E@	FlitPerPacket [32:0]
	F@	PhitPerFlit [32:0]
	<(	clk
	=(	rst
	$)	data_in
	%)	data_in
	&)	data_in
	')	data_in
	()	data_in
	))	data_in
	*)	data_in
	+)	data_in
	,)	data_in
	-)	data_in
	.)	data_in
	/)	data_in
	0)	data_in
	1)	data_in
	2)	data_in
	3)	data_in
	4)	data_in
	5)	data_in
	6)	data_in
	7)	data_in
	8)	data_in
	9)	data_in
	:)	data_in
	;)	data_in
	<)	data_in
	=)	data_in
	>)	data_in
	?)	data_in
	@)	data_in
	A)	data_in
	B)	data_in
	C)	data_in
	E)	valid_in
	D)	ready_in
	y?	valid_out
	!@	ready_out
	t>	Flit
	u>	Flit
	v>	Flit
	w>	Flit
	x>	Flit
	y>	Flit
	z>	Flit
	{>	Flit
	|>	Flit
	}>	Flit
	~>	Flit
	!?	Flit
	"?	Flit
	#?	Flit
	$?	Flit
	%?	Flit
	&?	Flit
	'?	Flit
	(?	Flit
	)?	Flit
	*?	Flit
	+?	Flit
	,?	Flit
	-?	Flit
	.?	Flit
	/?	Flit
	0?	Flit
	1?	Flit
	2?	Flit
	3?	Flit
	4?	Flit
	5?	Flit
	<@	popBuffer
	=@	pushBuffer
	>@	full
	?@	empty
	$@	routeRelieve
	'@	routeReserveRequestValid
	*@	routeReserveRequest
	+@	routeReserveRequest
	0@	routeReserveStatus
	G@	FlitType
	H@	FlitType
	I@	reserveRoute
	J@	routeReserveStatus_CFSM
	K@	Head_Phit
	L@	Head_Phit
	M@	Head_Phit
	N@	Head_Phit
	O@	Head_Phit
	P@	Head_Phit
	Q@	Head_Phit
	R@	Head_Phit
	S@	Head_Phit
	T@	Head_Phit
	U@	Head_Phit
	V@	Head_Phit
	W@	Head_Phit
	X@	Head_Phit
	Y@	Head_Phit
	Z@	Head_Phit
	[@	Head_Phit
	\@	Head_Phit
	]@	Head_Phit
	^@	Head_Phit
	_@	Head_Phit
	`@	Head_Phit
	a@	Head_Phit
	b@	Head_Phit
	c@	Head_Phit
	d@	Head_Phit
	e@	Head_Phit
	f@	Head_Phit
	g@	Head_Phit
	h@	Head_Phit
	i@	Head_Phit
	j@	Head_Phit
	k@	headFlitValid
	l@	phitCounter
	m@	headFlitStatus
	n@	Handshake
Scope: controlFSM
	o@	FlitPerPacket [32:0]
	p@	PhitPerFlit [32:0]
	q@	REQUEST_WIDTH [32:0]
	r@	TYPE_WIDTH [32:0]
	s@	HEAD [32:0]
	t@	PAYLOAD [32:0]
	u@	TAIL [32:0]
	v@	UnRouted [32:0]
	w@	HeadFlit [32:0]
	x@	ReservePath [32:0]
	y@	Route [32:0]
	z@	TailFlit [32:0]
	<(	clk
	=(	rst
	E)	valid_in
	D)	ready_in
	y?	valid_out
	!@	ready_out
	G@	FlitType
	H@	FlitType
	I@	reserveRoute
	J@	routeReserveStatus
	k@	headFlitValid
	{@	phitCounter
	m@	headFlitStatus
	<@	popBuffer
	=@	pushBuffer
	n@	Handshake
	>@	full
	?@	empty
	$@	routeRelieve
	|@	state [3:0]
	}@	nextState [3:0]
	~@	flitCounter [4:0]
	!A	TailReceived
	"A	flitValid
	#A	pushBuffer_state
Scope: headFlitBuffer
	$A	N [32:0]
	%A	INDEX [32:0]
	&A	DATA_WIDTH [32:0]
	'A	PhitPerFlit [32:0]
	(A	REQUEST_WIDTH [32:0]
	<(	clk
	=(	rst
	n@	Handshake
	$)	Head_Phit
	%)	Head_Phit
	&)	Head_Phit
	')	Head_Phit
	()	Head_Phit
	))	Head_Phit
	*)	Head_Phit
	+)	Head_Phit
	,)	Head_Phit
	-)	Head_Phit
	.)	Head_Phit
	/)	Head_Phit
	0)	Head_Phit
	1)	Head_Phit
	2)	Head_Phit
	3)	Head_Phit
	4)	Head_Phit
	5)	Head_Phit
	6)	Head_Phit
	7)	Head_Phit
	8)	Head_Phit
	9)	Head_Phit
	:)	Head_Phit
	;)	Head_Phit
	<)	Head_Phit
	=)	Head_Phit
	>)	Head_Phit
	?)	Head_Phit
	@)	Head_Phit
	A)	Head_Phit
	B)	Head_Phit
	C)	Head_Phit
	k@	headFlitValid
	l@	phitCounter
	I@	reserveRoute
	J@	routeReserveStatus_CFSM
	m@	headFlitStatus
	'@	routeReserveRequestValid
	*@	routeReserveRequest
	+@	routeReserveRequest
	0@	routeReserveStatus_Switch
	)A	headBuffer [32:0]
	*A	headFlitValidStatus
Scope: headFlitDecoder
	+A	N [32:0]
	,A	INDEX [32:0]
	-A	DATA_WIDTH [32:0]
	.A	PhitPerFlit [32:0]
	/A	REQUEST_WIDTH [32:0]
	0A	HeadFlit
	1A	HeadFlit
	2A	HeadFlit
	3A	HeadFlit
	4A	HeadFlit
	5A	HeadFlit
	6A	HeadFlit
	7A	HeadFlit
	8A	HeadFlit
	9A	HeadFlit
	:A	HeadFlit
	;A	HeadFlit
	<A	HeadFlit
	=A	HeadFlit
	>A	HeadFlit
	?A	HeadFlit
	@A	HeadFlit
	AA	HeadFlit
	BA	HeadFlit
	CA	HeadFlit
	DA	HeadFlit
	EA	HeadFlit
	FA	HeadFlit
	GA	HeadFlit
	HA	HeadFlit
	IA	HeadFlit
	JA	HeadFlit
	KA	HeadFlit
	LA	HeadFlit
	MA	HeadFlit
	NA	HeadFlit
	OA	HeadFlit
	*@	RequestMessage
	+@	RequestMessage
	PA	pathString [2048:0]
	QA	index [32:0]
	RA	i [32:0]
	SA	Destination
	TA	Destination
	UA	Destination
Scope: flitIdentifier
	VA	DATA_WIDTH [32:0]
	WA	TYPE_WIDTH [32:0]
	XA	PhitPerFlit [32:0]
	YA	HeadIdentifier [32:0]
	ZA	PayLoadIdentifier [32:0]
	[A	TailIdentifier [32:0]
	\A	DEFAULT [32:0]
	]A	HEAD [32:0]
	^A	PAYLOAD [32:0]
	_A	TAIL [32:0]
	t>	Flit
	u>	Flit
	v>	Flit
	w>	Flit
	x>	Flit
	y>	Flit
	z>	Flit
	{>	Flit
	|>	Flit
	}>	Flit
	~>	Flit
	!?	Flit
	"?	Flit
	#?	Flit
	$?	Flit
	%?	Flit
	&?	Flit
	'?	Flit
	(?	Flit
	)?	Flit
	*?	Flit
	+?	Flit
	,?	Flit
	-?	Flit
	.?	Flit
	/?	Flit
	0?	Flit
	1?	Flit
	2?	Flit
	3?	Flit
	4?	Flit
	5?	Flit
	`A	FlitType [2:0]
Scope: fifo
	aA	DATA_WIDTH [32:0]
	bA	FIFO_DEPTH [32:0]
	cA	ADDRESS_WIDTH [32:0]
	<(	clk
	=(	rst
	?@	empty
	<@	rd_en
	dA	dout [32:0]
	>@	full
	=@	wr_en
	$)	din
	%)	din
	&)	din
	')	din
	()	din
	))	din
	*)	din
	+)	din
	,)	din
	-)	din
	.)	din
	/)	din
	0)	din
	1)	din
	2)	din
	3)	din
	4)	din
	5)	din
	6)	din
	7)	din
	8)	din
	9)	din
	:)	din
	;)	din
	<)	din
	=)	din
	>)	din
	?)	din
	@)	din
	A)	din
	B)	din
	C)	din
	eA	head_tail
	fA	head_tail
	gA	head_tail
	hA	head_tail
	iA	head [4:0]
	jA	tail [4:0]
	kA	i [32:0]
Scope: genblk1
	lA	i [32:0]
Scope: port
	mA	N [32:0]
	nA	INDEX [32:0]
	oA	DATA_WIDTH [32:0]
	pA	TYPE_WIDTH [32:0]
	qA	REQUEST_WIDTH [32:0]
	rA	FlitPerPacket [32:0]
	sA	PhitPerFlit [32:0]
	tA	FIFO_DEPTH [32:0]
	<(	clk
	=(	rst
	`(	data_in
	a(	data_in
	b(	data_in
	c(	data_in
	d(	data_in
	e(	data_in
	f(	data_in
	g(	data_in
	h(	data_in
	i(	data_in
	j(	data_in
	k(	data_in
	l(	data_in
	m(	data_in
	n(	data_in
	o(	data_in
	p(	data_in
	q(	data_in
	r(	data_in
	s(	data_in
	t(	data_in
	u(	data_in
	v(	data_in
	w(	data_in
	x(	data_in
	y(	data_in
	z(	data_in
	{(	data_in
	|(	data_in
	}(	data_in
	~(	data_in
	!)	data_in
	#)	valid_in
	")	ready_in
	6?	data_out
	7?	data_out
	8?	data_out
	9?	data_out
	:?	data_out
	;?	data_out
	<?	data_out
	=?	data_out
	>?	data_out
	??	data_out
	@?	data_out
	A?	data_out
	B?	data_out
	C?	data_out
	D?	data_out
	E?	data_out
	F?	data_out
	G?	data_out
	H?	data_out
	I?	data_out
	J?	data_out
	K?	data_out
	L?	data_out
	M?	data_out
	N?	data_out
	O?	data_out
	P?	data_out
	Q?	data_out
	R?	data_out
	S?	data_out
	T?	data_out
	U?	data_out
	z?	valid_out
	"@	ready_out
	%@	routeRelieve
	(@	routeReserveRequestValid
	,@	routeReserveRequest
	-@	routeReserveRequest
	1@	routeReserveStatus
	uA	popBuffer
	vA	pushBuffer
	wA	full
	xA	empty
Scope: portControlLogic
	yA	N [32:0]
	zA	INDEX [32:0]
	{A	DATA_WIDTH [32:0]
	|A	TYPE_WIDTH [32:0]
	}A	REQUEST_WIDTH [32:0]
	~A	FlitPerPacket [32:0]
	!B	PhitPerFlit [32:0]
	<(	clk
	=(	rst
	`(	data_in
	a(	data_in
	b(	data_in
	c(	data_in
	d(	data_in
	e(	data_in
	f(	data_in
	g(	data_in
	h(	data_in
	i(	data_in
	j(	data_in
	k(	data_in
	l(	data_in
	m(	data_in
	n(	data_in
	o(	data_in
	p(	data_in
	q(	data_in
	r(	data_in
	s(	data_in
	t(	data_in
	u(	data_in
	v(	data_in
	w(	data_in
	x(	data_in
	y(	data_in
	z(	data_in
	{(	data_in
	|(	data_in
	}(	data_in
	~(	data_in
	!)	data_in
	#)	valid_in
	")	ready_in
	z?	valid_out
	"@	ready_out
	6?	Flit
	7?	Flit
	8?	Flit
	9?	Flit
	:?	Flit
	;?	Flit
	<?	Flit
	=?	Flit
	>?	Flit
	??	Flit
	@?	Flit
	A?	Flit
	B?	Flit
	C?	Flit
	D?	Flit
	E?	Flit
	F?	Flit
	G?	Flit
	H?	Flit
	I?	Flit
	J?	Flit
	K?	Flit
	L?	Flit
	M?	Flit
	N?	Flit
	O?	Flit
	P?	Flit
	Q?	Flit
	R?	Flit
	S?	Flit
	T?	Flit
	U?	Flit
	uA	popBuffer
	vA	pushBuffer
	wA	full
	xA	empty
	%@	routeRelieve
	(@	routeReserveRequestValid
	,@	routeReserveRequest
	-@	routeReserveRequest
	1@	routeReserveStatus
	"B	FlitType
	#B	FlitType
	$B	reserveRoute
	%B	routeReserveStatus_CFSM
	&B	Head_Phit
	'B	Head_Phit
	(B	Head_Phit
	)B	Head_Phit
	*B	Head_Phit
	+B	Head_Phit
	,B	Head_Phit
	-B	Head_Phit
	.B	Head_Phit
	/B	Head_Phit
	0B	Head_Phit
	1B	Head_Phit
	2B	Head_Phit
	3B	Head_Phit
	4B	Head_Phit
	5B	Head_Phit
	6B	Head_Phit
	7B	Head_Phit
	8B	Head_Phit
	9B	Head_Phit
	:B	Head_Phit
	;B	Head_Phit
	<B	Head_Phit
	=B	Head_Phit
	>B	Head_Phit
	?B	Head_Phit
	@B	Head_Phit
	AB	Head_Phit
	BB	Head_Phit
	CB	Head_Phit
	DB	Head_Phit
	EB	Head_Phit
	FB	headFlitValid
	GB	phitCounter
	HB	headFlitStatus
	IB	Handshake
Scope: controlFSM
	JB	FlitPerPacket [32:0]
	KB	PhitPerFlit [32:0]
	LB	REQUEST_WIDTH [32:0]
	MB	TYPE_WIDTH [32:0]
	NB	HEAD [32:0]
	OB	PAYLOAD [32:0]
	PB	TAIL [32:0]
	QB	UnRouted [32:0]
	RB	HeadFlit [32:0]
	SB	ReservePath [32:0]
	TB	Route [32:0]
	UB	TailFlit [32:0]
	<(	clk
	=(	rst
	#)	valid_in
	")	ready_in
	z?	valid_out
	"@	ready_out
	"B	FlitType
	#B	FlitType
	$B	reserveRoute
	%B	routeReserveStatus
	FB	headFlitValid
	VB	phitCounter
	HB	headFlitStatus
	uA	popBuffer
	vA	pushBuffer
	IB	Handshake
	wA	full
	xA	empty
	%@	routeRelieve
	WB	state [3:0]
	XB	nextState [3:0]
	YB	flitCounter [4:0]
	ZB	TailReceived
	[B	flitValid
	\B	pushBuffer_state
Scope: headFlitBuffer
	]B	N [32:0]
	^B	INDEX [32:0]
	_B	DATA_WIDTH [32:0]
	`B	PhitPerFlit [32:0]
	aB	REQUEST_WIDTH [32:0]
	<(	clk
	=(	rst
	IB	Handshake
	`(	Head_Phit
	a(	Head_Phit
	b(	Head_Phit
	c(	Head_Phit
	d(	Head_Phit
	e(	Head_Phit
	f(	Head_Phit
	g(	Head_Phit
	h(	Head_Phit
	i(	Head_Phit
	j(	Head_Phit
	k(	Head_Phit
	l(	Head_Phit
	m(	Head_Phit
	n(	Head_Phit
	o(	Head_Phit
	p(	Head_Phit
	q(	Head_Phit
	r(	Head_Phit
	s(	Head_Phit
	t(	Head_Phit
	u(	Head_Phit
	v(	Head_Phit
	w(	Head_Phit
	x(	Head_Phit
	y(	Head_Phit
	z(	Head_Phit
	{(	Head_Phit
	|(	Head_Phit
	}(	Head_Phit
	~(	Head_Phit
	!)	Head_Phit
	FB	headFlitValid
	GB	phitCounter
	$B	reserveRoute
	%B	routeReserveStatus_CFSM
	HB	headFlitStatus
	(@	routeReserveRequestValid
	,@	routeReserveRequest
	-@	routeReserveRequest
	1@	routeReserveStatus_Switch
	bB	headBuffer [32:0]
	cB	headFlitValidStatus
Scope: headFlitDecoder
	dB	N [32:0]
	eB	INDEX [32:0]
	fB	DATA_WIDTH [32:0]
	gB	PhitPerFlit [32:0]
	hB	REQUEST_WIDTH [32:0]
	iB	HeadFlit
	jB	HeadFlit
	kB	HeadFlit
	lB	HeadFlit
	mB	HeadFlit
	nB	HeadFlit
	oB	HeadFlit
	pB	HeadFlit
	qB	HeadFlit
	rB	HeadFlit
	sB	HeadFlit
	tB	HeadFlit
	uB	HeadFlit
	vB	HeadFlit
	wB	HeadFlit
	xB	HeadFlit
	yB	HeadFlit
	zB	HeadFlit
	{B	HeadFlit
	|B	HeadFlit
	}B	HeadFlit
	~B	HeadFlit
	!C	HeadFlit
	"C	HeadFlit
	#C	HeadFlit
	$C	HeadFlit
	%C	HeadFlit
	&C	HeadFlit
	'C	HeadFlit
	(C	HeadFlit
	)C	HeadFlit
	*C	HeadFlit
	,@	RequestMessage
	-@	RequestMessage
	+C	pathString [2048:0]
	,C	index [32:0]
	-C	i [32:0]
	.C	Destination
	/C	Destination
	0C	Destination
Scope: flitIdentifier
	1C	DATA_WIDTH [32:0]
	2C	TYPE_WIDTH [32:0]
	3C	PhitPerFlit [32:0]
	4C	HeadIdentifier [32:0]
	5C	PayLoadIdentifier [32:0]
	6C	TailIdentifier [32:0]
	7C	DEFAULT [32:0]
	8C	HEAD [32:0]
	9C	PAYLOAD [32:0]
	:C	TAIL [32:0]
	6?	Flit
	7?	Flit
	8?	Flit
	9?	Flit
	:?	Flit
	;?	Flit
	<?	Flit
	=?	Flit
	>?	Flit
	??	Flit
	@?	Flit
	A?	Flit
	B?	Flit
	C?	Flit
	D?	Flit
	E?	Flit
	F?	Flit
	G?	Flit
	H?	Flit
	I?	Flit
	J?	Flit
	K?	Flit
	L?	Flit
	M?	Flit
	N?	Flit
	O?	Flit
	P?	Flit
	Q?	Flit
	R?	Flit
	S?	Flit
	T?	Flit
	U?	Flit
	;C	FlitType [2:0]
Scope: fifo
	<C	DATA_WIDTH [32:0]
	=C	FIFO_DEPTH [32:0]
	>C	ADDRESS_WIDTH [32:0]
	<(	clk
	=(	rst
	xA	empty
	uA	rd_en
	?C	dout [32:0]
	wA	full
	vA	wr_en
	`(	din
	a(	din
	b(	din
	c(	din
	d(	din
	e(	din
	f(	din
	g(	din
	h(	din
	i(	din
	j(	din
	k(	din
	l(	din
	m(	din
	n(	din
	o(	din
	p(	din
	q(	din
	r(	din
	s(	din
	t(	din
	u(	din
	v(	din
	w(	din
	x(	din
	y(	din
	z(	din
	{(	din
	|(	din
	}(	din
	~(	din
	!)	din
	@C	head_tail
	AC	head_tail
	BC	head_tail
	CC	head_tail
	DC	head [4:0]
	EC	tail [4:0]
	FC	i [32:0]
Scope: genblk1
	GC	i [32:0]
Scope: port
	HC	N [32:0]
	IC	INDEX [32:0]
	JC	DATA_WIDTH [32:0]
	KC	TYPE_WIDTH [32:0]
	LC	REQUEST_WIDTH [32:0]
	MC	FlitPerPacket [32:0]
	NC	PhitPerFlit [32:0]
	OC	FIFO_DEPTH [32:0]
	<(	clk
	=(	rst
	>(	data_in
	?(	data_in
	@(	data_in
	A(	data_in
	B(	data_in
	C(	data_in
	D(	data_in
	E(	data_in
	F(	data_in
	G(	data_in
	H(	data_in
	I(	data_in
	J(	data_in
	K(	data_in
	L(	data_in
	M(	data_in
	N(	data_in
	O(	data_in
	P(	data_in
	Q(	data_in
	R(	data_in
	S(	data_in
	T(	data_in
	U(	data_in
	V(	data_in
	W(	data_in
	X(	data_in
	Y(	data_in
	Z(	data_in
	[(	data_in
	\(	data_in
	](	data_in
	_(	valid_in
	^(	ready_in
	V?	data_out
	W?	data_out
	X?	data_out
	Y?	data_out
	Z?	data_out
	[?	data_out
	\?	data_out
	]?	data_out
	^?	data_out
	_?	data_out
	`?	data_out
	a?	data_out
	b?	data_out
	c?	data_out
	d?	data_out
	e?	data_out
	f?	data_out
	g?	data_out
	h?	data_out
	i?	data_out
	j?	data_out
	k?	data_out
	l?	data_out
	m?	data_out
	n?	data_out
	o?	data_out
	p?	data_out
	q?	data_out
	r?	data_out
	s?	data_out
	t?	data_out
	u?	data_out
	{?	valid_out
	#@	ready_out
	&@	routeRelieve
	)@	routeReserveRequestValid
	.@	routeReserveRequest
	/@	routeReserveRequest
	2@	routeReserveStatus
	PC	popBuffer
	QC	pushBuffer
	RC	full
	SC	empty
Scope: portControlLogic
	TC	N [32:0]
	UC	INDEX [32:0]
	VC	DATA_WIDTH [32:0]
	WC	TYPE_WIDTH [32:0]
	XC	REQUEST_WIDTH [32:0]
	YC	FlitPerPacket [32:0]
	ZC	PhitPerFlit [32:0]
	<(	clk
	=(	rst
	>(	data_in
	?(	data_in
	@(	data_in
	A(	data_in
	B(	data_in
	C(	data_in
	D(	data_in
	E(	data_in
	F(	data_in
	G(	data_in
	H(	data_in
	I(	data_in
	J(	data_in
	K(	data_in
	L(	data_in
	M(	data_in
	N(	data_in
	O(	data_in
	P(	data_in
	Q(	data_in
	R(	data_in
	S(	data_in
	T(	data_in
	U(	data_in
	V(	data_in
	W(	data_in
	X(	data_in
	Y(	data_in
	Z(	data_in
	[(	data_in
	\(	data_in
	](	data_in
	_(	valid_in
	^(	ready_in
	{?	valid_out
	#@	ready_out
	V?	Flit
	W?	Flit
	X?	Flit
	Y?	Flit
	Z?	Flit
	[?	Flit
	\?	Flit
	]?	Flit
	^?	Flit
	_?	Flit
	`?	Flit
	a?	Flit
	b?	Flit
	c?	Flit
	d?	Flit
	e?	Flit
	f?	Flit
	g?	Flit
	h?	Flit
	i?	Flit
	j?	Flit
	k?	Flit
	l?	Flit
	m?	Flit
	n?	Flit
	o?	Flit
	p?	Flit
	q?	Flit
	r?	Flit
	s?	Flit
	t?	Flit
	u?	Flit
	PC	popBuffer
	QC	pushBuffer
	RC	full
	SC	empty
	&@	routeRelieve
	)@	routeReserveRequestValid
	.@	routeReserveRequest
	/@	routeReserveRequest
	2@	routeReserveStatus
	[C	FlitType
	\C	FlitType
	]C	reserveRoute
	^C	routeReserveStatus_CFSM
	_C	Head_Phit
	`C	Head_Phit
	aC	Head_Phit
	bC	Head_Phit
	cC	Head_Phit
	dC	Head_Phit
	eC	Head_Phit
	fC	Head_Phit
	gC	Head_Phit
	hC	Head_Phit
	iC	Head_Phit
	jC	Head_Phit
	kC	Head_Phit
	lC	Head_Phit
	mC	Head_Phit
	nC	Head_Phit
	oC	Head_Phit
	pC	Head_Phit
	qC	Head_Phit
	rC	Head_Phit
	sC	Head_Phit
	tC	Head_Phit
	uC	Head_Phit
	vC	Head_Phit
	wC	Head_Phit
	xC	Head_Phit
	yC	Head_Phit
	zC	Head_Phit
	{C	Head_Phit
	|C	Head_Phit
	}C	Head_Phit
	~C	Head_Phit
	!D	headFlitValid
	"D	phitCounter
	#D	headFlitStatus
	$D	Handshake
Scope: controlFSM
	%D	FlitPerPacket [32:0]
	&D	PhitPerFlit [32:0]
	'D	REQUEST_WIDTH [32:0]
	(D	TYPE_WIDTH [32:0]
	)D	HEAD [32:0]
	*D	PAYLOAD [32:0]
	+D	TAIL [32:0]
	,D	UnRouted [32:0]
	-D	HeadFlit [32:0]
	.D	ReservePath [32:0]
	/D	Route [32:0]
	0D	TailFlit [32:0]
	<(	clk
	=(	rst
	_(	valid_in
	^(	ready_in
	{?	valid_out
	#@	ready_out
	[C	FlitType
	\C	FlitType
	]C	reserveRoute
	^C	routeReserveStatus
	!D	headFlitValid
	1D	phitCounter
	#D	headFlitStatus
	PC	popBuffer
	QC	pushBuffer
	$D	Handshake
	RC	full
	SC	empty
	&@	routeRelieve
	2D	state [3:0]
	3D	nextState [3:0]
	4D	flitCounter [4:0]
	5D	TailReceived
	6D	flitValid
	7D	pushBuffer_state
Scope: headFlitBuffer
	8D	N [32:0]
	9D	INDEX [32:0]
	:D	DATA_WIDTH [32:0]
	;D	PhitPerFlit [32:0]
	<D	REQUEST_WIDTH [32:0]
	<(	clk
	=(	rst
	$D	Handshake
	>(	Head_Phit
	?(	Head_Phit
	@(	Head_Phit
	A(	Head_Phit
	B(	Head_Phit
	C(	Head_Phit
	D(	Head_Phit
	E(	Head_Phit
	F(	Head_Phit
	G(	Head_Phit
	H(	Head_Phit
	I(	Head_Phit
	J(	Head_Phit
	K(	Head_Phit
	L(	Head_Phit
	M(	Head_Phit
	N(	Head_Phit
	O(	Head_Phit
	P(	Head_Phit
	Q(	Head_Phit
	R(	Head_Phit
	S(	Head_Phit
	T(	Head_Phit
	U(	Head_Phit
	V(	Head_Phit
	W(	Head_Phit
	X(	Head_Phit
	Y(	Head_Phit
	Z(	Head_Phit
	[(	Head_Phit
	\(	Head_Phit
	](	Head_Phit
	!D	headFlitValid
	"D	phitCounter
	]C	reserveRoute
	^C	routeReserveStatus_CFSM
	#D	headFlitStatus
	)@	routeReserveRequestValid
	.@	routeReserveRequest
	/@	routeReserveRequest
	2@	routeReserveStatus_Switch
	=D	headBuffer [32:0]
	>D	headFlitValidStatus
Scope: headFlitDecoder
	?D	N [32:0]
	@D	INDEX [32:0]
	AD	DATA_WIDTH [32:0]
	BD	PhitPerFlit [32:0]
	CD	REQUEST_WIDTH [32:0]
	DD	HeadFlit
	ED	HeadFlit
	FD	HeadFlit
	GD	HeadFlit
	HD	HeadFlit
	ID	HeadFlit
	JD	HeadFlit
	KD	HeadFlit
	LD	HeadFlit
	MD	HeadFlit
	ND	HeadFlit
	OD	HeadFlit
	PD	HeadFlit
	QD	HeadFlit
	RD	HeadFlit
	SD	HeadFlit
	TD	HeadFlit
	UD	HeadFlit
	VD	HeadFlit
	WD	HeadFlit
	XD	HeadFlit
	YD	HeadFlit
	ZD	HeadFlit
	[D	HeadFlit
	\D	HeadFlit
	]D	HeadFlit
	^D	HeadFlit
	_D	HeadFlit
	`D	HeadFlit
	aD	HeadFlit
	bD	HeadFlit
	cD	HeadFlit
	.@	RequestMessage
	/@	RequestMessage
	dD	pathString [2048:0]
	eD	index [32:0]
	fD	i [32:0]
	gD	Destination
	hD	Destination
	iD	Destination
Scope: flitIdentifier
	jD	DATA_WIDTH [32:0]
	kD	TYPE_WIDTH [32:0]
	lD	PhitPerFlit [32:0]
	mD	HeadIdentifier [32:0]
	nD	PayLoadIdentifier [32:0]
	oD	TailIdentifier [32:0]
	pD	DEFAULT [32:0]
	qD	HEAD [32:0]
	rD	PAYLOAD [32:0]
	sD	TAIL [32:0]
	V?	Flit
	W?	Flit
	X?	Flit
	Y?	Flit
	Z?	Flit
	[?	Flit
	\?	Flit
	]?	Flit
	^?	Flit
	_?	Flit
	`?	Flit
	a?	Flit
	b?	Flit
	c?	Flit
	d?	Flit
	e?	Flit
	f?	Flit
	g?	Flit
	h?	Flit
	i?	Flit
	j?	Flit
	k?	Flit
	l?	Flit
	m?	Flit
	n?	Flit
	o?	Flit
	p?	Flit
	q?	Flit
	r?	Flit
	s?	Flit
	t?	Flit
	u?	Flit
	tD	FlitType [2:0]
Scope: fifo
	uD	DATA_WIDTH [32:0]
	vD	FIFO_DEPTH [32:0]
	wD	ADDRESS_WIDTH [32:0]
	<(	clk
	=(	rst
	SC	empty
	PC	rd_en
	xD	dout [32:0]
	RC	full
	QC	wr_en
	>(	din
	?(	din
	@(	din
	A(	din
	B(	din
	C(	din
	D(	din
	E(	din
	F(	din
	G(	din
	H(	din
	I(	din
	J(	din
	K(	din
	L(	din
	M(	din
	N(	din
	O(	din
	P(	din
	Q(	din
	R(	din
	S(	din
	T(	din
	U(	din
	V(	din
	W(	din
	X(	din
	Y(	din
	Z(	din
	[(	din
	\(	din
	](	din
	yD	head_tail
	zD	head_tail
	{D	head_tail
	|D	head_tail
	}D	head [4:0]
	~D	tail [4:0]
	!E	i [32:0]
Scope: switch
	"E	N [32:0]
	#E	INPUTS [32:0]
	$E	OUTPUTS [32:0]
	%E	DATA_WIDTH [32:0]
	&E	REQUEST_WIDTH [32:0]
	<(	clk
	=(	rst
	'@	routeReserveRequestValid
	(@	routeReserveRequestValid
	)@	routeReserveRequestValid
	*@	routeReserveRequest
	+@	routeReserveRequest
	,@	routeReserveRequest
	-@	routeReserveRequest
	.@	routeReserveRequest
	/@	routeReserveRequest
	$@	routeRelieve
	%@	routeRelieve
	&@	routeRelieve
	0@	routeReserveStatus
	1@	routeReserveStatus
	2@	routeReserveStatus
	r=	data_in
	s=	data_in
	t=	data_in
	u=	data_in
	v=	data_in
	w=	data_in
	x=	data_in
	y=	data_in
	z=	data_in
	{=	data_in
	|=	data_in
	}=	data_in
	~=	data_in
	!>	data_in
	">	data_in
	#>	data_in
	$>	data_in
	%>	data_in
	&>	data_in
	'>	data_in
	(>	data_in
	)>	data_in
	*>	data_in
	+>	data_in
	,>	data_in
	->	data_in
	.>	data_in
	/>	data_in
	0>	data_in
	1>	data_in
	2>	data_in
	3>	data_in
	4>	data_in
	5>	data_in
	6>	data_in
	7>	data_in
	8>	data_in
	9>	data_in
	:>	data_in
	;>	data_in
	<>	data_in
	=>	data_in
	>>	data_in
	?>	data_in
	@>	data_in
	A>	data_in
	B>	data_in
	C>	data_in
	D>	data_in
	E>	data_in
	F>	data_in
	G>	data_in
	H>	data_in
	I>	data_in
	J>	data_in
	K>	data_in
	L>	data_in
	M>	data_in
	N>	data_in
	O>	data_in
	P>	data_in
	Q>	data_in
	R>	data_in
	S>	data_in
	T>	data_in
	U>	data_in
	V>	data_in
	W>	data_in
	X>	data_in
	Y>	data_in
	Z>	data_in
	[>	data_in
	\>	data_in
	]>	data_in
	^>	data_in
	_>	data_in
	`>	data_in
	a>	data_in
	b>	data_in
	c>	data_in
	d>	data_in
	e>	data_in
	f>	data_in
	g>	data_in
	h>	data_in
	i>	data_in
	j>	data_in
	k>	data_in
	l>	data_in
	m>	data_in
	n>	data_in
	o>	data_in
	p>	data_in
	q>	data_in
	r>	data_in
	s>	data_in
	v?	valid_in
	w?	valid_in
	x?	valid_in
	|?	ready_in
	}?	ready_in
	~?	ready_in
	,*	data_out
	-*	data_out
	.*	data_out
	/*	data_out
	0*	data_out
	1*	data_out
	2*	data_out
	3*	data_out
	4*	data_out
	5*	data_out
	6*	data_out
	7*	data_out
	8*	data_out
	9*	data_out
	:*	data_out
	;*	data_out
	<*	data_out
	=*	data_out
	>*	data_out
	?*	data_out
	@*	data_out
	A*	data_out
	B*	data_out
	C*	data_out
	D*	data_out
	E*	data_out
	F*	data_out
	G*	data_out
	H*	data_out
	I*	data_out
	J*	data_out
	K*	data_out
	h)	data_out
	i)	data_out
	j)	data_out
	k)	data_out
	l)	data_out
	m)	data_out
	n)	data_out
	o)	data_out
	p)	data_out
	q)	data_out
	r)	data_out
	s)	data_out
	t)	data_out
	u)	data_out
	v)	data_out
	w)	data_out
	x)	data_out
	y)	data_out
	z)	data_out
	{)	data_out
	|)	data_out
	})	data_out
	~)	data_out
	!*	data_out
	"*	data_out
	#*	data_out
	$*	data_out
	%*	data_out
	&*	data_out
	'*	data_out
	(*	data_out
	)*	data_out
	F)	data_out
	G)	data_out
	H)	data_out
	I)	data_out
	J)	data_out
	K)	data_out
	L)	data_out
	M)	data_out
	N)	data_out
	O)	data_out
	P)	data_out
	Q)	data_out
	R)	data_out
	S)	data_out
	T)	data_out
	U)	data_out
	V)	data_out
	W)	data_out
	X)	data_out
	Y)	data_out
	Z)	data_out
	[)	data_out
	\)	data_out
	])	data_out
	^)	data_out
	_)	data_out
	`)	data_out
	a)	data_out
	b)	data_out
	c)	data_out
	d)	data_out
	e)	data_out
	M*	valid_out
	+*	valid_out
	g)	valid_out
	L*	ready_out
	**	ready_out
	f)	ready_out
	'E	routeSelect
	(E	routeSelect
	)E	routeSelect
	*E	routeSelect
	+E	routeSelect
	,E	routeSelect
	-E	outputBusy
	.E	outputBusy
	/E	outputBusy
	0E	PortReserved
	1E	PortReserved
	2E	PortReserved
Scope: switchControl
	3E	N [32:0]
	4E	INPUTS [32:0]
	5E	OUTPUTS [32:0]
	6E	DATA_WIDTH [32:0]
	7E	REQUEST_WIDTH [32:0]
	8E	STATE_WIDTH [32:0]
	9E	UnRouted [32:0]
	:E	Check [32:0]
	;E	Arbitrate [32:0]
	<E	PathReserved1 [32:0]
	=E	PathReserved0 [32:0]
	<(	clk
	=(	rst
	'@	routeReserveRequestValid
	(@	routeReserveRequestValid
	)@	routeReserveRequestValid
	*@	routeReserveRequest
	+@	routeReserveRequest
	,@	routeReserveRequest
	-@	routeReserveRequest
	.@	routeReserveRequest
	/@	routeReserveRequest
	$@	routeRelieve
	%@	routeRelieve
	&@	routeRelieve
	>E	routeReserveStatus [3:0]
	?E	routeSelect [6:0]
	@E	outputBusy [3:0]
	AE	PortReserved [3:0]
	BE	switchRequest [3:0]
	CE	outputRelieve [3:0]
	DE	PortBusy [3:0]
	EE	Conflict [3:0]
	FE	switchState [9:0]
	GE	switchState_next [9:0]
	HE	i0 [32:0]
	IE	i1 [32:0]
	JE	i2 [32:0]
	KE	i3 [32:0]
	LE	i4 [32:0]
	ME	j4 [32:0]
	NE	i5 [32:0]
	OE	i6 [32:0]
	PE	i7 [32:0]
	QE	j7 [32:0]
	RE	i8 [32:0]
	SE	j8 [32:0]
	TE	i9 [32:0]
	UE	j9 [32:0]
Scope: muxSwitch
	VE	INPUTS [32:0]
	WE	OUTPUTS [32:0]
	XE	DATA_WIDTH [32:0]
	YE	REQUEST_WIDTH [32:0]
	'E	routeSelect
	(E	routeSelect
	)E	routeSelect
	*E	routeSelect
	+E	routeSelect
	,E	routeSelect
	-E	outputBusy
	.E	outputBusy
	/E	outputBusy
	0E	PortReserved
	1E	PortReserved
	2E	PortReserved
	r=	data_in
	s=	data_in
	t=	data_in
	u=	data_in
	v=	data_in
	w=	data_in
	x=	data_in
	y=	data_in
	z=	data_in
	{=	data_in
	|=	data_in
	}=	data_in
	~=	data_in
	!>	data_in
	">	data_in
	#>	data_in
	$>	data_in
	%>	data_in
	&>	data_in
	'>	data_in
	(>	data_in
	)>	data_in
	*>	data_in
	+>	data_in
	,>	data_in
	->	data_in
	.>	data_in
	/>	data_in
	0>	data_in
	1>	data_in
	2>	data_in
	3>	data_in
	4>	data_in
	5>	data_in
	6>	data_in
	7>	data_in
	8>	data_in
	9>	data_in
	:>	data_in
	;>	data_in
	<>	data_in
	=>	data_in
	>>	data_in
	?>	data_in
	@>	data_in
	A>	data_in
	B>	data_in
	C>	data_in
	D>	data_in
	E>	data_in
	F>	data_in
	G>	data_in
	H>	data_in
	I>	data_in
	J>	data_in
	K>	data_in
	L>	data_in
	M>	data_in
	N>	data_in
	O>	data_in
	P>	data_in
	Q>	data_in
	R>	data_in
	S>	data_in
	T>	data_in
	U>	data_in
	V>	data_in
	W>	data_in
	X>	data_in
	Y>	data_in
	Z>	data_in
	[>	data_in
	\>	data_in
	]>	data_in
	^>	data_in
	_>	data_in
	`>	data_in
	a>	data_in
	b>	data_in
	c>	data_in
	d>	data_in
	e>	data_in
	f>	data_in
	g>	data_in
	h>	data_in
	i>	data_in
	j>	data_in
	k>	data_in
	l>	data_in
	m>	data_in
	n>	data_in
	o>	data_in
	p>	data_in
	q>	data_in
	r>	data_in
	s>	data_in
	v?	valid_in
	w?	valid_in
	x?	valid_in
	ZE	ready_in [3:0]
	[E	data_out [96:0]
	\E	valid_out [3:0]
	L*	ready_out
	**	ready_out
	f)	ready_out
	]E	i1 [32:0]
	^E	j1 [32:0]
	_E	i2 [32:0]
	`E	j2 [32:0]
	aE	i3 [32:0]
	bE	j3 [32:0]
Scope: Router_Node3
	cE	N [32:0]
	dE	INDEX [32:0]
	eE	INPUTS [32:0]
	fE	OUTPUTS [32:0]
	gE	DATA_WIDTH [32:0]
	hE	TYPE_WIDTH [32:0]
	iE	REQUEST_WIDTH [32:0]
	jE	FlitPerPacket [32:0]
	kE	PhitPerFlit [32:0]
	lE	FIFO_DEPTH [32:0]
	N*	clk
	O*	rst
	6+	data_in_bus
	7+	data_in_bus
	8+	data_in_bus
	9+	data_in_bus
	:+	data_in_bus
	;+	data_in_bus
	<+	data_in_bus
	=+	data_in_bus
	>+	data_in_bus
	?+	data_in_bus
	@+	data_in_bus
	A+	data_in_bus
	B+	data_in_bus
	C+	data_in_bus
	D+	data_in_bus
	E+	data_in_bus
	F+	data_in_bus
	G+	data_in_bus
	H+	data_in_bus
	I+	data_in_bus
	J+	data_in_bus
	K+	data_in_bus
	L+	data_in_bus
	M+	data_in_bus
	N+	data_in_bus
	O+	data_in_bus
	P+	data_in_bus
	Q+	data_in_bus
	R+	data_in_bus
	S+	data_in_bus
	T+	data_in_bus
	U+	data_in_bus
	r*	data_in_bus
	s*	data_in_bus
	t*	data_in_bus
	u*	data_in_bus
	v*	data_in_bus
	w*	data_in_bus
	x*	data_in_bus
	y*	data_in_bus
	z*	data_in_bus
	{*	data_in_bus
	|*	data_in_bus
	}*	data_in_bus
	~*	data_in_bus
	!+	data_in_bus
	"+	data_in_bus
	#+	data_in_bus
	$+	data_in_bus
	%+	data_in_bus
	&+	data_in_bus
	'+	data_in_bus
	(+	data_in_bus
	)+	data_in_bus
	*+	data_in_bus
	++	data_in_bus
	,+	data_in_bus
	-+	data_in_bus
	.+	data_in_bus
	/+	data_in_bus
	0+	data_in_bus
	1+	data_in_bus
	2+	data_in_bus
	3+	data_in_bus
	P*	data_in_bus
	Q*	data_in_bus
	R*	data_in_bus
	S*	data_in_bus
	T*	data_in_bus
	U*	data_in_bus
	V*	data_in_bus
	W*	data_in_bus
	X*	data_in_bus
	Y*	data_in_bus
	Z*	data_in_bus
	[*	data_in_bus
	\*	data_in_bus
	]*	data_in_bus
	^*	data_in_bus
	_*	data_in_bus
	`*	data_in_bus
	a*	data_in_bus
	b*	data_in_bus
	c*	data_in_bus
	d*	data_in_bus
	e*	data_in_bus
	f*	data_in_bus
	g*	data_in_bus
	h*	data_in_bus
	i*	data_in_bus
	j*	data_in_bus
	k*	data_in_bus
	l*	data_in_bus
	m*	data_in_bus
	n*	data_in_bus
	o*	data_in_bus
	W+	valid_in_bus
	5+	valid_in_bus
	q*	valid_in_bus
	V+	ready_in_bus
	4+	ready_in_bus
	p*	ready_in_bus
	>,	data_out_bus
	?,	data_out_bus
	@,	data_out_bus
	A,	data_out_bus
	B,	data_out_bus
	C,	data_out_bus
	D,	data_out_bus
	E,	data_out_bus
	F,	data_out_bus
	G,	data_out_bus
	H,	data_out_bus
	I,	data_out_bus
	J,	data_out_bus
	K,	data_out_bus
	L,	data_out_bus
	M,	data_out_bus
	N,	data_out_bus
	O,	data_out_bus
	P,	data_out_bus
	Q,	data_out_bus
	R,	data_out_bus
	S,	data_out_bus
	T,	data_out_bus
	U,	data_out_bus
	V,	data_out_bus
	W,	data_out_bus
	X,	data_out_bus
	Y,	data_out_bus
	Z,	data_out_bus
	[,	data_out_bus
	\,	data_out_bus
	],	data_out_bus
	z+	data_out_bus
	{+	data_out_bus
	|+	data_out_bus
	}+	data_out_bus
	~+	data_out_bus
	!,	data_out_bus
	",	data_out_bus
	#,	data_out_bus
	$,	data_out_bus
	%,	data_out_bus
	&,	data_out_bus
	',	data_out_bus
	(,	data_out_bus
	),	data_out_bus
	*,	data_out_bus
	+,	data_out_bus
	,,	data_out_bus
	-,	data_out_bus
	.,	data_out_bus
	/,	data_out_bus
	0,	data_out_bus
	1,	data_out_bus
	2,	data_out_bus
	3,	data_out_bus
	4,	data_out_bus
	5,	data_out_bus
	6,	data_out_bus
	7,	data_out_bus
	8,	data_out_bus
	9,	data_out_bus
	:,	data_out_bus
	;,	data_out_bus
	X+	data_out_bus
	Y+	data_out_bus
	Z+	data_out_bus
	[+	data_out_bus
	\+	data_out_bus
	]+	data_out_bus
	^+	data_out_bus
	_+	data_out_bus
	`+	data_out_bus
	a+	data_out_bus
	b+	data_out_bus
	c+	data_out_bus
	d+	data_out_bus
	e+	data_out_bus
	f+	data_out_bus
	g+	data_out_bus
	h+	data_out_bus
	i+	data_out_bus
	j+	data_out_bus
	k+	data_out_bus
	l+	data_out_bus
	m+	data_out_bus
	n+	data_out_bus
	o+	data_out_bus
	p+	data_out_bus
	q+	data_out_bus
	r+	data_out_bus
	s+	data_out_bus
	t+	data_out_bus
	u+	data_out_bus
	v+	data_out_bus
	w+	data_out_bus
	_,	valid_out_bus
	=,	valid_out_bus
	y+	valid_out_bus
	^,	ready_out_bus
	<,	ready_out_bus
	x+	ready_out_bus
	mE	data_in_switch
	nE	data_in_switch
	oE	data_in_switch
	pE	data_in_switch
	qE	data_in_switch
	rE	data_in_switch
	sE	data_in_switch
	tE	data_in_switch
	uE	data_in_switch
	vE	data_in_switch
	wE	data_in_switch
	xE	data_in_switch
	yE	data_in_switch
	zE	data_in_switch
	{E	data_in_switch
	|E	data_in_switch
	}E	data_in_switch
	~E	data_in_switch
	!F	data_in_switch
	"F	data_in_switch
	#F	data_in_switch
	$F	data_in_switch
	%F	data_in_switch
	&F	data_in_switch
	'F	data_in_switch
	(F	data_in_switch
	)F	data_in_switch
	*F	data_in_switch
	+F	data_in_switch
	,F	data_in_switch
	-F	data_in_switch
	.F	data_in_switch
	/F	data_in_switch
	0F	data_in_switch
	1F	data_in_switch
	2F	data_in_switch
	3F	data_in_switch
	4F	data_in_switch
	5F	data_in_switch
	6F	data_in_switch
	7F	data_in_switch
	8F	data_in_switch
	9F	data_in_switch
	:F	data_in_switch
	;F	data_in_switch
	<F	data_in_switch
	=F	data_in_switch
	>F	data_in_switch
	?F	data_in_switch
	@F	data_in_switch
	AF	data_in_switch
	BF	data_in_switch
	CF	data_in_switch
	DF	data_in_switch
	EF	data_in_switch
	FF	data_in_switch
	GF	data_in_switch
	HF	data_in_switch
	IF	data_in_switch
	JF	data_in_switch
	KF	data_in_switch
	LF	data_in_switch
	MF	data_in_switch
	NF	data_in_switch
	OF	data_in_switch
	PF	data_in_switch
	QF	data_in_switch
	RF	data_in_switch
	SF	data_in_switch
	TF	data_in_switch
	UF	data_in_switch
	VF	data_in_switch
	WF	data_in_switch
	XF	data_in_switch
	YF	data_in_switch
	ZF	data_in_switch
	[F	data_in_switch
	\F	data_in_switch
	]F	data_in_switch
	^F	data_in_switch
	_F	data_in_switch
	`F	data_in_switch
	aF	data_in_switch
	bF	data_in_switch
	cF	data_in_switch
	dF	data_in_switch
	eF	data_in_switch
	fF	data_in_switch
	gF	data_in_switch
	hF	data_in_switch
	iF	data_in_switch
	jF	data_in_switch
	kF	data_in_switch
	lF	data_in_switch
	mF	data_in_switch
	nF	data_in_switch
	oF	data_out_port
	pF	data_out_port
	qF	data_out_port
	rF	data_out_port
	sF	data_out_port
	tF	data_out_port
	uF	data_out_port
	vF	data_out_port
	wF	data_out_port
	xF	data_out_port
	yF	data_out_port
	zF	data_out_port
	{F	data_out_port
	|F	data_out_port
	}F	data_out_port
	~F	data_out_port
	!G	data_out_port
	"G	data_out_port
	#G	data_out_port
	$G	data_out_port
	%G	data_out_port
	&G	data_out_port
	'G	data_out_port
	(G	data_out_port
	)G	data_out_port
	*G	data_out_port
	+G	data_out_port
	,G	data_out_port
	-G	data_out_port
	.G	data_out_port
	/G	data_out_port
	0G	data_out_port
	1G	data_out_port
	2G	data_out_port
	3G	data_out_port
	4G	data_out_port
	5G	data_out_port
	6G	data_out_port
	7G	data_out_port
	8G	data_out_port
	9G	data_out_port
	:G	data_out_port
	;G	data_out_port
	<G	data_out_port
	=G	data_out_port
	>G	data_out_port
	?G	data_out_port
	@G	data_out_port
	AG	data_out_port
	BG	data_out_port
	CG	data_out_port
	DG	data_out_port
	EG	data_out_port
	FG	data_out_port
	GG	data_out_port
	HG	data_out_port
	IG	data_out_port
	JG	data_out_port
	KG	data_out_port
	LG	data_out_port
	MG	data_out_port
	NG	data_out_port
	OG	data_out_port
	PG	data_out_port
	QG	data_out_port
	RG	data_out_port
	SG	data_out_port
	TG	data_out_port
	UG	data_out_port
	VG	data_out_port
	WG	data_out_port
	XG	data_out_port
	YG	data_out_port
	ZG	data_out_port
	[G	data_out_port
	\G	data_out_port
	]G	data_out_port
	^G	data_out_port
	_G	data_out_port
	`G	data_out_port
	aG	data_out_port
	bG	data_out_port
	cG	data_out_port
	dG	data_out_port
	eG	data_out_port
	fG	data_out_port
	gG	data_out_port
	hG	data_out_port
	iG	data_out_port
	jG	data_out_port
	kG	data_out_port
	lG	data_out_port
	mG	data_out_port
	nG	data_out_port
	oG	data_out_port
	pG	data_out_port
	qG	valid_in_switch
	rG	valid_in_switch
	sG	valid_in_switch
	tG	valid_out_port
	uG	valid_out_port
	vG	valid_out_port
	wG	ready_in_switch
	xG	ready_in_switch
	yG	ready_in_switch
	zG	ready_out_port
	{G	ready_out_port
	|G	ready_out_port
	}G	routeRelieve
	~G	routeRelieve
	!H	routeRelieve
	"H	routeReserveRequestValid
	#H	routeReserveRequestValid
	$H	routeReserveRequestValid
	%H	routeReserveRequest
	&H	routeReserveRequest
	'H	routeReserveRequest
	(H	routeReserveRequest
	)H	routeReserveRequest
	*H	routeReserveRequest
	+H	routeReserveStatus
	,H	routeReserveStatus
	-H	routeReserveStatus
Scope: genblk1
	.H	i [32:0]
Scope: port
	/H	N [32:0]
	0H	INDEX [32:0]
	1H	DATA_WIDTH [32:0]
	2H	TYPE_WIDTH [32:0]
	3H	REQUEST_WIDTH [32:0]
	4H	FlitPerPacket [32:0]
	5H	PhitPerFlit [32:0]
	6H	FIFO_DEPTH [32:0]
	N*	clk
	O*	rst
	6+	data_in
	7+	data_in
	8+	data_in
	9+	data_in
	:+	data_in
	;+	data_in
	<+	data_in
	=+	data_in
	>+	data_in
	?+	data_in
	@+	data_in
	A+	data_in
	B+	data_in
	C+	data_in
	D+	data_in
	E+	data_in
	F+	data_in
	G+	data_in
	H+	data_in
	I+	data_in
	J+	data_in
	K+	data_in
	L+	data_in
	M+	data_in
	N+	data_in
	O+	data_in
	P+	data_in
	Q+	data_in
	R+	data_in
	S+	data_in
	T+	data_in
	U+	data_in
	W+	valid_in
	V+	ready_in
	oF	data_out
	pF	data_out
	qF	data_out
	rF	data_out
	sF	data_out
	tF	data_out
	uF	data_out
	vF	data_out
	wF	data_out
	xF	data_out
	yF	data_out
	zF	data_out
	{F	data_out
	|F	data_out
	}F	data_out
	~F	data_out
	!G	data_out
	"G	data_out
	#G	data_out
	$G	data_out
	%G	data_out
	&G	data_out
	'G	data_out
	(G	data_out
	)G	data_out
	*G	data_out
	+G	data_out
	,G	data_out
	-G	data_out
	.G	data_out
	/G	data_out
	0G	data_out
	tG	valid_out
	zG	ready_out
	}G	routeRelieve
	"H	routeReserveRequestValid
	%H	routeReserveRequest
	&H	routeReserveRequest
	+H	routeReserveStatus
	7H	popBuffer
	8H	pushBuffer
	9H	full
	:H	empty
Scope: portControlLogic
	;H	N [32:0]
	<H	INDEX [32:0]
	=H	DATA_WIDTH [32:0]
	>H	TYPE_WIDTH [32:0]
	?H	REQUEST_WIDTH [32:0]
	@H	FlitPerPacket [32:0]
	AH	PhitPerFlit [32:0]
	N*	clk
	O*	rst
	6+	data_in
	7+	data_in
	8+	data_in
	9+	data_in
	:+	data_in
	;+	data_in
	<+	data_in
	=+	data_in
	>+	data_in
	?+	data_in
	@+	data_in
	A+	data_in
	B+	data_in
	C+	data_in
	D+	data_in
	E+	data_in
	F+	data_in
	G+	data_in
	H+	data_in
	I+	data_in
	J+	data_in
	K+	data_in
	L+	data_in
	M+	data_in
	N+	data_in
	O+	data_in
	P+	data_in
	Q+	data_in
	R+	data_in
	S+	data_in
	T+	data_in
	U+	data_in
	W+	valid_in
	V+	ready_in
	tG	valid_out
	zG	ready_out
	oF	Flit
	pF	Flit
	qF	Flit
	rF	Flit
	sF	Flit
	tF	Flit
	uF	Flit
	vF	Flit
	wF	Flit
	xF	Flit
	yF	Flit
	zF	Flit
	{F	Flit
	|F	Flit
	}F	Flit
	~F	Flit
	!G	Flit
	"G	Flit
	#G	Flit
	$G	Flit
	%G	Flit
	&G	Flit
	'G	Flit
	(G	Flit
	)G	Flit
	*G	Flit
	+G	Flit
	,G	Flit
	-G	Flit
	.G	Flit
	/G	Flit
	0G	Flit
	7H	popBuffer
	8H	pushBuffer
	9H	full
	:H	empty
	}G	routeRelieve
	"H	routeReserveRequestValid
	%H	routeReserveRequest
	&H	routeReserveRequest
	+H	routeReserveStatus
	BH	FlitType
	CH	FlitType
	DH	reserveRoute
	EH	routeReserveStatus_CFSM
	FH	Head_Phit
	GH	Head_Phit
	HH	Head_Phit
	IH	Head_Phit
	JH	Head_Phit
	KH	Head_Phit
	LH	Head_Phit
	MH	Head_Phit
	NH	Head_Phit
	OH	Head_Phit
	PH	Head_Phit
	QH	Head_Phit
	RH	Head_Phit
	SH	Head_Phit
	TH	Head_Phit
	UH	Head_Phit
	VH	Head_Phit
	WH	Head_Phit
	XH	Head_Phit
	YH	Head_Phit
	ZH	Head_Phit
	[H	Head_Phit
	\H	Head_Phit
	]H	Head_Phit
	^H	Head_Phit
	_H	Head_Phit
	`H	Head_Phit
	aH	Head_Phit
	bH	Head_Phit
	cH	Head_Phit
	dH	Head_Phit
	eH	Head_Phit
	fH	headFlitValid
	gH	phitCounter
	hH	headFlitStatus
	iH	Handshake
Scope: controlFSM
	jH	FlitPerPacket [32:0]
	kH	PhitPerFlit [32:0]
	lH	REQUEST_WIDTH [32:0]
	mH	TYPE_WIDTH [32:0]
	nH	HEAD [32:0]
	oH	PAYLOAD [32:0]
	pH	TAIL [32:0]
	qH	UnRouted [32:0]
	rH	HeadFlit [32:0]
	sH	ReservePath [32:0]
	tH	Route [32:0]
	uH	TailFlit [32:0]
	N*	clk
	O*	rst
	W+	valid_in
	V+	ready_in
	tG	valid_out
	zG	ready_out
	BH	FlitType
	CH	FlitType
	DH	reserveRoute
	EH	routeReserveStatus
	fH	headFlitValid
	vH	phitCounter
	hH	headFlitStatus
	7H	popBuffer
	8H	pushBuffer
	iH	Handshake
	9H	full
	:H	empty
	}G	routeRelieve
	wH	state [3:0]
	xH	nextState [3:0]
	yH	flitCounter [4:0]
	zH	TailReceived
	{H	flitValid
	|H	pushBuffer_state
Scope: headFlitBuffer
	}H	N [32:0]
	~H	INDEX [32:0]
	!I	DATA_WIDTH [32:0]
	"I	PhitPerFlit [32:0]
	#I	REQUEST_WIDTH [32:0]
	N*	clk
	O*	rst
	iH	Handshake
	6+	Head_Phit
	7+	Head_Phit
	8+	Head_Phit
	9+	Head_Phit
	:+	Head_Phit
	;+	Head_Phit
	<+	Head_Phit
	=+	Head_Phit
	>+	Head_Phit
	?+	Head_Phit
	@+	Head_Phit
	A+	Head_Phit
	B+	Head_Phit
	C+	Head_Phit
	D+	Head_Phit
	E+	Head_Phit
	F+	Head_Phit
	G+	Head_Phit
	H+	Head_Phit
	I+	Head_Phit
	J+	Head_Phit
	K+	Head_Phit
	L+	Head_Phit
	M+	Head_Phit
	N+	Head_Phit
	O+	Head_Phit
	P+	Head_Phit
	Q+	Head_Phit
	R+	Head_Phit
	S+	Head_Phit
	T+	Head_Phit
	U+	Head_Phit
	fH	headFlitValid
	gH	phitCounter
	DH	reserveRoute
	EH	routeReserveStatus_CFSM
	hH	headFlitStatus
	"H	routeReserveRequestValid
	%H	routeReserveRequest
	&H	routeReserveRequest
	+H	routeReserveStatus_Switch
	$I	headBuffer [32:0]
	%I	headFlitValidStatus
Scope: headFlitDecoder
	&I	N [32:0]
	'I	INDEX [32:0]
	(I	DATA_WIDTH [32:0]
	)I	PhitPerFlit [32:0]
	*I	REQUEST_WIDTH [32:0]
	+I	HeadFlit
	,I	HeadFlit
	-I	HeadFlit
	.I	HeadFlit
	/I	HeadFlit
	0I	HeadFlit
	1I	HeadFlit
	2I	HeadFlit
	3I	HeadFlit
	4I	HeadFlit
	5I	HeadFlit
	6I	HeadFlit
	7I	HeadFlit
	8I	HeadFlit
	9I	HeadFlit
	:I	HeadFlit
	;I	HeadFlit
	<I	HeadFlit
	=I	HeadFlit
	>I	HeadFlit
	?I	HeadFlit
	@I	HeadFlit
	AI	HeadFlit
	BI	HeadFlit
	CI	HeadFlit
	DI	HeadFlit
	EI	HeadFlit
	FI	HeadFlit
	GI	HeadFlit
	HI	HeadFlit
	II	HeadFlit
	JI	HeadFlit
	%H	RequestMessage
	&H	RequestMessage
	KI	pathString [2048:0]
	LI	index [32:0]
	MI	i [32:0]
	NI	Destination
	OI	Destination
	PI	Destination
Scope: flitIdentifier
	QI	DATA_WIDTH [32:0]
	RI	TYPE_WIDTH [32:0]
	SI	PhitPerFlit [32:0]
	TI	HeadIdentifier [32:0]
	UI	PayLoadIdentifier [32:0]
	VI	TailIdentifier [32:0]
	WI	DEFAULT [32:0]
	XI	HEAD [32:0]
	YI	PAYLOAD [32:0]
	ZI	TAIL [32:0]
	oF	Flit
	pF	Flit
	qF	Flit
	rF	Flit
	sF	Flit
	tF	Flit
	uF	Flit
	vF	Flit
	wF	Flit
	xF	Flit
	yF	Flit
	zF	Flit
	{F	Flit
	|F	Flit
	}F	Flit
	~F	Flit
	!G	Flit
	"G	Flit
	#G	Flit
	$G	Flit
	%G	Flit
	&G	Flit
	'G	Flit
	(G	Flit
	)G	Flit
	*G	Flit
	+G	Flit
	,G	Flit
	-G	Flit
	.G	Flit
	/G	Flit
	0G	Flit
	[I	FlitType [2:0]
Scope: fifo
	\I	DATA_WIDTH [32:0]
	]I	FIFO_DEPTH [32:0]
	^I	ADDRESS_WIDTH [32:0]
	N*	clk
	O*	rst
	:H	empty
	7H	rd_en
	_I	dout [32:0]
	9H	full
	8H	wr_en
	6+	din
	7+	din
	8+	din
	9+	din
	:+	din
	;+	din
	<+	din
	=+	din
	>+	din
	?+	din
	@+	din
	A+	din
	B+	din
	C+	din
	D+	din
	E+	din
	F+	din
	G+	din
	H+	din
	I+	din
	J+	din
	K+	din
	L+	din
	M+	din
	N+	din
	O+	din
	P+	din
	Q+	din
	R+	din
	S+	din
	T+	din
	U+	din
	`I	head_tail
	aI	head_tail
	bI	head_tail
	cI	head_tail
	dI	head [4:0]
	eI	tail [4:0]
	fI	i [32:0]
Scope: genblk1
	gI	i [32:0]
Scope: port
	hI	N [32:0]
	iI	INDEX [32:0]
	jI	DATA_WIDTH [32:0]
	kI	TYPE_WIDTH [32:0]
	lI	REQUEST_WIDTH [32:0]
	mI	FlitPerPacket [32:0]
	nI	PhitPerFlit [32:0]
	oI	FIFO_DEPTH [32:0]
	N*	clk
	O*	rst
	r*	data_in
	s*	data_in
	t*	data_in
	u*	data_in
	v*	data_in
	w*	data_in
	x*	data_in
	y*	data_in
	z*	data_in
	{*	data_in
	|*	data_in
	}*	data_in
	~*	data_in
	!+	data_in
	"+	data_in
	#+	data_in
	$+	data_in
	%+	data_in
	&+	data_in
	'+	data_in
	(+	data_in
	)+	data_in
	*+	data_in
	++	data_in
	,+	data_in
	-+	data_in
	.+	data_in
	/+	data_in
	0+	data_in
	1+	data_in
	2+	data_in
	3+	data_in
	5+	valid_in
	4+	ready_in
	1G	data_out
	2G	data_out
	3G	data_out
	4G	data_out
	5G	data_out
	6G	data_out
	7G	data_out
	8G	data_out
	9G	data_out
	:G	data_out
	;G	data_out
	<G	data_out
	=G	data_out
	>G	data_out
	?G	data_out
	@G	data_out
	AG	data_out
	BG	data_out
	CG	data_out
	DG	data_out
	EG	data_out
	FG	data_out
	GG	data_out
	HG	data_out
	IG	data_out
	JG	data_out
	KG	data_out
	LG	data_out
	MG	data_out
	NG	data_out
	OG	data_out
	PG	data_out
	uG	valid_out
	{G	ready_out
	~G	routeRelieve
	#H	routeReserveRequestValid
	'H	routeReserveRequest
	(H	routeReserveRequest
	,H	routeReserveStatus
	pI	popBuffer
	qI	pushBuffer
	rI	full
	sI	empty
Scope: portControlLogic
	tI	N [32:0]
	uI	INDEX [32:0]
	vI	DATA_WIDTH [32:0]
	wI	TYPE_WIDTH [32:0]
	xI	REQUEST_WIDTH [32:0]
	yI	FlitPerPacket [32:0]
	zI	PhitPerFlit [32:0]
	N*	clk
	O*	rst
	r*	data_in
	s*	data_in
	t*	data_in
	u*	data_in
	v*	data_in
	w*	data_in
	x*	data_in
	y*	data_in
	z*	data_in
	{*	data_in
	|*	data_in
	}*	data_in
	~*	data_in
	!+	data_in
	"+	data_in
	#+	data_in
	$+	data_in
	%+	data_in
	&+	data_in
	'+	data_in
	(+	data_in
	)+	data_in
	*+	data_in
	++	data_in
	,+	data_in
	-+	data_in
	.+	data_in
	/+	data_in
	0+	data_in
	1+	data_in
	2+	data_in
	3+	data_in
	5+	valid_in
	4+	ready_in
	uG	valid_out
	{G	ready_out
	1G	Flit
	2G	Flit
	3G	Flit
	4G	Flit
	5G	Flit
	6G	Flit
	7G	Flit
	8G	Flit
	9G	Flit
	:G	Flit
	;G	Flit
	<G	Flit
	=G	Flit
	>G	Flit
	?G	Flit
	@G	Flit
	AG	Flit
	BG	Flit
	CG	Flit
	DG	Flit
	EG	Flit
	FG	Flit
	GG	Flit
	HG	Flit
	IG	Flit
	JG	Flit
	KG	Flit
	LG	Flit
	MG	Flit
	NG	Flit
	OG	Flit
	PG	Flit
	pI	popBuffer
	qI	pushBuffer
	rI	full
	sI	empty
	~G	routeRelieve
	#H	routeReserveRequestValid
	'H	routeReserveRequest
	(H	routeReserveRequest
	,H	routeReserveStatus
	{I	FlitType
	|I	FlitType
	}I	reserveRoute
	~I	routeReserveStatus_CFSM
	!J	Head_Phit
	"J	Head_Phit
	#J	Head_Phit
	$J	Head_Phit
	%J	Head_Phit
	&J	Head_Phit
	'J	Head_Phit
	(J	Head_Phit
	)J	Head_Phit
	*J	Head_Phit
	+J	Head_Phit
	,J	Head_Phit
	-J	Head_Phit
	.J	Head_Phit
	/J	Head_Phit
	0J	Head_Phit
	1J	Head_Phit
	2J	Head_Phit
	3J	Head_Phit
	4J	Head_Phit
	5J	Head_Phit
	6J	Head_Phit
	7J	Head_Phit
	8J	Head_Phit
	9J	Head_Phit
	:J	Head_Phit
	;J	Head_Phit
	<J	Head_Phit
	=J	Head_Phit
	>J	Head_Phit
	?J	Head_Phit
	@J	Head_Phit
	AJ	headFlitValid
	BJ	phitCounter
	CJ	headFlitStatus
	DJ	Handshake
Scope: controlFSM
	EJ	FlitPerPacket [32:0]
	FJ	PhitPerFlit [32:0]
	GJ	REQUEST_WIDTH [32:0]
	HJ	TYPE_WIDTH [32:0]
	IJ	HEAD [32:0]
	JJ	PAYLOAD [32:0]
	KJ	TAIL [32:0]
	LJ	UnRouted [32:0]
	MJ	HeadFlit [32:0]
	NJ	ReservePath [32:0]
	OJ	Route [32:0]
	PJ	TailFlit [32:0]
	N*	clk
	O*	rst
	5+	valid_in
	4+	ready_in
	uG	valid_out
	{G	ready_out
	{I	FlitType
	|I	FlitType
	}I	reserveRoute
	~I	routeReserveStatus
	AJ	headFlitValid
	QJ	phitCounter
	CJ	headFlitStatus
	pI	popBuffer
	qI	pushBuffer
	DJ	Handshake
	rI	full
	sI	empty
	~G	routeRelieve
	RJ	state [3:0]
	SJ	nextState [3:0]
	TJ	flitCounter [4:0]
	UJ	TailReceived
	VJ	flitValid
	WJ	pushBuffer_state
Scope: headFlitBuffer
	XJ	N [32:0]
	YJ	INDEX [32:0]
	ZJ	DATA_WIDTH [32:0]
	[J	PhitPerFlit [32:0]
	\J	REQUEST_WIDTH [32:0]
	N*	clk
	O*	rst
	DJ	Handshake
	r*	Head_Phit
	s*	Head_Phit
	t*	Head_Phit
	u*	Head_Phit
	v*	Head_Phit
	w*	Head_Phit
	x*	Head_Phit
	y*	Head_Phit
	z*	Head_Phit
	{*	Head_Phit
	|*	Head_Phit
	}*	Head_Phit
	~*	Head_Phit
	!+	Head_Phit
	"+	Head_Phit
	#+	Head_Phit
	$+	Head_Phit
	%+	Head_Phit
	&+	Head_Phit
	'+	Head_Phit
	(+	Head_Phit
	)+	Head_Phit
	*+	Head_Phit
	++	Head_Phit
	,+	Head_Phit
	-+	Head_Phit
	.+	Head_Phit
	/+	Head_Phit
	0+	Head_Phit
	1+	Head_Phit
	2+	Head_Phit
	3+	Head_Phit
	AJ	headFlitValid
	BJ	phitCounter
	}I	reserveRoute
	~I	routeReserveStatus_CFSM
	CJ	headFlitStatus
	#H	routeReserveRequestValid
	'H	routeReserveRequest
	(H	routeReserveRequest
	,H	routeReserveStatus_Switch
	]J	headBuffer [32:0]
	^J	headFlitValidStatus
Scope: headFlitDecoder
	_J	N [32:0]
	`J	INDEX [32:0]
	aJ	DATA_WIDTH [32:0]
	bJ	PhitPerFlit [32:0]
	cJ	REQUEST_WIDTH [32:0]
	dJ	HeadFlit
	eJ	HeadFlit
	fJ	HeadFlit
	gJ	HeadFlit
	hJ	HeadFlit
	iJ	HeadFlit
	jJ	HeadFlit
	kJ	HeadFlit
	lJ	HeadFlit
	mJ	HeadFlit
	nJ	HeadFlit
	oJ	HeadFlit
	pJ	HeadFlit
	qJ	HeadFlit
	rJ	HeadFlit
	sJ	HeadFlit
	tJ	HeadFlit
	uJ	HeadFlit
	vJ	HeadFlit
	wJ	HeadFlit
	xJ	HeadFlit
	yJ	HeadFlit
	zJ	HeadFlit
	{J	HeadFlit
	|J	HeadFlit
	}J	HeadFlit
	~J	HeadFlit
	!K	HeadFlit
	"K	HeadFlit
	#K	HeadFlit
	$K	HeadFlit
	%K	HeadFlit
	'H	RequestMessage
	(H	RequestMessage
	&K	pathString [2048:0]
	'K	index [32:0]
	(K	i [32:0]
	)K	Destination
	*K	Destination
	+K	Destination
Scope: flitIdentifier
	,K	DATA_WIDTH [32:0]
	-K	TYPE_WIDTH [32:0]
	.K	PhitPerFlit [32:0]
	/K	HeadIdentifier [32:0]
	0K	PayLoadIdentifier [32:0]
	1K	TailIdentifier [32:0]
	2K	DEFAULT [32:0]
	3K	HEAD [32:0]
	4K	PAYLOAD [32:0]
	5K	TAIL [32:0]
	1G	Flit
	2G	Flit
	3G	Flit
	4G	Flit
	5G	Flit
	6G	Flit
	7G	Flit
	8G	Flit
	9G	Flit
	:G	Flit
	;G	Flit
	<G	Flit
	=G	Flit
	>G	Flit
	?G	Flit
	@G	Flit
	AG	Flit
	BG	Flit
	CG	Flit
	DG	Flit
	EG	Flit
	FG	Flit
	GG	Flit
	HG	Flit
	IG	Flit
	JG	Flit
	KG	Flit
	LG	Flit
	MG	Flit
	NG	Flit
	OG	Flit
	PG	Flit
	6K	FlitType [2:0]
Scope: fifo
	7K	DATA_WIDTH [32:0]
	8K	FIFO_DEPTH [32:0]
	9K	ADDRESS_WIDTH [32:0]
	N*	clk
	O*	rst
	sI	empty
	pI	rd_en
	:K	dout [32:0]
	rI	full
	qI	wr_en
	r*	din
	s*	din
	t*	din
	u*	din
	v*	din
	w*	din
	x*	din
	y*	din
	z*	din
	{*	din
	|*	din
	}*	din
	~*	din
	!+	din
	"+	din
	#+	din
	$+	din
	%+	din
	&+	din
	'+	din
	(+	din
	)+	din
	*+	din
	++	din
	,+	din
	-+	din
	.+	din
	/+	din
	0+	din
	1+	din
	2+	din
	3+	din
	;K	head_tail
	<K	head_tail
	=K	head_tail
	>K	head_tail
	?K	head [4:0]
	@K	tail [4:0]
	AK	i [32:0]
Scope: genblk1
	BK	i [32:0]
Scope: port
	CK	N [32:0]
	DK	INDEX [32:0]
	EK	DATA_WIDTH [32:0]
	FK	TYPE_WIDTH [32:0]
	GK	REQUEST_WIDTH [32:0]
	HK	FlitPerPacket [32:0]
	IK	PhitPerFlit [32:0]
	JK	FIFO_DEPTH [32:0]
	N*	clk
	O*	rst
	P*	data_in
	Q*	data_in
	R*	data_in
	S*	data_in
	T*	data_in
	U*	data_in
	V*	data_in
	W*	data_in
	X*	data_in
	Y*	data_in
	Z*	data_in
	[*	data_in
	\*	data_in
	]*	data_in
	^*	data_in
	_*	data_in
	`*	data_in
	a*	data_in
	b*	data_in
	c*	data_in
	d*	data_in
	e*	data_in
	f*	data_in
	g*	data_in
	h*	data_in
	i*	data_in
	j*	data_in
	k*	data_in
	l*	data_in
	m*	data_in
	n*	data_in
	o*	data_in
	q*	valid_in
	p*	ready_in
	QG	data_out
	RG	data_out
	SG	data_out
	TG	data_out
	UG	data_out
	VG	data_out
	WG	data_out
	XG	data_out
	YG	data_out
	ZG	data_out
	[G	data_out
	\G	data_out
	]G	data_out
	^G	data_out
	_G	data_out
	`G	data_out
	aG	data_out
	bG	data_out
	cG	data_out
	dG	data_out
	eG	data_out
	fG	data_out
	gG	data_out
	hG	data_out
	iG	data_out
	jG	data_out
	kG	data_out
	lG	data_out
	mG	data_out
	nG	data_out
	oG	data_out
	pG	data_out
	vG	valid_out
	|G	ready_out
	!H	routeRelieve
	$H	routeReserveRequestValid
	)H	routeReserveRequest
	*H	routeReserveRequest
	-H	routeReserveStatus
	KK	popBuffer
	LK	pushBuffer
	MK	full
	NK	empty
Scope: portControlLogic
	OK	N [32:0]
	PK	INDEX [32:0]
	QK	DATA_WIDTH [32:0]
	RK	TYPE_WIDTH [32:0]
	SK	REQUEST_WIDTH [32:0]
	TK	FlitPerPacket [32:0]
	UK	PhitPerFlit [32:0]
	N*	clk
	O*	rst
	P*	data_in
	Q*	data_in
	R*	data_in
	S*	data_in
	T*	data_in
	U*	data_in
	V*	data_in
	W*	data_in
	X*	data_in
	Y*	data_in
	Z*	data_in
	[*	data_in
	\*	data_in
	]*	data_in
	^*	data_in
	_*	data_in
	`*	data_in
	a*	data_in
	b*	data_in
	c*	data_in
	d*	data_in
	e*	data_in
	f*	data_in
	g*	data_in
	h*	data_in
	i*	data_in
	j*	data_in
	k*	data_in
	l*	data_in
	m*	data_in
	n*	data_in
	o*	data_in
	q*	valid_in
	p*	ready_in
	vG	valid_out
	|G	ready_out
	QG	Flit
	RG	Flit
	SG	Flit
	TG	Flit
	UG	Flit
	VG	Flit
	WG	Flit
	XG	Flit
	YG	Flit
	ZG	Flit
	[G	Flit
	\G	Flit
	]G	Flit
	^G	Flit
	_G	Flit
	`G	Flit
	aG	Flit
	bG	Flit
	cG	Flit
	dG	Flit
	eG	Flit
	fG	Flit
	gG	Flit
	hG	Flit
	iG	Flit
	jG	Flit
	kG	Flit
	lG	Flit
	mG	Flit
	nG	Flit
	oG	Flit
	pG	Flit
	KK	popBuffer
	LK	pushBuffer
	MK	full
	NK	empty
	!H	routeRelieve
	$H	routeReserveRequestValid
	)H	routeReserveRequest
	*H	routeReserveRequest
	-H	routeReserveStatus
	VK	FlitType
	WK	FlitType
	XK	reserveRoute
	YK	routeReserveStatus_CFSM
	ZK	Head_Phit
	[K	Head_Phit
	\K	Head_Phit
	]K	Head_Phit
	^K	Head_Phit
	_K	Head_Phit
	`K	Head_Phit
	aK	Head_Phit
	bK	Head_Phit
	cK	Head_Phit
	dK	Head_Phit
	eK	Head_Phit
	fK	Head_Phit
	gK	Head_Phit
	hK	Head_Phit
	iK	Head_Phit
	jK	Head_Phit
	kK	Head_Phit
	lK	Head_Phit
	mK	Head_Phit
	nK	Head_Phit
	oK	Head_Phit
	pK	Head_Phit
	qK	Head_Phit
	rK	Head_Phit
	sK	Head_Phit
	tK	Head_Phit
	uK	Head_Phit
	vK	Head_Phit
	wK	Head_Phit
	xK	Head_Phit
	yK	Head_Phit
	zK	headFlitValid
	{K	phitCounter
	|K	headFlitStatus
	}K	Handshake
Scope: controlFSM
	~K	FlitPerPacket [32:0]
	!L	PhitPerFlit [32:0]
	"L	REQUEST_WIDTH [32:0]
	#L	TYPE_WIDTH [32:0]
	$L	HEAD [32:0]
	%L	PAYLOAD [32:0]
	&L	TAIL [32:0]
	'L	UnRouted [32:0]
	(L	HeadFlit [32:0]
	)L	ReservePath [32:0]
	*L	Route [32:0]
	+L	TailFlit [32:0]
	N*	clk
	O*	rst
	q*	valid_in
	p*	ready_in
	vG	valid_out
	|G	ready_out
	VK	FlitType
	WK	FlitType
	XK	reserveRoute
	YK	routeReserveStatus
	zK	headFlitValid
	,L	phitCounter
	|K	headFlitStatus
	KK	popBuffer
	LK	pushBuffer
	}K	Handshake
	MK	full
	NK	empty
	!H	routeRelieve
	-L	state [3:0]
	.L	nextState [3:0]
	/L	flitCounter [4:0]
	0L	TailReceived
	1L	flitValid
	2L	pushBuffer_state
Scope: headFlitBuffer
	3L	N [32:0]
	4L	INDEX [32:0]
	5L	DATA_WIDTH [32:0]
	6L	PhitPerFlit [32:0]
	7L	REQUEST_WIDTH [32:0]
	N*	clk
	O*	rst
	}K	Handshake
	P*	Head_Phit
	Q*	Head_Phit
	R*	Head_Phit
	S*	Head_Phit
	T*	Head_Phit
	U*	Head_Phit
	V*	Head_Phit
	W*	Head_Phit
	X*	Head_Phit
	Y*	Head_Phit
	Z*	Head_Phit
	[*	Head_Phit
	\*	Head_Phit
	]*	Head_Phit
	^*	Head_Phit
	_*	Head_Phit
	`*	Head_Phit
	a*	Head_Phit
	b*	Head_Phit
	c*	Head_Phit
	d*	Head_Phit
	e*	Head_Phit
	f*	Head_Phit
	g*	Head_Phit
	h*	Head_Phit
	i*	Head_Phit
	j*	Head_Phit
	k*	Head_Phit
	l*	Head_Phit
	m*	Head_Phit
	n*	Head_Phit
	o*	Head_Phit
	zK	headFlitValid
	{K	phitCounter
	XK	reserveRoute
	YK	routeReserveStatus_CFSM
	|K	headFlitStatus
	$H	routeReserveRequestValid
	)H	routeReserveRequest
	*H	routeReserveRequest
	-H	routeReserveStatus_Switch
	8L	headBuffer [32:0]
	9L	headFlitValidStatus
Scope: headFlitDecoder
	:L	N [32:0]
	;L	INDEX [32:0]
	<L	DATA_WIDTH [32:0]
	=L	PhitPerFlit [32:0]
	>L	REQUEST_WIDTH [32:0]
	?L	HeadFlit
	@L	HeadFlit
	AL	HeadFlit
	BL	HeadFlit
	CL	HeadFlit
	DL	HeadFlit
	EL	HeadFlit
	FL	HeadFlit
	GL	HeadFlit
	HL	HeadFlit
	IL	HeadFlit
	JL	HeadFlit
	KL	HeadFlit
	LL	HeadFlit
	ML	HeadFlit
	NL	HeadFlit
	OL	HeadFlit
	PL	HeadFlit
	QL	HeadFlit
	RL	HeadFlit
	SL	HeadFlit
	TL	HeadFlit
	UL	HeadFlit
	VL	HeadFlit
	WL	HeadFlit
	XL	HeadFlit
	YL	HeadFlit
	ZL	HeadFlit
	[L	HeadFlit
	\L	HeadFlit
	]L	HeadFlit
	^L	HeadFlit
	)H	RequestMessage
	*H	RequestMessage
	_L	pathString [2048:0]
	`L	index [32:0]
	aL	i [32:0]
	bL	Destination
	cL	Destination
	dL	Destination
Scope: flitIdentifier
	eL	DATA_WIDTH [32:0]
	fL	TYPE_WIDTH [32:0]
	gL	PhitPerFlit [32:0]
	hL	HeadIdentifier [32:0]
	iL	PayLoadIdentifier [32:0]
	jL	TailIdentifier [32:0]
	kL	DEFAULT [32:0]
	lL	HEAD [32:0]
	mL	PAYLOAD [32:0]
	nL	TAIL [32:0]
	QG	Flit
	RG	Flit
	SG	Flit
	TG	Flit
	UG	Flit
	VG	Flit
	WG	Flit
	XG	Flit
	YG	Flit
	ZG	Flit
	[G	Flit
	\G	Flit
	]G	Flit
	^G	Flit
	_G	Flit
	`G	Flit
	aG	Flit
	bG	Flit
	cG	Flit
	dG	Flit
	eG	Flit
	fG	Flit
	gG	Flit
	hG	Flit
	iG	Flit
	jG	Flit
	kG	Flit
	lG	Flit
	mG	Flit
	nG	Flit
	oG	Flit
	pG	Flit
	oL	FlitType [2:0]
Scope: fifo
	pL	DATA_WIDTH [32:0]
	qL	FIFO_DEPTH [32:0]
	rL	ADDRESS_WIDTH [32:0]
	N*	clk
	O*	rst
	NK	empty
	KK	rd_en
	sL	dout [32:0]
	MK	full
	LK	wr_en
	P*	din
	Q*	din
	R*	din
	S*	din
	T*	din
	U*	din
	V*	din
	W*	din
	X*	din
	Y*	din
	Z*	din
	[*	din
	\*	din
	]*	din
	^*	din
	_*	din
	`*	din
	a*	din
	b*	din
	c*	din
	d*	din
	e*	din
	f*	din
	g*	din
	h*	din
	i*	din
	j*	din
	k*	din
	l*	din
	m*	din
	n*	din
	o*	din
	tL	head_tail
	uL	head_tail
	vL	head_tail
	wL	head_tail
	xL	head [4:0]
	yL	tail [4:0]
	zL	i [32:0]
Scope: switch
	{L	N [32:0]
	|L	INPUTS [32:0]
	}L	OUTPUTS [32:0]
	~L	DATA_WIDTH [32:0]
	!M	REQUEST_WIDTH [32:0]
	N*	clk
	O*	rst
	"H	routeReserveRequestValid
	#H	routeReserveRequestValid
	$H	routeReserveRequestValid
	%H	routeReserveRequest
	&H	routeReserveRequest
	'H	routeReserveRequest
	(H	routeReserveRequest
	)H	routeReserveRequest
	*H	routeReserveRequest
	}G	routeRelieve
	~G	routeRelieve
	!H	routeRelieve
	+H	routeReserveStatus
	,H	routeReserveStatus
	-H	routeReserveStatus
	mE	data_in
	nE	data_in
	oE	data_in
	pE	data_in
	qE	data_in
	rE	data_in
	sE	data_in
	tE	data_in
	uE	data_in
	vE	data_in
	wE	data_in
	xE	data_in
	yE	data_in
	zE	data_in
	{E	data_in
	|E	data_in
	}E	data_in
	~E	data_in
	!F	data_in
	"F	data_in
	#F	data_in
	$F	data_in
	%F	data_in
	&F	data_in
	'F	data_in
	(F	data_in
	)F	data_in
	*F	data_in
	+F	data_in
	,F	data_in
	-F	data_in
	.F	data_in
	/F	data_in
	0F	data_in
	1F	data_in
	2F	data_in
	3F	data_in
	4F	data_in
	5F	data_in
	6F	data_in
	7F	data_in
	8F	data_in
	9F	data_in
	:F	data_in
	;F	data_in
	<F	data_in
	=F	data_in
	>F	data_in
	?F	data_in
	@F	data_in
	AF	data_in
	BF	data_in
	CF	data_in
	DF	data_in
	EF	data_in
	FF	data_in
	GF	data_in
	HF	data_in
	IF	data_in
	JF	data_in
	KF	data_in
	LF	data_in
	MF	data_in
	NF	data_in
	OF	data_in
	PF	data_in
	QF	data_in
	RF	data_in
	SF	data_in
	TF	data_in
	UF	data_in
	VF	data_in
	WF	data_in
	XF	data_in
	YF	data_in
	ZF	data_in
	[F	data_in
	\F	data_in
	]F	data_in
	^F	data_in
	_F	data_in
	`F	data_in
	aF	data_in
	bF	data_in
	cF	data_in
	dF	data_in
	eF	data_in
	fF	data_in
	gF	data_in
	hF	data_in
	iF	data_in
	jF	data_in
	kF	data_in
	lF	data_in
	mF	data_in
	nF	data_in
	qG	valid_in
	rG	valid_in
	sG	valid_in
	wG	ready_in
	xG	ready_in
	yG	ready_in
	>,	data_out
	?,	data_out
	@,	data_out
	A,	data_out
	B,	data_out
	C,	data_out
	D,	data_out
	E,	data_out
	F,	data_out
	G,	data_out
	H,	data_out
	I,	data_out
	J,	data_out
	K,	data_out
	L,	data_out
	M,	data_out
	N,	data_out
	O,	data_out
	P,	data_out
	Q,	data_out
	R,	data_out
	S,	data_out
	T,	data_out
	U,	data_out
	V,	data_out
	W,	data_out
	X,	data_out
	Y,	data_out
	Z,	data_out
	[,	data_out
	\,	data_out
	],	data_out
	z+	data_out
	{+	data_out
	|+	data_out
	}+	data_out
	~+	data_out
	!,	data_out
	",	data_out
	#,	data_out
	$,	data_out
	%,	data_out
	&,	data_out
	',	data_out
	(,	data_out
	),	data_out
	*,	data_out
	+,	data_out
	,,	data_out
	-,	data_out
	.,	data_out
	/,	data_out
	0,	data_out
	1,	data_out
	2,	data_out
	3,	data_out
	4,	data_out
	5,	data_out
	6,	data_out
	7,	data_out
	8,	data_out
	9,	data_out
	:,	data_out
	;,	data_out
	X+	data_out
	Y+	data_out
	Z+	data_out
	[+	data_out
	\+	data_out
	]+	data_out
	^+	data_out
	_+	data_out
	`+	data_out
	a+	data_out
	b+	data_out
	c+	data_out
	d+	data_out
	e+	data_out
	f+	data_out
	g+	data_out
	h+	data_out
	i+	data_out
	j+	data_out
	k+	data_out
	l+	data_out
	m+	data_out
	n+	data_out
	o+	data_out
	p+	data_out
	q+	data_out
	r+	data_out
	s+	data_out
	t+	data_out
	u+	data_out
	v+	data_out
	w+	data_out
	_,	valid_out
	=,	valid_out
	y+	valid_out
	^,	ready_out
	<,	ready_out
	x+	ready_out
	"M	routeSelect
	#M	routeSelect
	$M	routeSelect
	%M	routeSelect
	&M	routeSelect
	'M	routeSelect
	(M	outputBusy
	)M	outputBusy
	*M	outputBusy
	+M	PortReserved
	,M	PortReserved
	-M	PortReserved
Scope: switchControl
	.M	N [32:0]
	/M	INPUTS [32:0]
	0M	OUTPUTS [32:0]
	1M	DATA_WIDTH [32:0]
	2M	REQUEST_WIDTH [32:0]
	3M	STATE_WIDTH [32:0]
	4M	UnRouted [32:0]
	5M	Check [32:0]
	6M	Arbitrate [32:0]
	7M	PathReserved1 [32:0]
	8M	PathReserved0 [32:0]
	N*	clk
	O*	rst
	"H	routeReserveRequestValid
	#H	routeReserveRequestValid
	$H	routeReserveRequestValid
	%H	routeReserveRequest
	&H	routeReserveRequest
	'H	routeReserveRequest
	(H	routeReserveRequest
	)H	routeReserveRequest
	*H	routeReserveRequest
	}G	routeRelieve
	~G	routeRelieve
	!H	routeRelieve
	9M	routeReserveStatus [3:0]
	:M	routeSelect [6:0]
	;M	outputBusy [3:0]
	<M	PortReserved [3:0]
	=M	switchRequest [3:0]
	>M	outputRelieve [3:0]
	?M	PortBusy [3:0]
	@M	Conflict [3:0]
	AM	switchState [9:0]
	BM	switchState_next [9:0]
	CM	i0 [32:0]
	DM	i1 [32:0]
	EM	i2 [32:0]
	FM	i3 [32:0]
	GM	i4 [32:0]
	HM	j4 [32:0]
	IM	i5 [32:0]
	JM	i6 [32:0]
	KM	i7 [32:0]
	LM	j7 [32:0]
	MM	i8 [32:0]
	NM	j8 [32:0]
	OM	i9 [32:0]
	PM	j9 [32:0]
Scope: muxSwitch
	QM	INPUTS [32:0]
	RM	OUTPUTS [32:0]
	SM	DATA_WIDTH [32:0]
	TM	REQUEST_WIDTH [32:0]
	"M	routeSelect
	#M	routeSelect
	$M	routeSelect
	%M	routeSelect
	&M	routeSelect
	'M	routeSelect
	(M	outputBusy
	)M	outputBusy
	*M	outputBusy
	+M	PortReserved
	,M	PortReserved
	-M	PortReserved
	mE	data_in
	nE	data_in
	oE	data_in
	pE	data_in
	qE	data_in
	rE	data_in
	sE	data_in
	tE	data_in
	uE	data_in
	vE	data_in
	wE	data_in
	xE	data_in
	yE	data_in
	zE	data_in
	{E	data_in
	|E	data_in
	}E	data_in
	~E	data_in
	!F	data_in
	"F	data_in
	#F	data_in
	$F	data_in
	%F	data_in
	&F	data_in
	'F	data_in
	(F	data_in
	)F	data_in
	*F	data_in
	+F	data_in
	,F	data_in
	-F	data_in
	.F	data_in
	/F	data_in
	0F	data_in
	1F	data_in
	2F	data_in
	3F	data_in
	4F	data_in
	5F	data_in
	6F	data_in
	7F	data_in
	8F	data_in
	9F	data_in
	:F	data_in
	;F	data_in
	<F	data_in
	=F	data_in
	>F	data_in
	?F	data_in
	@F	data_in
	AF	data_in
	BF	data_in
	CF	data_in
	DF	data_in
	EF	data_in
	FF	data_in
	GF	data_in
	HF	data_in
	IF	data_in
	JF	data_in
	KF	data_in
	LF	data_in
	MF	data_in
	NF	data_in
	OF	data_in
	PF	data_in
	QF	data_in
	RF	data_in
	SF	data_in
	TF	data_in
	UF	data_in
	VF	data_in
	WF	data_in
	XF	data_in
	YF	data_in
	ZF	data_in
	[F	data_in
	\F	data_in
	]F	data_in
	^F	data_in
	_F	data_in
	`F	data_in
	aF	data_in
	bF	data_in
	cF	data_in
	dF	data_in
	eF	data_in
	fF	data_in
	gF	data_in
	hF	data_in
	iF	data_in
	jF	data_in
	kF	data_in
	lF	data_in
	mF	data_in
	nF	data_in
	qG	valid_in
	rG	valid_in
	sG	valid_in
	UM	ready_in [3:0]
	VM	data_out [96:0]
	WM	valid_out [3:0]
	^,	ready_out
	<,	ready_out
	x+	ready_out
	XM	i1 [32:0]
	YM	j1 [32:0]
	ZM	i2 [32:0]
	[M	j2 [32:0]
	\M	i3 [32:0]
	]M	j3 [32:0]
Scope: Router_Node4
	^M	N [32:0]
	_M	INDEX [32:0]
	`M	INPUTS [32:0]
	aM	OUTPUTS [32:0]
	bM	DATA_WIDTH [32:0]
	cM	TYPE_WIDTH [32:0]
	dM	REQUEST_WIDTH [32:0]
	eM	FlitPerPacket [32:0]
	fM	PhitPerFlit [32:0]
	gM	FIFO_DEPTH [32:0]
	`,	clk
	a,	rst
	H-	data_in_bus
	I-	data_in_bus
	J-	data_in_bus
	K-	data_in_bus
	L-	data_in_bus
	M-	data_in_bus
	N-	data_in_bus
	O-	data_in_bus
	P-	data_in_bus
	Q-	data_in_bus
	R-	data_in_bus
	S-	data_in_bus
	T-	data_in_bus
	U-	data_in_bus
	V-	data_in_bus
	W-	data_in_bus
	X-	data_in_bus
	Y-	data_in_bus
	Z-	data_in_bus
	[-	data_in_bus
	\-	data_in_bus
	]-	data_in_bus
	^-	data_in_bus
	_-	data_in_bus
	`-	data_in_bus
	a-	data_in_bus
	b-	data_in_bus
	c-	data_in_bus
	d-	data_in_bus
	e-	data_in_bus
	f-	data_in_bus
	g-	data_in_bus
	&-	data_in_bus
	'-	data_in_bus
	(-	data_in_bus
	)-	data_in_bus
	*-	data_in_bus
	+-	data_in_bus
	,-	data_in_bus
	--	data_in_bus
	.-	data_in_bus
	/-	data_in_bus
	0-	data_in_bus
	1-	data_in_bus
	2-	data_in_bus
	3-	data_in_bus
	4-	data_in_bus
	5-	data_in_bus
	6-	data_in_bus
	7-	data_in_bus
	8-	data_in_bus
	9-	data_in_bus
	:-	data_in_bus
	;-	data_in_bus
	<-	data_in_bus
	=-	data_in_bus
	>-	data_in_bus
	?-	data_in_bus
	@-	data_in_bus
	A-	data_in_bus
	B-	data_in_bus
	C-	data_in_bus
	D-	data_in_bus
	E-	data_in_bus
	b,	data_in_bus
	c,	data_in_bus
	d,	data_in_bus
	e,	data_in_bus
	f,	data_in_bus
	g,	data_in_bus
	h,	data_in_bus
	i,	data_in_bus
	j,	data_in_bus
	k,	data_in_bus
	l,	data_in_bus
	m,	data_in_bus
	n,	data_in_bus
	o,	data_in_bus
	p,	data_in_bus
	q,	data_in_bus
	r,	data_in_bus
	s,	data_in_bus
	t,	data_in_bus
	u,	data_in_bus
	v,	data_in_bus
	w,	data_in_bus
	x,	data_in_bus
	y,	data_in_bus
	z,	data_in_bus
	{,	data_in_bus
	|,	data_in_bus
	},	data_in_bus
	~,	data_in_bus
	!-	data_in_bus
	"-	data_in_bus
	#-	data_in_bus
	i-	valid_in_bus
	G-	valid_in_bus
	%-	valid_in_bus
	h-	ready_in_bus
	F-	ready_in_bus
	$-	ready_in_bus
	P.	data_out_bus
	Q.	data_out_bus
	R.	data_out_bus
	S.	data_out_bus
	T.	data_out_bus
	U.	data_out_bus
	V.	data_out_bus
	W.	data_out_bus
	X.	data_out_bus
	Y.	data_out_bus
	Z.	data_out_bus
	[.	data_out_bus
	\.	data_out_bus
	].	data_out_bus
	^.	data_out_bus
	_.	data_out_bus
	`.	data_out_bus
	a.	data_out_bus
	b.	data_out_bus
	c.	data_out_bus
	d.	data_out_bus
	e.	data_out_bus
	f.	data_out_bus
	g.	data_out_bus
	h.	data_out_bus
	i.	data_out_bus
	j.	data_out_bus
	k.	data_out_bus
	l.	data_out_bus
	m.	data_out_bus
	n.	data_out_bus
	o.	data_out_bus
	..	data_out_bus
	/.	data_out_bus
	0.	data_out_bus
	1.	data_out_bus
	2.	data_out_bus
	3.	data_out_bus
	4.	data_out_bus
	5.	data_out_bus
	6.	data_out_bus
	7.	data_out_bus
	8.	data_out_bus
	9.	data_out_bus
	:.	data_out_bus
	;.	data_out_bus
	<.	data_out_bus
	=.	data_out_bus
	>.	data_out_bus
	?.	data_out_bus
	@.	data_out_bus
	A.	data_out_bus
	B.	data_out_bus
	C.	data_out_bus
	D.	data_out_bus
	E.	data_out_bus
	F.	data_out_bus
	G.	data_out_bus
	H.	data_out_bus
	I.	data_out_bus
	J.	data_out_bus
	K.	data_out_bus
	L.	data_out_bus
	M.	data_out_bus
	j-	data_out_bus
	k-	data_out_bus
	l-	data_out_bus
	m-	data_out_bus
	n-	data_out_bus
	o-	data_out_bus
	p-	data_out_bus
	q-	data_out_bus
	r-	data_out_bus
	s-	data_out_bus
	t-	data_out_bus
	u-	data_out_bus
	v-	data_out_bus
	w-	data_out_bus
	x-	data_out_bus
	y-	data_out_bus
	z-	data_out_bus
	{-	data_out_bus
	|-	data_out_bus
	}-	data_out_bus
	~-	data_out_bus
	!.	data_out_bus
	".	data_out_bus
	#.	data_out_bus
	$.	data_out_bus
	%.	data_out_bus
	&.	data_out_bus
	'.	data_out_bus
	(.	data_out_bus
	).	data_out_bus
	*.	data_out_bus
	+.	data_out_bus
	q.	valid_out_bus
	O.	valid_out_bus
	-.	valid_out_bus
	p.	ready_out_bus
	N.	ready_out_bus
	,.	ready_out_bus
	hM	data_in_switch
	iM	data_in_switch
	jM	data_in_switch
	kM	data_in_switch
	lM	data_in_switch
	mM	data_in_switch
	nM	data_in_switch
	oM	data_in_switch
	pM	data_in_switch
	qM	data_in_switch
	rM	data_in_switch
	sM	data_in_switch
	tM	data_in_switch
	uM	data_in_switch
	vM	data_in_switch
	wM	data_in_switch
	xM	data_in_switch
	yM	data_in_switch
	zM	data_in_switch
	{M	data_in_switch
	|M	data_in_switch
	}M	data_in_switch
	~M	data_in_switch
	!N	data_in_switch
	"N	data_in_switch
	#N	data_in_switch
	$N	data_in_switch
	%N	data_in_switch
	&N	data_in_switch
	'N	data_in_switch
	(N	data_in_switch
	)N	data_in_switch
	*N	data_in_switch
	+N	data_in_switch
	,N	data_in_switch
	-N	data_in_switch
	.N	data_in_switch
	/N	data_in_switch
	0N	data_in_switch
	1N	data_in_switch
	2N	data_in_switch
	3N	data_in_switch
	4N	data_in_switch
	5N	data_in_switch
	6N	data_in_switch
	7N	data_in_switch
	8N	data_in_switch
	9N	data_in_switch
	:N	data_in_switch
	;N	data_in_switch
	<N	data_in_switch
	=N	data_in_switch
	>N	data_in_switch
	?N	data_in_switch
	@N	data_in_switch
	AN	data_in_switch
	BN	data_in_switch
	CN	data_in_switch
	DN	data_in_switch
	EN	data_in_switch
	FN	data_in_switch
	GN	data_in_switch
	HN	data_in_switch
	IN	data_in_switch
	JN	data_in_switch
	KN	data_in_switch
	LN	data_in_switch
	MN	data_in_switch
	NN	data_in_switch
	ON	data_in_switch
	PN	data_in_switch
	QN	data_in_switch
	RN	data_in_switch
	SN	data_in_switch
	TN	data_in_switch
	UN	data_in_switch
	VN	data_in_switch
	WN	data_in_switch
	XN	data_in_switch
	YN	data_in_switch
	ZN	data_in_switch
	[N	data_in_switch
	\N	data_in_switch
	]N	data_in_switch
	^N	data_in_switch
	_N	data_in_switch
	`N	data_in_switch
	aN	data_in_switch
	bN	data_in_switch
	cN	data_in_switch
	dN	data_in_switch
	eN	data_in_switch
	fN	data_in_switch
	gN	data_in_switch
	hN	data_in_switch
	iN	data_in_switch
	jN	data_out_port
	kN	data_out_port
	lN	data_out_port
	mN	data_out_port
	nN	data_out_port
	oN	data_out_port
	pN	data_out_port
	qN	data_out_port
	rN	data_out_port
	sN	data_out_port
	tN	data_out_port
	uN	data_out_port
	vN	data_out_port
	wN	data_out_port
	xN	data_out_port
	yN	data_out_port
	zN	data_out_port
	{N	data_out_port
	|N	data_out_port
	}N	data_out_port
	~N	data_out_port
	!O	data_out_port
	"O	data_out_port
	#O	data_out_port
	$O	data_out_port
	%O	data_out_port
	&O	data_out_port
	'O	data_out_port
	(O	data_out_port
	)O	data_out_port
	*O	data_out_port
	+O	data_out_port
	,O	data_out_port
	-O	data_out_port
	.O	data_out_port
	/O	data_out_port
	0O	data_out_port
	1O	data_out_port
	2O	data_out_port
	3O	data_out_port
	4O	data_out_port
	5O	data_out_port
	6O	data_out_port
	7O	data_out_port
	8O	data_out_port
	9O	data_out_port
	:O	data_out_port
	;O	data_out_port
	<O	data_out_port
	=O	data_out_port
	>O	data_out_port
	?O	data_out_port
	@O	data_out_port
	AO	data_out_port
	BO	data_out_port
	CO	data_out_port
	DO	data_out_port
	EO	data_out_port
	FO	data_out_port
	GO	data_out_port
	HO	data_out_port
	IO	data_out_port
	JO	data_out_port
	KO	data_out_port
	LO	data_out_port
	MO	data_out_port
	NO	data_out_port
	OO	data_out_port
	PO	data_out_port
	QO	data_out_port
	RO	data_out_port
	SO	data_out_port
	TO	data_out_port
	UO	data_out_port
	VO	data_out_port
	WO	data_out_port
	XO	data_out_port
	YO	data_out_port
	ZO	data_out_port
	[O	data_out_port
	\O	data_out_port
	]O	data_out_port
	^O	data_out_port
	_O	data_out_port
	`O	data_out_port
	aO	data_out_port
	bO	data_out_port
	cO	data_out_port
	dO	data_out_port
	eO	data_out_port
	fO	data_out_port
	gO	data_out_port
	hO	data_out_port
	iO	data_out_port
	jO	data_out_port
	kO	data_out_port
	lO	valid_in_switch
	mO	valid_in_switch
	nO	valid_in_switch
	oO	valid_out_port
	pO	valid_out_port
	qO	valid_out_port
	rO	ready_in_switch
	sO	ready_in_switch
	tO	ready_in_switch
	uO	ready_out_port
	vO	ready_out_port
	wO	ready_out_port
	xO	routeRelieve
	yO	routeRelieve
	zO	routeRelieve
	{O	routeReserveRequestValid
	|O	routeReserveRequestValid
	}O	routeReserveRequestValid
	~O	routeReserveRequest
	!P	routeReserveRequest
	"P	routeReserveRequest
	#P	routeReserveRequest
	$P	routeReserveRequest
	%P	routeReserveRequest
	&P	routeReserveStatus
	'P	routeReserveStatus
	(P	routeReserveStatus
Scope: genblk1
	)P	i [32:0]
Scope: port
	*P	N [32:0]
	+P	INDEX [32:0]
	,P	DATA_WIDTH [32:0]
	-P	TYPE_WIDTH [32:0]
	.P	REQUEST_WIDTH [32:0]
	/P	FlitPerPacket [32:0]
	0P	PhitPerFlit [32:0]
	1P	FIFO_DEPTH [32:0]
	`,	clk
	a,	rst
	H-	data_in
	I-	data_in
	J-	data_in
	K-	data_in
	L-	data_in
	M-	data_in
	N-	data_in
	O-	data_in
	P-	data_in
	Q-	data_in
	R-	data_in
	S-	data_in
	T-	data_in
	U-	data_in
	V-	data_in
	W-	data_in
	X-	data_in
	Y-	data_in
	Z-	data_in
	[-	data_in
	\-	data_in
	]-	data_in
	^-	data_in
	_-	data_in
	`-	data_in
	a-	data_in
	b-	data_in
	c-	data_in
	d-	data_in
	e-	data_in
	f-	data_in
	g-	data_in
	i-	valid_in
	h-	ready_in
	jN	data_out
	kN	data_out
	lN	data_out
	mN	data_out
	nN	data_out
	oN	data_out
	pN	data_out
	qN	data_out
	rN	data_out
	sN	data_out
	tN	data_out
	uN	data_out
	vN	data_out
	wN	data_out
	xN	data_out
	yN	data_out
	zN	data_out
	{N	data_out
	|N	data_out
	}N	data_out
	~N	data_out
	!O	data_out
	"O	data_out
	#O	data_out
	$O	data_out
	%O	data_out
	&O	data_out
	'O	data_out
	(O	data_out
	)O	data_out
	*O	data_out
	+O	data_out
	oO	valid_out
	uO	ready_out
	xO	routeRelieve
	{O	routeReserveRequestValid
	~O	routeReserveRequest
	!P	routeReserveRequest
	&P	routeReserveStatus
	2P	popBuffer
	3P	pushBuffer
	4P	full
	5P	empty
Scope: portControlLogic
	6P	N [32:0]
	7P	INDEX [32:0]
	8P	DATA_WIDTH [32:0]
	9P	TYPE_WIDTH [32:0]
	:P	REQUEST_WIDTH [32:0]
	;P	FlitPerPacket [32:0]
	<P	PhitPerFlit [32:0]
	`,	clk
	a,	rst
	H-	data_in
	I-	data_in
	J-	data_in
	K-	data_in
	L-	data_in
	M-	data_in
	N-	data_in
	O-	data_in
	P-	data_in
	Q-	data_in
	R-	data_in
	S-	data_in
	T-	data_in
	U-	data_in
	V-	data_in
	W-	data_in
	X-	data_in
	Y-	data_in
	Z-	data_in
	[-	data_in
	\-	data_in
	]-	data_in
	^-	data_in
	_-	data_in
	`-	data_in
	a-	data_in
	b-	data_in
	c-	data_in
	d-	data_in
	e-	data_in
	f-	data_in
	g-	data_in
	i-	valid_in
	h-	ready_in
	oO	valid_out
	uO	ready_out
	jN	Flit
	kN	Flit
	lN	Flit
	mN	Flit
	nN	Flit
	oN	Flit
	pN	Flit
	qN	Flit
	rN	Flit
	sN	Flit
	tN	Flit
	uN	Flit
	vN	Flit
	wN	Flit
	xN	Flit
	yN	Flit
	zN	Flit
	{N	Flit
	|N	Flit
	}N	Flit
	~N	Flit
	!O	Flit
	"O	Flit
	#O	Flit
	$O	Flit
	%O	Flit
	&O	Flit
	'O	Flit
	(O	Flit
	)O	Flit
	*O	Flit
	+O	Flit
	2P	popBuffer
	3P	pushBuffer
	4P	full
	5P	empty
	xO	routeRelieve
	{O	routeReserveRequestValid
	~O	routeReserveRequest
	!P	routeReserveRequest
	&P	routeReserveStatus
	=P	FlitType
	>P	FlitType
	?P	reserveRoute
	@P	routeReserveStatus_CFSM
	AP	Head_Phit
	BP	Head_Phit
	CP	Head_Phit
	DP	Head_Phit
	EP	Head_Phit
	FP	Head_Phit
	GP	Head_Phit
	HP	Head_Phit
	IP	Head_Phit
	JP	Head_Phit
	KP	Head_Phit
	LP	Head_Phit
	MP	Head_Phit
	NP	Head_Phit
	OP	Head_Phit
	PP	Head_Phit
	QP	Head_Phit
	RP	Head_Phit
	SP	Head_Phit
	TP	Head_Phit
	UP	Head_Phit
	VP	Head_Phit
	WP	Head_Phit
	XP	Head_Phit
	YP	Head_Phit
	ZP	Head_Phit
	[P	Head_Phit
	\P	Head_Phit
	]P	Head_Phit
	^P	Head_Phit
	_P	Head_Phit
	`P	Head_Phit
	aP	headFlitValid
	bP	phitCounter
	cP	headFlitStatus
	dP	Handshake
Scope: controlFSM
	eP	FlitPerPacket [32:0]
	fP	PhitPerFlit [32:0]
	gP	REQUEST_WIDTH [32:0]
	hP	TYPE_WIDTH [32:0]
	iP	HEAD [32:0]
	jP	PAYLOAD [32:0]
	kP	TAIL [32:0]
	lP	UnRouted [32:0]
	mP	HeadFlit [32:0]
	nP	ReservePath [32:0]
	oP	Route [32:0]
	pP	TailFlit [32:0]
	`,	clk
	a,	rst
	i-	valid_in
	h-	ready_in
	oO	valid_out
	uO	ready_out
	=P	FlitType
	>P	FlitType
	?P	reserveRoute
	@P	routeReserveStatus
	aP	headFlitValid
	qP	phitCounter
	cP	headFlitStatus
	2P	popBuffer
	3P	pushBuffer
	dP	Handshake
	4P	full
	5P	empty
	xO	routeRelieve
	rP	state [3:0]
	sP	nextState [3:0]
	tP	flitCounter [4:0]
	uP	TailReceived
	vP	flitValid
	wP	pushBuffer_state
Scope: headFlitBuffer
	xP	N [32:0]
	yP	INDEX [32:0]
	zP	DATA_WIDTH [32:0]
	{P	PhitPerFlit [32:0]
	|P	REQUEST_WIDTH [32:0]
	`,	clk
	a,	rst
	dP	Handshake
	H-	Head_Phit
	I-	Head_Phit
	J-	Head_Phit
	K-	Head_Phit
	L-	Head_Phit
	M-	Head_Phit
	N-	Head_Phit
	O-	Head_Phit
	P-	Head_Phit
	Q-	Head_Phit
	R-	Head_Phit
	S-	Head_Phit
	T-	Head_Phit
	U-	Head_Phit
	V-	Head_Phit
	W-	Head_Phit
	X-	Head_Phit
	Y-	Head_Phit
	Z-	Head_Phit
	[-	Head_Phit
	\-	Head_Phit
	]-	Head_Phit
	^-	Head_Phit
	_-	Head_Phit
	`-	Head_Phit
	a-	Head_Phit
	b-	Head_Phit
	c-	Head_Phit
	d-	Head_Phit
	e-	Head_Phit
	f-	Head_Phit
	g-	Head_Phit
	aP	headFlitValid
	bP	phitCounter
	?P	reserveRoute
	@P	routeReserveStatus_CFSM
	cP	headFlitStatus
	{O	routeReserveRequestValid
	~O	routeReserveRequest
	!P	routeReserveRequest
	&P	routeReserveStatus_Switch
	}P	headBuffer [32:0]
	~P	headFlitValidStatus
Scope: headFlitDecoder
	!Q	N [32:0]
	"Q	INDEX [32:0]
	#Q	DATA_WIDTH [32:0]
	$Q	PhitPerFlit [32:0]
	%Q	REQUEST_WIDTH [32:0]
	&Q	HeadFlit
	'Q	HeadFlit
	(Q	HeadFlit
	)Q	HeadFlit
	*Q	HeadFlit
	+Q	HeadFlit
	,Q	HeadFlit
	-Q	HeadFlit
	.Q	HeadFlit
	/Q	HeadFlit
	0Q	HeadFlit
	1Q	HeadFlit
	2Q	HeadFlit
	3Q	HeadFlit
	4Q	HeadFlit
	5Q	HeadFlit
	6Q	HeadFlit
	7Q	HeadFlit
	8Q	HeadFlit
	9Q	HeadFlit
	:Q	HeadFlit
	;Q	HeadFlit
	<Q	HeadFlit
	=Q	HeadFlit
	>Q	HeadFlit
	?Q	HeadFlit
	@Q	HeadFlit
	AQ	HeadFlit
	BQ	HeadFlit
	CQ	HeadFlit
	DQ	HeadFlit
	EQ	HeadFlit
	~O	RequestMessage
	!P	RequestMessage
	FQ	pathString [2048:0]
	GQ	index [32:0]
	HQ	i [32:0]
	IQ	Destination
	JQ	Destination
	KQ	Destination
Scope: flitIdentifier
	LQ	DATA_WIDTH [32:0]
	MQ	TYPE_WIDTH [32:0]
	NQ	PhitPerFlit [32:0]
	OQ	HeadIdentifier [32:0]
	PQ	PayLoadIdentifier [32:0]
	QQ	TailIdentifier [32:0]
	RQ	DEFAULT [32:0]
	SQ	HEAD [32:0]
	TQ	PAYLOAD [32:0]
	UQ	TAIL [32:0]
	jN	Flit
	kN	Flit
	lN	Flit
	mN	Flit
	nN	Flit
	oN	Flit
	pN	Flit
	qN	Flit
	rN	Flit
	sN	Flit
	tN	Flit
	uN	Flit
	vN	Flit
	wN	Flit
	xN	Flit
	yN	Flit
	zN	Flit
	{N	Flit
	|N	Flit
	}N	Flit
	~N	Flit
	!O	Flit
	"O	Flit
	#O	Flit
	$O	Flit
	%O	Flit
	&O	Flit
	'O	Flit
	(O	Flit
	)O	Flit
	*O	Flit
	+O	Flit
	VQ	FlitType [2:0]
Scope: fifo
	WQ	DATA_WIDTH [32:0]
	XQ	FIFO_DEPTH [32:0]
	YQ	ADDRESS_WIDTH [32:0]
	`,	clk
	a,	rst
	5P	empty
	2P	rd_en
	ZQ	dout [32:0]
	4P	full
	3P	wr_en
	H-	din
	I-	din
	J-	din
	K-	din
	L-	din
	M-	din
	N-	din
	O-	din
	P-	din
	Q-	din
	R-	din
	S-	din
	T-	din
	U-	din
	V-	din
	W-	din
	X-	din
	Y-	din
	Z-	din
	[-	din
	\-	din
	]-	din
	^-	din
	_-	din
	`-	din
	a-	din
	b-	din
	c-	din
	d-	din
	e-	din
	f-	din
	g-	din
	[Q	head_tail
	\Q	head_tail
	]Q	head_tail
	^Q	head_tail
	_Q	head [4:0]
	`Q	tail [4:0]
	aQ	i [32:0]
Scope: genblk1
	bQ	i [32:0]
Scope: port
	cQ	N [32:0]
	dQ	INDEX [32:0]
	eQ	DATA_WIDTH [32:0]
	fQ	TYPE_WIDTH [32:0]
	gQ	REQUEST_WIDTH [32:0]
	hQ	FlitPerPacket [32:0]
	iQ	PhitPerFlit [32:0]
	jQ	FIFO_DEPTH [32:0]
	`,	clk
	a,	rst
	&-	data_in
	'-	data_in
	(-	data_in
	)-	data_in
	*-	data_in
	+-	data_in
	,-	data_in
	--	data_in
	.-	data_in
	/-	data_in
	0-	data_in
	1-	data_in
	2-	data_in
	3-	data_in
	4-	data_in
	5-	data_in
	6-	data_in
	7-	data_in
	8-	data_in
	9-	data_in
	:-	data_in
	;-	data_in
	<-	data_in
	=-	data_in
	>-	data_in
	?-	data_in
	@-	data_in
	A-	data_in
	B-	data_in
	C-	data_in
	D-	data_in
	E-	data_in
	G-	valid_in
	F-	ready_in
	,O	data_out
	-O	data_out
	.O	data_out
	/O	data_out
	0O	data_out
	1O	data_out
	2O	data_out
	3O	data_out
	4O	data_out
	5O	data_out
	6O	data_out
	7O	data_out
	8O	data_out
	9O	data_out
	:O	data_out
	;O	data_out
	<O	data_out
	=O	data_out
	>O	data_out
	?O	data_out
	@O	data_out
	AO	data_out
	BO	data_out
	CO	data_out
	DO	data_out
	EO	data_out
	FO	data_out
	GO	data_out
	HO	data_out
	IO	data_out
	JO	data_out
	KO	data_out
	pO	valid_out
	vO	ready_out
	yO	routeRelieve
	|O	routeReserveRequestValid
	"P	routeReserveRequest
	#P	routeReserveRequest
	'P	routeReserveStatus
	kQ	popBuffer
	lQ	pushBuffer
	mQ	full
	nQ	empty
Scope: portControlLogic
	oQ	N [32:0]
	pQ	INDEX [32:0]
	qQ	DATA_WIDTH [32:0]
	rQ	TYPE_WIDTH [32:0]
	sQ	REQUEST_WIDTH [32:0]
	tQ	FlitPerPacket [32:0]
	uQ	PhitPerFlit [32:0]
	`,	clk
	a,	rst
	&-	data_in
	'-	data_in
	(-	data_in
	)-	data_in
	*-	data_in
	+-	data_in
	,-	data_in
	--	data_in
	.-	data_in
	/-	data_in
	0-	data_in
	1-	data_in
	2-	data_in
	3-	data_in
	4-	data_in
	5-	data_in
	6-	data_in
	7-	data_in
	8-	data_in
	9-	data_in
	:-	data_in
	;-	data_in
	<-	data_in
	=-	data_in
	>-	data_in
	?-	data_in
	@-	data_in
	A-	data_in
	B-	data_in
	C-	data_in
	D-	data_in
	E-	data_in
	G-	valid_in
	F-	ready_in
	pO	valid_out
	vO	ready_out
	,O	Flit
	-O	Flit
	.O	Flit
	/O	Flit
	0O	Flit
	1O	Flit
	2O	Flit
	3O	Flit
	4O	Flit
	5O	Flit
	6O	Flit
	7O	Flit
	8O	Flit
	9O	Flit
	:O	Flit
	;O	Flit
	<O	Flit
	=O	Flit
	>O	Flit
	?O	Flit
	@O	Flit
	AO	Flit
	BO	Flit
	CO	Flit
	DO	Flit
	EO	Flit
	FO	Flit
	GO	Flit
	HO	Flit
	IO	Flit
	JO	Flit
	KO	Flit
	kQ	popBuffer
	lQ	pushBuffer
	mQ	full
	nQ	empty
	yO	routeRelieve
	|O	routeReserveRequestValid
	"P	routeReserveRequest
	#P	routeReserveRequest
	'P	routeReserveStatus
	vQ	FlitType
	wQ	FlitType
	xQ	reserveRoute
	yQ	routeReserveStatus_CFSM
	zQ	Head_Phit
	{Q	Head_Phit
	|Q	Head_Phit
	}Q	Head_Phit
	~Q	Head_Phit
	!R	Head_Phit
	"R	Head_Phit
	#R	Head_Phit
	$R	Head_Phit
	%R	Head_Phit
	&R	Head_Phit
	'R	Head_Phit
	(R	Head_Phit
	)R	Head_Phit
	*R	Head_Phit
	+R	Head_Phit
	,R	Head_Phit
	-R	Head_Phit
	.R	Head_Phit
	/R	Head_Phit
	0R	Head_Phit
	1R	Head_Phit
	2R	Head_Phit
	3R	Head_Phit
	4R	Head_Phit
	5R	Head_Phit
	6R	Head_Phit
	7R	Head_Phit
	8R	Head_Phit
	9R	Head_Phit
	:R	Head_Phit
	;R	Head_Phit
	<R	headFlitValid
	=R	phitCounter
	>R	headFlitStatus
	?R	Handshake
Scope: controlFSM
	@R	FlitPerPacket [32:0]
	AR	PhitPerFlit [32:0]
	BR	REQUEST_WIDTH [32:0]
	CR	TYPE_WIDTH [32:0]
	DR	HEAD [32:0]
	ER	PAYLOAD [32:0]
	FR	TAIL [32:0]
	GR	UnRouted [32:0]
	HR	HeadFlit [32:0]
	IR	ReservePath [32:0]
	JR	Route [32:0]
	KR	TailFlit [32:0]
	`,	clk
	a,	rst
	G-	valid_in
	F-	ready_in
	pO	valid_out
	vO	ready_out
	vQ	FlitType
	wQ	FlitType
	xQ	reserveRoute
	yQ	routeReserveStatus
	<R	headFlitValid
	LR	phitCounter
	>R	headFlitStatus
	kQ	popBuffer
	lQ	pushBuffer
	?R	Handshake
	mQ	full
	nQ	empty
	yO	routeRelieve
	MR	state [3:0]
	NR	nextState [3:0]
	OR	flitCounter [4:0]
	PR	TailReceived
	QR	flitValid
	RR	pushBuffer_state
Scope: headFlitBuffer
	SR	N [32:0]
	TR	INDEX [32:0]
	UR	DATA_WIDTH [32:0]
	VR	PhitPerFlit [32:0]
	WR	REQUEST_WIDTH [32:0]
	`,	clk
	a,	rst
	?R	Handshake
	&-	Head_Phit
	'-	Head_Phit
	(-	Head_Phit
	)-	Head_Phit
	*-	Head_Phit
	+-	Head_Phit
	,-	Head_Phit
	--	Head_Phit
	.-	Head_Phit
	/-	Head_Phit
	0-	Head_Phit
	1-	Head_Phit
	2-	Head_Phit
	3-	Head_Phit
	4-	Head_Phit
	5-	Head_Phit
	6-	Head_Phit
	7-	Head_Phit
	8-	Head_Phit
	9-	Head_Phit
	:-	Head_Phit
	;-	Head_Phit
	<-	Head_Phit
	=-	Head_Phit
	>-	Head_Phit
	?-	Head_Phit
	@-	Head_Phit
	A-	Head_Phit
	B-	Head_Phit
	C-	Head_Phit
	D-	Head_Phit
	E-	Head_Phit
	<R	headFlitValid
	=R	phitCounter
	xQ	reserveRoute
	yQ	routeReserveStatus_CFSM
	>R	headFlitStatus
	|O	routeReserveRequestValid
	"P	routeReserveRequest
	#P	routeReserveRequest
	'P	routeReserveStatus_Switch
	XR	headBuffer [32:0]
	YR	headFlitValidStatus
Scope: headFlitDecoder
	ZR	N [32:0]
	[R	INDEX [32:0]
	\R	DATA_WIDTH [32:0]
	]R	PhitPerFlit [32:0]
	^R	REQUEST_WIDTH [32:0]
	_R	HeadFlit
	`R	HeadFlit
	aR	HeadFlit
	bR	HeadFlit
	cR	HeadFlit
	dR	HeadFlit
	eR	HeadFlit
	fR	HeadFlit
	gR	HeadFlit
	hR	HeadFlit
	iR	HeadFlit
	jR	HeadFlit
	kR	HeadFlit
	lR	HeadFlit
	mR	HeadFlit
	nR	HeadFlit
	oR	HeadFlit
	pR	HeadFlit
	qR	HeadFlit
	rR	HeadFlit
	sR	HeadFlit
	tR	HeadFlit
	uR	HeadFlit
	vR	HeadFlit
	wR	HeadFlit
	xR	HeadFlit
	yR	HeadFlit
	zR	HeadFlit
	{R	HeadFlit
	|R	HeadFlit
	}R	HeadFlit
	~R	HeadFlit
	"P	RequestMessage
	#P	RequestMessage
	!S	pathString [2048:0]
	"S	index [32:0]
	#S	i [32:0]
	$S	Destination
	%S	Destination
	&S	Destination
Scope: flitIdentifier
	'S	DATA_WIDTH [32:0]
	(S	TYPE_WIDTH [32:0]
	)S	PhitPerFlit [32:0]
	*S	HeadIdentifier [32:0]
	+S	PayLoadIdentifier [32:0]
	,S	TailIdentifier [32:0]
	-S	DEFAULT [32:0]
	.S	HEAD [32:0]
	/S	PAYLOAD [32:0]
	0S	TAIL [32:0]
	,O	Flit
	-O	Flit
	.O	Flit
	/O	Flit
	0O	Flit
	1O	Flit
	2O	Flit
	3O	Flit
	4O	Flit
	5O	Flit
	6O	Flit
	7O	Flit
	8O	Flit
	9O	Flit
	:O	Flit
	;O	Flit
	<O	Flit
	=O	Flit
	>O	Flit
	?O	Flit
	@O	Flit
	AO	Flit
	BO	Flit
	CO	Flit
	DO	Flit
	EO	Flit
	FO	Flit
	GO	Flit
	HO	Flit
	IO	Flit
	JO	Flit
	KO	Flit
	1S	FlitType [2:0]
Scope: fifo
	2S	DATA_WIDTH [32:0]
	3S	FIFO_DEPTH [32:0]
	4S	ADDRESS_WIDTH [32:0]
	`,	clk
	a,	rst
	nQ	empty
	kQ	rd_en
	5S	dout [32:0]
	mQ	full
	lQ	wr_en
	&-	din
	'-	din
	(-	din
	)-	din
	*-	din
	+-	din
	,-	din
	--	din
	.-	din
	/-	din
	0-	din
	1-	din
	2-	din
	3-	din
	4-	din
	5-	din
	6-	din
	7-	din
	8-	din
	9-	din
	:-	din
	;-	din
	<-	din
	=-	din
	>-	din
	?-	din
	@-	din
	A-	din
	B-	din
	C-	din
	D-	din
	E-	din
	6S	head_tail
	7S	head_tail
	8S	head_tail
	9S	head_tail
	:S	head [4:0]
	;S	tail [4:0]
	<S	i [32:0]
Scope: genblk1
	=S	i [32:0]
Scope: port
	>S	N [32:0]
	?S	INDEX [32:0]
	@S	DATA_WIDTH [32:0]
	AS	TYPE_WIDTH [32:0]
	BS	REQUEST_WIDTH [32:0]
	CS	FlitPerPacket [32:0]
	DS	PhitPerFlit [32:0]
	ES	FIFO_DEPTH [32:0]
	`,	clk
	a,	rst
	b,	data_in
	c,	data_in
	d,	data_in
	e,	data_in
	f,	data_in
	g,	data_in
	h,	data_in
	i,	data_in
	j,	data_in
	k,	data_in
	l,	data_in
	m,	data_in
	n,	data_in
	o,	data_in
	p,	data_in
	q,	data_in
	r,	data_in
	s,	data_in
	t,	data_in
	u,	data_in
	v,	data_in
	w,	data_in
	x,	data_in
	y,	data_in
	z,	data_in
	{,	data_in
	|,	data_in
	},	data_in
	~,	data_in
	!-	data_in
	"-	data_in
	#-	data_in
	%-	valid_in
	$-	ready_in
	LO	data_out
	MO	data_out
	NO	data_out
	OO	data_out
	PO	data_out
	QO	data_out
	RO	data_out
	SO	data_out
	TO	data_out
	UO	data_out
	VO	data_out
	WO	data_out
	XO	data_out
	YO	data_out
	ZO	data_out
	[O	data_out
	\O	data_out
	]O	data_out
	^O	data_out
	_O	data_out
	`O	data_out
	aO	data_out
	bO	data_out
	cO	data_out
	dO	data_out
	eO	data_out
	fO	data_out
	gO	data_out
	hO	data_out
	iO	data_out
	jO	data_out
	kO	data_out
	qO	valid_out
	wO	ready_out
	zO	routeRelieve
	}O	routeReserveRequestValid
	$P	routeReserveRequest
	%P	routeReserveRequest
	(P	routeReserveStatus
	FS	popBuffer
	GS	pushBuffer
	HS	full
	IS	empty
Scope: portControlLogic
	JS	N [32:0]
	KS	INDEX [32:0]
	LS	DATA_WIDTH [32:0]
	MS	TYPE_WIDTH [32:0]
	NS	REQUEST_WIDTH [32:0]
	OS	FlitPerPacket [32:0]
	PS	PhitPerFlit [32:0]
	`,	clk
	a,	rst
	b,	data_in
	c,	data_in
	d,	data_in
	e,	data_in
	f,	data_in
	g,	data_in
	h,	data_in
	i,	data_in
	j,	data_in
	k,	data_in
	l,	data_in
	m,	data_in
	n,	data_in
	o,	data_in
	p,	data_in
	q,	data_in
	r,	data_in
	s,	data_in
	t,	data_in
	u,	data_in
	v,	data_in
	w,	data_in
	x,	data_in
	y,	data_in
	z,	data_in
	{,	data_in
	|,	data_in
	},	data_in
	~,	data_in
	!-	data_in
	"-	data_in
	#-	data_in
	%-	valid_in
	$-	ready_in
	qO	valid_out
	wO	ready_out
	LO	Flit
	MO	Flit
	NO	Flit
	OO	Flit
	PO	Flit
	QO	Flit
	RO	Flit
	SO	Flit
	TO	Flit
	UO	Flit
	VO	Flit
	WO	Flit
	XO	Flit
	YO	Flit
	ZO	Flit
	[O	Flit
	\O	Flit
	]O	Flit
	^O	Flit
	_O	Flit
	`O	Flit
	aO	Flit
	bO	Flit
	cO	Flit
	dO	Flit
	eO	Flit
	fO	Flit
	gO	Flit
	hO	Flit
	iO	Flit
	jO	Flit
	kO	Flit
	FS	popBuffer
	GS	pushBuffer
	HS	full
	IS	empty
	zO	routeRelieve
	}O	routeReserveRequestValid
	$P	routeReserveRequest
	%P	routeReserveRequest
	(P	routeReserveStatus
	QS	FlitType
	RS	FlitType
	SS	reserveRoute
	TS	routeReserveStatus_CFSM
	US	Head_Phit
	VS	Head_Phit
	WS	Head_Phit
	XS	Head_Phit
	YS	Head_Phit
	ZS	Head_Phit
	[S	Head_Phit
	\S	Head_Phit
	]S	Head_Phit
	^S	Head_Phit
	_S	Head_Phit
	`S	Head_Phit
	aS	Head_Phit
	bS	Head_Phit
	cS	Head_Phit
	dS	Head_Phit
	eS	Head_Phit
	fS	Head_Phit
	gS	Head_Phit
	hS	Head_Phit
	iS	Head_Phit
	jS	Head_Phit
	kS	Head_Phit
	lS	Head_Phit
	mS	Head_Phit
	nS	Head_Phit
	oS	Head_Phit
	pS	Head_Phit
	qS	Head_Phit
	rS	Head_Phit
	sS	Head_Phit
	tS	Head_Phit
	uS	headFlitValid
	vS	phitCounter
	wS	headFlitStatus
	xS	Handshake
Scope: controlFSM
	yS	FlitPerPacket [32:0]
	zS	PhitPerFlit [32:0]
	{S	REQUEST_WIDTH [32:0]
	|S	TYPE_WIDTH [32:0]
	}S	HEAD [32:0]
	~S	PAYLOAD [32:0]
	!T	TAIL [32:0]
	"T	UnRouted [32:0]
	#T	HeadFlit [32:0]
	$T	ReservePath [32:0]
	%T	Route [32:0]
	&T	TailFlit [32:0]
	`,	clk
	a,	rst
	%-	valid_in
	$-	ready_in
	qO	valid_out
	wO	ready_out
	QS	FlitType
	RS	FlitType
	SS	reserveRoute
	TS	routeReserveStatus
	uS	headFlitValid
	'T	phitCounter
	wS	headFlitStatus
	FS	popBuffer
	GS	pushBuffer
	xS	Handshake
	HS	full
	IS	empty
	zO	routeRelieve
	(T	state [3:0]
	)T	nextState [3:0]
	*T	flitCounter [4:0]
	+T	TailReceived
	,T	flitValid
	-T	pushBuffer_state
Scope: headFlitBuffer
	.T	N [32:0]
	/T	INDEX [32:0]
	0T	DATA_WIDTH [32:0]
	1T	PhitPerFlit [32:0]
	2T	REQUEST_WIDTH [32:0]
	`,	clk
	a,	rst
	xS	Handshake
	b,	Head_Phit
	c,	Head_Phit
	d,	Head_Phit
	e,	Head_Phit
	f,	Head_Phit
	g,	Head_Phit
	h,	Head_Phit
	i,	Head_Phit
	j,	Head_Phit
	k,	Head_Phit
	l,	Head_Phit
	m,	Head_Phit
	n,	Head_Phit
	o,	Head_Phit
	p,	Head_Phit
	q,	Head_Phit
	r,	Head_Phit
	s,	Head_Phit
	t,	Head_Phit
	u,	Head_Phit
	v,	Head_Phit
	w,	Head_Phit
	x,	Head_Phit
	y,	Head_Phit
	z,	Head_Phit
	{,	Head_Phit
	|,	Head_Phit
	},	Head_Phit
	~,	Head_Phit
	!-	Head_Phit
	"-	Head_Phit
	#-	Head_Phit
	uS	headFlitValid
	vS	phitCounter
	SS	reserveRoute
	TS	routeReserveStatus_CFSM
	wS	headFlitStatus
	}O	routeReserveRequestValid
	$P	routeReserveRequest
	%P	routeReserveRequest
	(P	routeReserveStatus_Switch
	3T	headBuffer [32:0]
	4T	headFlitValidStatus
Scope: headFlitDecoder
	5T	N [32:0]
	6T	INDEX [32:0]
	7T	DATA_WIDTH [32:0]
	8T	PhitPerFlit [32:0]
	9T	REQUEST_WIDTH [32:0]
	:T	HeadFlit
	;T	HeadFlit
	<T	HeadFlit
	=T	HeadFlit
	>T	HeadFlit
	?T	HeadFlit
	@T	HeadFlit
	AT	HeadFlit
	BT	HeadFlit
	CT	HeadFlit
	DT	HeadFlit
	ET	HeadFlit
	FT	HeadFlit
	GT	HeadFlit
	HT	HeadFlit
	IT	HeadFlit
	JT	HeadFlit
	KT	HeadFlit
	LT	HeadFlit
	MT	HeadFlit
	NT	HeadFlit
	OT	HeadFlit
	PT	HeadFlit
	QT	HeadFlit
	RT	HeadFlit
	ST	HeadFlit
	TT	HeadFlit
	UT	HeadFlit
	VT	HeadFlit
	WT	HeadFlit
	XT	HeadFlit
	YT	HeadFlit
	$P	RequestMessage
	%P	RequestMessage
	ZT	pathString [2048:0]
	[T	index [32:0]
	\T	i [32:0]
	]T	Destination
	^T	Destination
	_T	Destination
Scope: flitIdentifier
	`T	DATA_WIDTH [32:0]
	aT	TYPE_WIDTH [32:0]
	bT	PhitPerFlit [32:0]
	cT	HeadIdentifier [32:0]
	dT	PayLoadIdentifier [32:0]
	eT	TailIdentifier [32:0]
	fT	DEFAULT [32:0]
	gT	HEAD [32:0]
	hT	PAYLOAD [32:0]
	iT	TAIL [32:0]
	LO	Flit
	MO	Flit
	NO	Flit
	OO	Flit
	PO	Flit
	QO	Flit
	RO	Flit
	SO	Flit
	TO	Flit
	UO	Flit
	VO	Flit
	WO	Flit
	XO	Flit
	YO	Flit
	ZO	Flit
	[O	Flit
	\O	Flit
	]O	Flit
	^O	Flit
	_O	Flit
	`O	Flit
	aO	Flit
	bO	Flit
	cO	Flit
	dO	Flit
	eO	Flit
	fO	Flit
	gO	Flit
	hO	Flit
	iO	Flit
	jO	Flit
	kO	Flit
	jT	FlitType [2:0]
Scope: fifo
	kT	DATA_WIDTH [32:0]
	lT	FIFO_DEPTH [32:0]
	mT	ADDRESS_WIDTH [32:0]
	`,	clk
	a,	rst
	IS	empty
	FS	rd_en
	nT	dout [32:0]
	HS	full
	GS	wr_en
	b,	din
	c,	din
	d,	din
	e,	din
	f,	din
	g,	din
	h,	din
	i,	din
	j,	din
	k,	din
	l,	din
	m,	din
	n,	din
	o,	din
	p,	din
	q,	din
	r,	din
	s,	din
	t,	din
	u,	din
	v,	din
	w,	din
	x,	din
	y,	din
	z,	din
	{,	din
	|,	din
	},	din
	~,	din
	!-	din
	"-	din
	#-	din
	oT	head_tail
	pT	head_tail
	qT	head_tail
	rT	head_tail
	sT	head [4:0]
	tT	tail [4:0]
	uT	i [32:0]
Scope: switch
	vT	N [32:0]
	wT	INPUTS [32:0]
	xT	OUTPUTS [32:0]
	yT	DATA_WIDTH [32:0]
	zT	REQUEST_WIDTH [32:0]
	`,	clk
	a,	rst
	{O	routeReserveRequestValid
	|O	routeReserveRequestValid
	}O	routeReserveRequestValid
	~O	routeReserveRequest
	!P	routeReserveRequest
	"P	routeReserveRequest
	#P	routeReserveRequest
	$P	routeReserveRequest
	%P	routeReserveRequest
	xO	routeRelieve
	yO	routeRelieve
	zO	routeRelieve
	&P	routeReserveStatus
	'P	routeReserveStatus
	(P	routeReserveStatus
	hM	data_in
	iM	data_in
	jM	data_in
	kM	data_in
	lM	data_in
	mM	data_in
	nM	data_in
	oM	data_in
	pM	data_in
	qM	data_in
	rM	data_in
	sM	data_in
	tM	data_in
	uM	data_in
	vM	data_in
	wM	data_in
	xM	data_in
	yM	data_in
	zM	data_in
	{M	data_in
	|M	data_in
	}M	data_in
	~M	data_in
	!N	data_in
	"N	data_in
	#N	data_in
	$N	data_in
	%N	data_in
	&N	data_in
	'N	data_in
	(N	data_in
	)N	data_in
	*N	data_in
	+N	data_in
	,N	data_in
	-N	data_in
	.N	data_in
	/N	data_in
	0N	data_in
	1N	data_in
	2N	data_in
	3N	data_in
	4N	data_in
	5N	data_in
	6N	data_in
	7N	data_in
	8N	data_in
	9N	data_in
	:N	data_in
	;N	data_in
	<N	data_in
	=N	data_in
	>N	data_in
	?N	data_in
	@N	data_in
	AN	data_in
	BN	data_in
	CN	data_in
	DN	data_in
	EN	data_in
	FN	data_in
	GN	data_in
	HN	data_in
	IN	data_in
	JN	data_in
	KN	data_in
	LN	data_in
	MN	data_in
	NN	data_in
	ON	data_in
	PN	data_in
	QN	data_in
	RN	data_in
	SN	data_in
	TN	data_in
	UN	data_in
	VN	data_in
	WN	data_in
	XN	data_in
	YN	data_in
	ZN	data_in
	[N	data_in
	\N	data_in
	]N	data_in
	^N	data_in
	_N	data_in
	`N	data_in
	aN	data_in
	bN	data_in
	cN	data_in
	dN	data_in
	eN	data_in
	fN	data_in
	gN	data_in
	hN	data_in
	iN	data_in
	lO	valid_in
	mO	valid_in
	nO	valid_in
	rO	ready_in
	sO	ready_in
	tO	ready_in
	P.	data_out
	Q.	data_out
	R.	data_out
	S.	data_out
	T.	data_out
	U.	data_out
	V.	data_out
	W.	data_out
	X.	data_out
	Y.	data_out
	Z.	data_out
	[.	data_out
	\.	data_out
	].	data_out
	^.	data_out
	_.	data_out
	`.	data_out
	a.	data_out
	b.	data_out
	c.	data_out
	d.	data_out
	e.	data_out
	f.	data_out
	g.	data_out
	h.	data_out
	i.	data_out
	j.	data_out
	k.	data_out
	l.	data_out
	m.	data_out
	n.	data_out
	o.	data_out
	..	data_out
	/.	data_out
	0.	data_out
	1.	data_out
	2.	data_out
	3.	data_out
	4.	data_out
	5.	data_out
	6.	data_out
	7.	data_out
	8.	data_out
	9.	data_out
	:.	data_out
	;.	data_out
	<.	data_out
	=.	data_out
	>.	data_out
	?.	data_out
	@.	data_out
	A.	data_out
	B.	data_out
	C.	data_out
	D.	data_out
	E.	data_out
	F.	data_out
	G.	data_out
	H.	data_out
	I.	data_out
	J.	data_out
	K.	data_out
	L.	data_out
	M.	data_out
	j-	data_out
	k-	data_out
	l-	data_out
	m-	data_out
	n-	data_out
	o-	data_out
	p-	data_out
	q-	data_out
	r-	data_out
	s-	data_out
	t-	data_out
	u-	data_out
	v-	data_out
	w-	data_out
	x-	data_out
	y-	data_out
	z-	data_out
	{-	data_out
	|-	data_out
	}-	data_out
	~-	data_out
	!.	data_out
	".	data_out
	#.	data_out
	$.	data_out
	%.	data_out
	&.	data_out
	'.	data_out
	(.	data_out
	).	data_out
	*.	data_out
	+.	data_out
	q.	valid_out
	O.	valid_out
	-.	valid_out
	p.	ready_out
	N.	ready_out
	,.	ready_out
	{T	routeSelect
	|T	routeSelect
	}T	routeSelect
	~T	routeSelect
	!U	routeSelect
	"U	routeSelect
	#U	outputBusy
	$U	outputBusy
	%U	outputBusy
	&U	PortReserved
	'U	PortReserved
	(U	PortReserved
Scope: switchControl
	)U	N [32:0]
	*U	INPUTS [32:0]
	+U	OUTPUTS [32:0]
	,U	DATA_WIDTH [32:0]
	-U	REQUEST_WIDTH [32:0]
	.U	STATE_WIDTH [32:0]
	/U	UnRouted [32:0]
	0U	Check [32:0]
	1U	Arbitrate [32:0]
	2U	PathReserved1 [32:0]
	3U	PathReserved0 [32:0]
	`,	clk
	a,	rst
	{O	routeReserveRequestValid
	|O	routeReserveRequestValid
	}O	routeReserveRequestValid
	~O	routeReserveRequest
	!P	routeReserveRequest
	"P	routeReserveRequest
	#P	routeReserveRequest
	$P	routeReserveRequest
	%P	routeReserveRequest
	xO	routeRelieve
	yO	routeRelieve
	zO	routeRelieve
	4U	routeReserveStatus [3:0]
	5U	routeSelect [6:0]
	6U	outputBusy [3:0]
	7U	PortReserved [3:0]
	8U	switchRequest [3:0]
	9U	outputRelieve [3:0]
	:U	PortBusy [3:0]
	;U	Conflict [3:0]
	<U	switchState [9:0]
	=U	switchState_next [9:0]
	>U	i0 [32:0]
	?U	i1 [32:0]
	@U	i2 [32:0]
	AU	i3 [32:0]
	BU	i4 [32:0]
	CU	j4 [32:0]
	DU	i5 [32:0]
	EU	i6 [32:0]
	FU	i7 [32:0]
	GU	j7 [32:0]
	HU	i8 [32:0]
	IU	j8 [32:0]
	JU	i9 [32:0]
	KU	j9 [32:0]
Scope: muxSwitch
	LU	INPUTS [32:0]
	MU	OUTPUTS [32:0]
	NU	DATA_WIDTH [32:0]
	OU	REQUEST_WIDTH [32:0]
	{T	routeSelect
	|T	routeSelect
	}T	routeSelect
	~T	routeSelect
	!U	routeSelect
	"U	routeSelect
	#U	outputBusy
	$U	outputBusy
	%U	outputBusy
	&U	PortReserved
	'U	PortReserved
	(U	PortReserved
	hM	data_in
	iM	data_in
	jM	data_in
	kM	data_in
	lM	data_in
	mM	data_in
	nM	data_in
	oM	data_in
	pM	data_in
	qM	data_in
	rM	data_in
	sM	data_in
	tM	data_in
	uM	data_in
	vM	data_in
	wM	data_in
	xM	data_in
	yM	data_in
	zM	data_in
	{M	data_in
	|M	data_in
	}M	data_in
	~M	data_in
	!N	data_in
	"N	data_in
	#N	data_in
	$N	data_in
	%N	data_in
	&N	data_in
	'N	data_in
	(N	data_in
	)N	data_in
	*N	data_in
	+N	data_in
	,N	data_in
	-N	data_in
	.N	data_in
	/N	data_in
	0N	data_in
	1N	data_in
	2N	data_in
	3N	data_in
	4N	data_in
	5N	data_in
	6N	data_in
	7N	data_in
	8N	data_in
	9N	data_in
	:N	data_in
	;N	data_in
	<N	data_in
	=N	data_in
	>N	data_in
	?N	data_in
	@N	data_in
	AN	data_in
	BN	data_in
	CN	data_in
	DN	data_in
	EN	data_in
	FN	data_in
	GN	data_in
	HN	data_in
	IN	data_in
	JN	data_in
	KN	data_in
	LN	data_in
	MN	data_in
	NN	data_in
	ON	data_in
	PN	data_in
	QN	data_in
	RN	data_in
	SN	data_in
	TN	data_in
	UN	data_in
	VN	data_in
	WN	data_in
	XN	data_in
	YN	data_in
	ZN	data_in
	[N	data_in
	\N	data_in
	]N	data_in
	^N	data_in
	_N	data_in
	`N	data_in
	aN	data_in
	bN	data_in
	cN	data_in
	dN	data_in
	eN	data_in
	fN	data_in
	gN	data_in
	hN	data_in
	iN	data_in
	lO	valid_in
	mO	valid_in
	nO	valid_in
	PU	ready_in [3:0]
	QU	data_out [96:0]
	RU	valid_out [3:0]
	p.	ready_out
	N.	ready_out
	,.	ready_out
	SU	i1 [32:0]
	TU	j1 [32:0]
	UU	i2 [32:0]
	VU	j2 [32:0]
	WU	i3 [32:0]
	XU	j3 [32:0]
Scope: Router_Node5
	YU	N [32:0]
	ZU	INDEX [32:0]
	[U	INPUTS [32:0]
	\U	OUTPUTS [32:0]
	]U	DATA_WIDTH [32:0]
	^U	TYPE_WIDTH [32:0]
	_U	REQUEST_WIDTH [32:0]
	`U	FlitPerPacket [32:0]
	aU	PhitPerFlit [32:0]
	bU	FIFO_DEPTH [32:0]
	r.	clk
	s.	rst
	8/	data_in_bus
	9/	data_in_bus
	:/	data_in_bus
	;/	data_in_bus
	</	data_in_bus
	=/	data_in_bus
	>/	data_in_bus
	?/	data_in_bus
	@/	data_in_bus
	A/	data_in_bus
	B/	data_in_bus
	C/	data_in_bus
	D/	data_in_bus
	E/	data_in_bus
	F/	data_in_bus
	G/	data_in_bus
	H/	data_in_bus
	I/	data_in_bus
	J/	data_in_bus
	K/	data_in_bus
	L/	data_in_bus
	M/	data_in_bus
	N/	data_in_bus
	O/	data_in_bus
	P/	data_in_bus
	Q/	data_in_bus
	R/	data_in_bus
	S/	data_in_bus
	T/	data_in_bus
	U/	data_in_bus
	V/	data_in_bus
	W/	data_in_bus
	t.	data_in_bus
	u.	data_in_bus
	v.	data_in_bus
	w.	data_in_bus
	x.	data_in_bus
	y.	data_in_bus
	z.	data_in_bus
	{.	data_in_bus
	|.	data_in_bus
	}.	data_in_bus
	~.	data_in_bus
	!/	data_in_bus
	"/	data_in_bus
	#/	data_in_bus
	$/	data_in_bus
	%/	data_in_bus
	&/	data_in_bus
	'/	data_in_bus
	(/	data_in_bus
	)/	data_in_bus
	*/	data_in_bus
	+/	data_in_bus
	,/	data_in_bus
	-/	data_in_bus
	./	data_in_bus
	//	data_in_bus
	0/	data_in_bus
	1/	data_in_bus
	2/	data_in_bus
	3/	data_in_bus
	4/	data_in_bus
	5/	data_in_bus
	Y/	valid_in_bus
	7/	valid_in_bus
	X/	ready_in_bus
	6/	ready_in_bus
	|/	data_out_bus
	}/	data_out_bus
	~/	data_out_bus
	!0	data_out_bus
	"0	data_out_bus
	#0	data_out_bus
	$0	data_out_bus
	%0	data_out_bus
	&0	data_out_bus
	'0	data_out_bus
	(0	data_out_bus
	)0	data_out_bus
	*0	data_out_bus
	+0	data_out_bus
	,0	data_out_bus
	-0	data_out_bus
	.0	data_out_bus
	/0	data_out_bus
	00	data_out_bus
	10	data_out_bus
	20	data_out_bus
	30	data_out_bus
	40	data_out_bus
	50	data_out_bus
	60	data_out_bus
	70	data_out_bus
	80	data_out_bus
	90	data_out_bus
	:0	data_out_bus
	;0	data_out_bus
	<0	data_out_bus
	=0	data_out_bus
	Z/	data_out_bus
	[/	data_out_bus
	\/	data_out_bus
	]/	data_out_bus
	^/	data_out_bus
	_/	data_out_bus
	`/	data_out_bus
	a/	data_out_bus
	b/	data_out_bus
	c/	data_out_bus
	d/	data_out_bus
	e/	data_out_bus
	f/	data_out_bus
	g/	data_out_bus
	h/	data_out_bus
	i/	data_out_bus
	j/	data_out_bus
	k/	data_out_bus
	l/	data_out_bus
	m/	data_out_bus
	n/	data_out_bus
	o/	data_out_bus
	p/	data_out_bus
	q/	data_out_bus
	r/	data_out_bus
	s/	data_out_bus
	t/	data_out_bus
	u/	data_out_bus
	v/	data_out_bus
	w/	data_out_bus
	x/	data_out_bus
	y/	data_out_bus
	?0	valid_out_bus
	{/	valid_out_bus
	>0	ready_out_bus
	z/	ready_out_bus
	cU	data_in_switch
	dU	data_in_switch
	eU	data_in_switch
	fU	data_in_switch
	gU	data_in_switch
	hU	data_in_switch
	iU	data_in_switch
	jU	data_in_switch
	kU	data_in_switch
	lU	data_in_switch
	mU	data_in_switch
	nU	data_in_switch
	oU	data_in_switch
	pU	data_in_switch
	qU	data_in_switch
	rU	data_in_switch
	sU	data_in_switch
	tU	data_in_switch
	uU	data_in_switch
	vU	data_in_switch
	wU	data_in_switch
	xU	data_in_switch
	yU	data_in_switch
	zU	data_in_switch
	{U	data_in_switch
	|U	data_in_switch
	}U	data_in_switch
	~U	data_in_switch
	!V	data_in_switch
	"V	data_in_switch
	#V	data_in_switch
	$V	data_in_switch
	%V	data_in_switch
	&V	data_in_switch
	'V	data_in_switch
	(V	data_in_switch
	)V	data_in_switch
	*V	data_in_switch
	+V	data_in_switch
	,V	data_in_switch
	-V	data_in_switch
	.V	data_in_switch
	/V	data_in_switch
	0V	data_in_switch
	1V	data_in_switch
	2V	data_in_switch
	3V	data_in_switch
	4V	data_in_switch
	5V	data_in_switch
	6V	data_in_switch
	7V	data_in_switch
	8V	data_in_switch
	9V	data_in_switch
	:V	data_in_switch
	;V	data_in_switch
	<V	data_in_switch
	=V	data_in_switch
	>V	data_in_switch
	?V	data_in_switch
	@V	data_in_switch
	AV	data_in_switch
	BV	data_in_switch
	CV	data_in_switch
	DV	data_in_switch
	EV	data_out_port
	FV	data_out_port
	GV	data_out_port
	HV	data_out_port
	IV	data_out_port
	JV	data_out_port
	KV	data_out_port
	LV	data_out_port
	MV	data_out_port
	NV	data_out_port
	OV	data_out_port
	PV	data_out_port
	QV	data_out_port
	RV	data_out_port
	SV	data_out_port
	TV	data_out_port
	UV	data_out_port
	VV	data_out_port
	WV	data_out_port
	XV	data_out_port
	YV	data_out_port
	ZV	data_out_port
	[V	data_out_port
	\V	data_out_port
	]V	data_out_port
	^V	data_out_port
	_V	data_out_port
	`V	data_out_port
	aV	data_out_port
	bV	data_out_port
	cV	data_out_port
	dV	data_out_port
	eV	data_out_port
	fV	data_out_port
	gV	data_out_port
	hV	data_out_port
	iV	data_out_port
	jV	data_out_port
	kV	data_out_port
	lV	data_out_port
	mV	data_out_port
	nV	data_out_port
	oV	data_out_port
	pV	data_out_port
	qV	data_out_port
	rV	data_out_port
	sV	data_out_port
	tV	data_out_port
	uV	data_out_port
	vV	data_out_port
	wV	data_out_port
	xV	data_out_port
	yV	data_out_port
	zV	data_out_port
	{V	data_out_port
	|V	data_out_port
	}V	data_out_port
	~V	data_out_port
	!W	data_out_port
	"W	data_out_port
	#W	data_out_port
	$W	data_out_port
	%W	data_out_port
	&W	data_out_port
	'W	valid_in_switch
	(W	valid_in_switch
	)W	valid_out_port
	*W	valid_out_port
	+W	ready_in_switch
	,W	ready_in_switch
	-W	ready_out_port
	.W	ready_out_port
	/W	routeRelieve
	0W	routeRelieve
	1W	routeReserveRequestValid
	2W	routeReserveRequestValid
	3W	routeReserveRequest
	4W	routeReserveRequest
	5W	routeReserveStatus
	6W	routeReserveStatus
Scope: genblk1
	7W	i [32:0]
Scope: port
	8W	N [32:0]
	9W	INDEX [32:0]
	:W	DATA_WIDTH [32:0]
	;W	TYPE_WIDTH [32:0]
	<W	REQUEST_WIDTH [32:0]
	=W	FlitPerPacket [32:0]
	>W	PhitPerFlit [32:0]
	?W	FIFO_DEPTH [32:0]
	r.	clk
	s.	rst
	8/	data_in
	9/	data_in
	:/	data_in
	;/	data_in
	</	data_in
	=/	data_in
	>/	data_in
	?/	data_in
	@/	data_in
	A/	data_in
	B/	data_in
	C/	data_in
	D/	data_in
	E/	data_in
	F/	data_in
	G/	data_in
	H/	data_in
	I/	data_in
	J/	data_in
	K/	data_in
	L/	data_in
	M/	data_in
	N/	data_in
	O/	data_in
	P/	data_in
	Q/	data_in
	R/	data_in
	S/	data_in
	T/	data_in
	U/	data_in
	V/	data_in
	W/	data_in
	Y/	valid_in
	X/	ready_in
	EV	data_out
	FV	data_out
	GV	data_out
	HV	data_out
	IV	data_out
	JV	data_out
	KV	data_out
	LV	data_out
	MV	data_out
	NV	data_out
	OV	data_out
	PV	data_out
	QV	data_out
	RV	data_out
	SV	data_out
	TV	data_out
	UV	data_out
	VV	data_out
	WV	data_out
	XV	data_out
	YV	data_out
	ZV	data_out
	[V	data_out
	\V	data_out
	]V	data_out
	^V	data_out
	_V	data_out
	`V	data_out
	aV	data_out
	bV	data_out
	cV	data_out
	dV	data_out
	)W	valid_out
	-W	ready_out
	/W	routeRelieve
	1W	routeReserveRequestValid
	3W	routeReserveRequest
	5W	routeReserveStatus
	@W	popBuffer
	AW	pushBuffer
	BW	full
	CW	empty
Scope: portControlLogic
	DW	N [32:0]
	EW	INDEX [32:0]
	FW	DATA_WIDTH [32:0]
	GW	TYPE_WIDTH [32:0]
	HW	REQUEST_WIDTH [32:0]
	IW	FlitPerPacket [32:0]
	JW	PhitPerFlit [32:0]
	r.	clk
	s.	rst
	8/	data_in
	9/	data_in
	:/	data_in
	;/	data_in
	</	data_in
	=/	data_in
	>/	data_in
	?/	data_in
	@/	data_in
	A/	data_in
	B/	data_in
	C/	data_in
	D/	data_in
	E/	data_in
	F/	data_in
	G/	data_in
	H/	data_in
	I/	data_in
	J/	data_in
	K/	data_in
	L/	data_in
	M/	data_in
	N/	data_in
	O/	data_in
	P/	data_in
	Q/	data_in
	R/	data_in
	S/	data_in
	T/	data_in
	U/	data_in
	V/	data_in
	W/	data_in
	Y/	valid_in
	X/	ready_in
	)W	valid_out
	-W	ready_out
	EV	Flit
	FV	Flit
	GV	Flit
	HV	Flit
	IV	Flit
	JV	Flit
	KV	Flit
	LV	Flit
	MV	Flit
	NV	Flit
	OV	Flit
	PV	Flit
	QV	Flit
	RV	Flit
	SV	Flit
	TV	Flit
	UV	Flit
	VV	Flit
	WV	Flit
	XV	Flit
	YV	Flit
	ZV	Flit
	[V	Flit
	\V	Flit
	]V	Flit
	^V	Flit
	_V	Flit
	`V	Flit
	aV	Flit
	bV	Flit
	cV	Flit
	dV	Flit
	@W	popBuffer
	AW	pushBuffer
	BW	full
	CW	empty
	/W	routeRelieve
	1W	routeReserveRequestValid
	3W	routeReserveRequest
	5W	routeReserveStatus
	KW	FlitType
	LW	FlitType
	MW	reserveRoute
	NW	routeReserveStatus_CFSM
	OW	Head_Phit
	PW	Head_Phit
	QW	Head_Phit
	RW	Head_Phit
	SW	Head_Phit
	TW	Head_Phit
	UW	Head_Phit
	VW	Head_Phit
	WW	Head_Phit
	XW	Head_Phit
	YW	Head_Phit
	ZW	Head_Phit
	[W	Head_Phit
	\W	Head_Phit
	]W	Head_Phit
	^W	Head_Phit
	_W	Head_Phit
	`W	Head_Phit
	aW	Head_Phit
	bW	Head_Phit
	cW	Head_Phit
	dW	Head_Phit
	eW	Head_Phit
	fW	Head_Phit
	gW	Head_Phit
	hW	Head_Phit
	iW	Head_Phit
	jW	Head_Phit
	kW	Head_Phit
	lW	Head_Phit
	mW	Head_Phit
	nW	Head_Phit
	oW	headFlitValid
	pW	phitCounter
	qW	headFlitStatus
	rW	Handshake
Scope: controlFSM
	sW	FlitPerPacket [32:0]
	tW	PhitPerFlit [32:0]
	uW	REQUEST_WIDTH [32:0]
	vW	TYPE_WIDTH [32:0]
	wW	HEAD [32:0]
	xW	PAYLOAD [32:0]
	yW	TAIL [32:0]
	zW	UnRouted [32:0]
	{W	HeadFlit [32:0]
	|W	ReservePath [32:0]
	}W	Route [32:0]
	~W	TailFlit [32:0]
	r.	clk
	s.	rst
	Y/	valid_in
	X/	ready_in
	)W	valid_out
	-W	ready_out
	KW	FlitType
	LW	FlitType
	MW	reserveRoute
	NW	routeReserveStatus
	oW	headFlitValid
	!X	phitCounter
	qW	headFlitStatus
	@W	popBuffer
	AW	pushBuffer
	rW	Handshake
	BW	full
	CW	empty
	/W	routeRelieve
	"X	state [3:0]
	#X	nextState [3:0]
	$X	flitCounter [4:0]
	%X	TailReceived
	&X	flitValid
	'X	pushBuffer_state
Scope: headFlitBuffer
	(X	N [32:0]
	)X	INDEX [32:0]
	*X	DATA_WIDTH [32:0]
	+X	PhitPerFlit [32:0]
	,X	REQUEST_WIDTH [32:0]
	r.	clk
	s.	rst
	rW	Handshake
	8/	Head_Phit
	9/	Head_Phit
	:/	Head_Phit
	;/	Head_Phit
	</	Head_Phit
	=/	Head_Phit
	>/	Head_Phit
	?/	Head_Phit
	@/	Head_Phit
	A/	Head_Phit
	B/	Head_Phit
	C/	Head_Phit
	D/	Head_Phit
	E/	Head_Phit
	F/	Head_Phit
	G/	Head_Phit
	H/	Head_Phit
	I/	Head_Phit
	J/	Head_Phit
	K/	Head_Phit
	L/	Head_Phit
	M/	Head_Phit
	N/	Head_Phit
	O/	Head_Phit
	P/	Head_Phit
	Q/	Head_Phit
	R/	Head_Phit
	S/	Head_Phit
	T/	Head_Phit
	U/	Head_Phit
	V/	Head_Phit
	W/	Head_Phit
	oW	headFlitValid
	pW	phitCounter
	MW	reserveRoute
	NW	routeReserveStatus_CFSM
	qW	headFlitStatus
	1W	routeReserveRequestValid
	3W	routeReserveRequest
	5W	routeReserveStatus_Switch
	-X	headBuffer [32:0]
	.X	headFlitValidStatus
Scope: headFlitDecoder
	/X	N [32:0]
	0X	INDEX [32:0]
	1X	DATA_WIDTH [32:0]
	2X	PhitPerFlit [32:0]
	3X	REQUEST_WIDTH [32:0]
	4X	HeadFlit
	5X	HeadFlit
	6X	HeadFlit
	7X	HeadFlit
	8X	HeadFlit
	9X	HeadFlit
	:X	HeadFlit
	;X	HeadFlit
	<X	HeadFlit
	=X	HeadFlit
	>X	HeadFlit
	?X	HeadFlit
	@X	HeadFlit
	AX	HeadFlit
	BX	HeadFlit
	CX	HeadFlit
	DX	HeadFlit
	EX	HeadFlit
	FX	HeadFlit
	GX	HeadFlit
	HX	HeadFlit
	IX	HeadFlit
	JX	HeadFlit
	KX	HeadFlit
	LX	HeadFlit
	MX	HeadFlit
	NX	HeadFlit
	OX	HeadFlit
	PX	HeadFlit
	QX	HeadFlit
	RX	HeadFlit
	SX	HeadFlit
	3W	RequestMessage
	TX	pathString [2048:0]
	UX	index [32:0]
	VX	i [32:0]
	WX	Destination
	XX	Destination
	YX	Destination
Scope: flitIdentifier
	ZX	DATA_WIDTH [32:0]
	[X	TYPE_WIDTH [32:0]
	\X	PhitPerFlit [32:0]
	]X	HeadIdentifier [32:0]
	^X	PayLoadIdentifier [32:0]
	_X	TailIdentifier [32:0]
	`X	DEFAULT [32:0]
	aX	HEAD [32:0]
	bX	PAYLOAD [32:0]
	cX	TAIL [32:0]
	EV	Flit
	FV	Flit
	GV	Flit
	HV	Flit
	IV	Flit
	JV	Flit
	KV	Flit
	LV	Flit
	MV	Flit
	NV	Flit
	OV	Flit
	PV	Flit
	QV	Flit
	RV	Flit
	SV	Flit
	TV	Flit
	UV	Flit
	VV	Flit
	WV	Flit
	XV	Flit
	YV	Flit
	ZV	Flit
	[V	Flit
	\V	Flit
	]V	Flit
	^V	Flit
	_V	Flit
	`V	Flit
	aV	Flit
	bV	Flit
	cV	Flit
	dV	Flit
	dX	FlitType [2:0]
Scope: fifo
	eX	DATA_WIDTH [32:0]
	fX	FIFO_DEPTH [32:0]
	gX	ADDRESS_WIDTH [32:0]
	r.	clk
	s.	rst
	CW	empty
	@W	rd_en
	hX	dout [32:0]
	BW	full
	AW	wr_en
	8/	din
	9/	din
	:/	din
	;/	din
	</	din
	=/	din
	>/	din
	?/	din
	@/	din
	A/	din
	B/	din
	C/	din
	D/	din
	E/	din
	F/	din
	G/	din
	H/	din
	I/	din
	J/	din
	K/	din
	L/	din
	M/	din
	N/	din
	O/	din
	P/	din
	Q/	din
	R/	din
	S/	din
	T/	din
	U/	din
	V/	din
	W/	din
	iX	head_tail
	jX	head_tail
	kX	head_tail
	lX	head_tail
	mX	head [4:0]
	nX	tail [4:0]
	oX	i [32:0]
Scope: genblk1
	pX	i [32:0]
Scope: port
	qX	N [32:0]
	rX	INDEX [32:0]
	sX	DATA_WIDTH [32:0]
	tX	TYPE_WIDTH [32:0]
	uX	REQUEST_WIDTH [32:0]
	vX	FlitPerPacket [32:0]
	wX	PhitPerFlit [32:0]
	xX	FIFO_DEPTH [32:0]
	r.	clk
	s.	rst
	t.	data_in
	u.	data_in
	v.	data_in
	w.	data_in
	x.	data_in
	y.	data_in
	z.	data_in
	{.	data_in
	|.	data_in
	}.	data_in
	~.	data_in
	!/	data_in
	"/	data_in
	#/	data_in
	$/	data_in
	%/	data_in
	&/	data_in
	'/	data_in
	(/	data_in
	)/	data_in
	*/	data_in
	+/	data_in
	,/	data_in
	-/	data_in
	./	data_in
	//	data_in
	0/	data_in
	1/	data_in
	2/	data_in
	3/	data_in
	4/	data_in
	5/	data_in
	7/	valid_in
	6/	ready_in
	eV	data_out
	fV	data_out
	gV	data_out
	hV	data_out
	iV	data_out
	jV	data_out
	kV	data_out
	lV	data_out
	mV	data_out
	nV	data_out
	oV	data_out
	pV	data_out
	qV	data_out
	rV	data_out
	sV	data_out
	tV	data_out
	uV	data_out
	vV	data_out
	wV	data_out
	xV	data_out
	yV	data_out
	zV	data_out
	{V	data_out
	|V	data_out
	}V	data_out
	~V	data_out
	!W	data_out
	"W	data_out
	#W	data_out
	$W	data_out
	%W	data_out
	&W	data_out
	*W	valid_out
	.W	ready_out
	0W	routeRelieve
	2W	routeReserveRequestValid
	4W	routeReserveRequest
	6W	routeReserveStatus
	yX	popBuffer
	zX	pushBuffer
	{X	full
	|X	empty
Scope: portControlLogic
	}X	N [32:0]
	~X	INDEX [32:0]
	!Y	DATA_WIDTH [32:0]
	"Y	TYPE_WIDTH [32:0]
	#Y	REQUEST_WIDTH [32:0]
	$Y	FlitPerPacket [32:0]
	%Y	PhitPerFlit [32:0]
	r.	clk
	s.	rst
	t.	data_in
	u.	data_in
	v.	data_in
	w.	data_in
	x.	data_in
	y.	data_in
	z.	data_in
	{.	data_in
	|.	data_in
	}.	data_in
	~.	data_in
	!/	data_in
	"/	data_in
	#/	data_in
	$/	data_in
	%/	data_in
	&/	data_in
	'/	data_in
	(/	data_in
	)/	data_in
	*/	data_in
	+/	data_in
	,/	data_in
	-/	data_in
	./	data_in
	//	data_in
	0/	data_in
	1/	data_in
	2/	data_in
	3/	data_in
	4/	data_in
	5/	data_in
	7/	valid_in
	6/	ready_in
	*W	valid_out
	.W	ready_out
	eV	Flit
	fV	Flit
	gV	Flit
	hV	Flit
	iV	Flit
	jV	Flit
	kV	Flit
	lV	Flit
	mV	Flit
	nV	Flit
	oV	Flit
	pV	Flit
	qV	Flit
	rV	Flit
	sV	Flit
	tV	Flit
	uV	Flit
	vV	Flit
	wV	Flit
	xV	Flit
	yV	Flit
	zV	Flit
	{V	Flit
	|V	Flit
	}V	Flit
	~V	Flit
	!W	Flit
	"W	Flit
	#W	Flit
	$W	Flit
	%W	Flit
	&W	Flit
	yX	popBuffer
	zX	pushBuffer
	{X	full
	|X	empty
	0W	routeRelieve
	2W	routeReserveRequestValid
	4W	routeReserveRequest
	6W	routeReserveStatus
	&Y	FlitType
	'Y	FlitType
	(Y	reserveRoute
	)Y	routeReserveStatus_CFSM
	*Y	Head_Phit
	+Y	Head_Phit
	,Y	Head_Phit
	-Y	Head_Phit
	.Y	Head_Phit
	/Y	Head_Phit
	0Y	Head_Phit
	1Y	Head_Phit
	2Y	Head_Phit
	3Y	Head_Phit
	4Y	Head_Phit
	5Y	Head_Phit
	6Y	Head_Phit
	7Y	Head_Phit
	8Y	Head_Phit
	9Y	Head_Phit
	:Y	Head_Phit
	;Y	Head_Phit
	<Y	Head_Phit
	=Y	Head_Phit
	>Y	Head_Phit
	?Y	Head_Phit
	@Y	Head_Phit
	AY	Head_Phit
	BY	Head_Phit
	CY	Head_Phit
	DY	Head_Phit
	EY	Head_Phit
	FY	Head_Phit
	GY	Head_Phit
	HY	Head_Phit
	IY	Head_Phit
	JY	headFlitValid
	KY	phitCounter
	LY	headFlitStatus
	MY	Handshake
Scope: controlFSM
	NY	FlitPerPacket [32:0]
	OY	PhitPerFlit [32:0]
	PY	REQUEST_WIDTH [32:0]
	QY	TYPE_WIDTH [32:0]
	RY	HEAD [32:0]
	SY	PAYLOAD [32:0]
	TY	TAIL [32:0]
	UY	UnRouted [32:0]
	VY	HeadFlit [32:0]
	WY	ReservePath [32:0]
	XY	Route [32:0]
	YY	TailFlit [32:0]
	r.	clk
	s.	rst
	7/	valid_in
	6/	ready_in
	*W	valid_out
	.W	ready_out
	&Y	FlitType
	'Y	FlitType
	(Y	reserveRoute
	)Y	routeReserveStatus
	JY	headFlitValid
	ZY	phitCounter
	LY	headFlitStatus
	yX	popBuffer
	zX	pushBuffer
	MY	Handshake
	{X	full
	|X	empty
	0W	routeRelieve
	[Y	state [3:0]
	\Y	nextState [3:0]
	]Y	flitCounter [4:0]
	^Y	TailReceived
	_Y	flitValid
	`Y	pushBuffer_state
Scope: headFlitBuffer
	aY	N [32:0]
	bY	INDEX [32:0]
	cY	DATA_WIDTH [32:0]
	dY	PhitPerFlit [32:0]
	eY	REQUEST_WIDTH [32:0]
	r.	clk
	s.	rst
	MY	Handshake
	t.	Head_Phit
	u.	Head_Phit
	v.	Head_Phit
	w.	Head_Phit
	x.	Head_Phit
	y.	Head_Phit
	z.	Head_Phit
	{.	Head_Phit
	|.	Head_Phit
	}.	Head_Phit
	~.	Head_Phit
	!/	Head_Phit
	"/	Head_Phit
	#/	Head_Phit
	$/	Head_Phit
	%/	Head_Phit
	&/	Head_Phit
	'/	Head_Phit
	(/	Head_Phit
	)/	Head_Phit
	*/	Head_Phit
	+/	Head_Phit
	,/	Head_Phit
	-/	Head_Phit
	./	Head_Phit
	//	Head_Phit
	0/	Head_Phit
	1/	Head_Phit
	2/	Head_Phit
	3/	Head_Phit
	4/	Head_Phit
	5/	Head_Phit
	JY	headFlitValid
	KY	phitCounter
	(Y	reserveRoute
	)Y	routeReserveStatus_CFSM
	LY	headFlitStatus
	2W	routeReserveRequestValid
	4W	routeReserveRequest
	6W	routeReserveStatus_Switch
	fY	headBuffer [32:0]
	gY	headFlitValidStatus
Scope: headFlitDecoder
	hY	N [32:0]
	iY	INDEX [32:0]
	jY	DATA_WIDTH [32:0]
	kY	PhitPerFlit [32:0]
	lY	REQUEST_WIDTH [32:0]
	mY	HeadFlit
	nY	HeadFlit
	oY	HeadFlit
	pY	HeadFlit
	qY	HeadFlit
	rY	HeadFlit
	sY	HeadFlit
	tY	HeadFlit
	uY	HeadFlit
	vY	HeadFlit
	wY	HeadFlit
	xY	HeadFlit
	yY	HeadFlit
	zY	HeadFlit
	{Y	HeadFlit
	|Y	HeadFlit
	}Y	HeadFlit
	~Y	HeadFlit
	!Z	HeadFlit
	"Z	HeadFlit
	#Z	HeadFlit
	$Z	HeadFlit
	%Z	HeadFlit
	&Z	HeadFlit
	'Z	HeadFlit
	(Z	HeadFlit
	)Z	HeadFlit
	*Z	HeadFlit
	+Z	HeadFlit
	,Z	HeadFlit
	-Z	HeadFlit
	.Z	HeadFlit
	4W	RequestMessage
	/Z	pathString [2048:0]
	0Z	index [32:0]
	1Z	i [32:0]
	2Z	Destination
	3Z	Destination
	4Z	Destination
Scope: flitIdentifier
	5Z	DATA_WIDTH [32:0]
	6Z	TYPE_WIDTH [32:0]
	7Z	PhitPerFlit [32:0]
	8Z	HeadIdentifier [32:0]
	9Z	PayLoadIdentifier [32:0]
	:Z	TailIdentifier [32:0]
	;Z	DEFAULT [32:0]
	<Z	HEAD [32:0]
	=Z	PAYLOAD [32:0]
	>Z	TAIL [32:0]
	eV	Flit
	fV	Flit
	gV	Flit
	hV	Flit
	iV	Flit
	jV	Flit
	kV	Flit
	lV	Flit
	mV	Flit
	nV	Flit
	oV	Flit
	pV	Flit
	qV	Flit
	rV	Flit
	sV	Flit
	tV	Flit
	uV	Flit
	vV	Flit
	wV	Flit
	xV	Flit
	yV	Flit
	zV	Flit
	{V	Flit
	|V	Flit
	}V	Flit
	~V	Flit
	!W	Flit
	"W	Flit
	#W	Flit
	$W	Flit
	%W	Flit
	&W	Flit
	?Z	FlitType [2:0]
Scope: fifo
	@Z	DATA_WIDTH [32:0]
	AZ	FIFO_DEPTH [32:0]
	BZ	ADDRESS_WIDTH [32:0]
	r.	clk
	s.	rst
	|X	empty
	yX	rd_en
	CZ	dout [32:0]
	{X	full
	zX	wr_en
	t.	din
	u.	din
	v.	din
	w.	din
	x.	din
	y.	din
	z.	din
	{.	din
	|.	din
	}.	din
	~.	din
	!/	din
	"/	din
	#/	din
	$/	din
	%/	din
	&/	din
	'/	din
	(/	din
	)/	din
	*/	din
	+/	din
	,/	din
	-/	din
	./	din
	//	din
	0/	din
	1/	din
	2/	din
	3/	din
	4/	din
	5/	din
	DZ	head_tail
	EZ	head_tail
	FZ	head_tail
	GZ	head_tail
	HZ	head [4:0]
	IZ	tail [4:0]
	JZ	i [32:0]
Scope: switch
	KZ	N [32:0]
	LZ	INPUTS [32:0]
	MZ	OUTPUTS [32:0]
	NZ	DATA_WIDTH [32:0]
	OZ	REQUEST_WIDTH [32:0]
	r.	clk
	s.	rst
	1W	routeReserveRequestValid
	2W	routeReserveRequestValid
	3W	routeReserveRequest
	4W	routeReserveRequest
	/W	routeRelieve
	0W	routeRelieve
	5W	routeReserveStatus
	6W	routeReserveStatus
	cU	data_in
	dU	data_in
	eU	data_in
	fU	data_in
	gU	data_in
	hU	data_in
	iU	data_in
	jU	data_in
	kU	data_in
	lU	data_in
	mU	data_in
	nU	data_in
	oU	data_in
	pU	data_in
	qU	data_in
	rU	data_in
	sU	data_in
	tU	data_in
	uU	data_in
	vU	data_in
	wU	data_in
	xU	data_in
	yU	data_in
	zU	data_in
	{U	data_in
	|U	data_in
	}U	data_in
	~U	data_in
	!V	data_in
	"V	data_in
	#V	data_in
	$V	data_in
	%V	data_in
	&V	data_in
	'V	data_in
	(V	data_in
	)V	data_in
	*V	data_in
	+V	data_in
	,V	data_in
	-V	data_in
	.V	data_in
	/V	data_in
	0V	data_in
	1V	data_in
	2V	data_in
	3V	data_in
	4V	data_in
	5V	data_in
	6V	data_in
	7V	data_in
	8V	data_in
	9V	data_in
	:V	data_in
	;V	data_in
	<V	data_in
	=V	data_in
	>V	data_in
	?V	data_in
	@V	data_in
	AV	data_in
	BV	data_in
	CV	data_in
	DV	data_in
	'W	valid_in
	(W	valid_in
	+W	ready_in
	,W	ready_in
	|/	data_out
	}/	data_out
	~/	data_out
	!0	data_out
	"0	data_out
	#0	data_out
	$0	data_out
	%0	data_out
	&0	data_out
	'0	data_out
	(0	data_out
	)0	data_out
	*0	data_out
	+0	data_out
	,0	data_out
	-0	data_out
	.0	data_out
	/0	data_out
	00	data_out
	10	data_out
	20	data_out
	30	data_out
	40	data_out
	50	data_out
	60	data_out
	70	data_out
	80	data_out
	90	data_out
	:0	data_out
	;0	data_out
	<0	data_out
	=0	data_out
	Z/	data_out
	[/	data_out
	\/	data_out
	]/	data_out
	^/	data_out
	_/	data_out
	`/	data_out
	a/	data_out
	b/	data_out
	c/	data_out
	d/	data_out
	e/	data_out
	f/	data_out
	g/	data_out
	h/	data_out
	i/	data_out
	j/	data_out
	k/	data_out
	l/	data_out
	m/	data_out
	n/	data_out
	o/	data_out
	p/	data_out
	q/	data_out
	r/	data_out
	s/	data_out
	t/	data_out
	u/	data_out
	v/	data_out
	w/	data_out
	x/	data_out
	y/	data_out
	?0	valid_out
	{/	valid_out
	>0	ready_out
	z/	ready_out
	PZ	routeSelect
	QZ	routeSelect
	RZ	outputBusy
	SZ	outputBusy
	TZ	PortReserved
	UZ	PortReserved
Scope: switchControl
	VZ	N [32:0]
	WZ	INPUTS [32:0]
	XZ	OUTPUTS [32:0]
	YZ	DATA_WIDTH [32:0]
	ZZ	REQUEST_WIDTH [32:0]
	[Z	STATE_WIDTH [32:0]
	\Z	UnRouted [32:0]
	]Z	Check [32:0]
	^Z	Arbitrate [32:0]
	_Z	PathReserved1 [32:0]
	`Z	PathReserved0 [32:0]
	r.	clk
	s.	rst
	1W	routeReserveRequestValid
	2W	routeReserveRequestValid
	3W	routeReserveRequest
	4W	routeReserveRequest
	/W	routeRelieve
	0W	routeRelieve
	aZ	routeReserveStatus [2:0]
	bZ	routeSelect [2:0]
	cZ	outputBusy [2:0]
	dZ	PortReserved [2:0]
	eZ	switchRequest [2:0]
	fZ	outputRelieve [2:0]
	gZ	PortBusy [2:0]
	hZ	Conflict [2:0]
	iZ	switchState [6:0]
	jZ	switchState_next [6:0]
	kZ	i0 [32:0]
	lZ	i1 [32:0]
	mZ	i2 [32:0]
	nZ	i3 [32:0]
	oZ	i4 [32:0]
	pZ	j4 [32:0]
	qZ	i5 [32:0]
	rZ	i6 [32:0]
	sZ	i7 [32:0]
	tZ	j7 [32:0]
	uZ	i8 [32:0]
	vZ	j8 [32:0]
	wZ	i9 [32:0]
	xZ	j9 [32:0]
Scope: muxSwitch
	yZ	INPUTS [32:0]
	zZ	OUTPUTS [32:0]
	{Z	DATA_WIDTH [32:0]
	|Z	REQUEST_WIDTH [32:0]
	PZ	routeSelect
	QZ	routeSelect
	RZ	outputBusy
	SZ	outputBusy
	TZ	PortReserved
	UZ	PortReserved
	cU	data_in
	dU	data_in
	eU	data_in
	fU	data_in
	gU	data_in
	hU	data_in
	iU	data_in
	jU	data_in
	kU	data_in
	lU	data_in
	mU	data_in
	nU	data_in
	oU	data_in
	pU	data_in
	qU	data_in
	rU	data_in
	sU	data_in
	tU	data_in
	uU	data_in
	vU	data_in
	wU	data_in
	xU	data_in
	yU	data_in
	zU	data_in
	{U	data_in
	|U	data_in
	}U	data_in
	~U	data_in
	!V	data_in
	"V	data_in
	#V	data_in
	$V	data_in
	%V	data_in
	&V	data_in
	'V	data_in
	(V	data_in
	)V	data_in
	*V	data_in
	+V	data_in
	,V	data_in
	-V	data_in
	.V	data_in
	/V	data_in
	0V	data_in
	1V	data_in
	2V	data_in
	3V	data_in
	4V	data_in
	5V	data_in
	6V	data_in
	7V	data_in
	8V	data_in
	9V	data_in
	:V	data_in
	;V	data_in
	<V	data_in
	=V	data_in
	>V	data_in
	?V	data_in
	@V	data_in
	AV	data_in
	BV	data_in
	CV	data_in
	DV	data_in
	'W	valid_in
	(W	valid_in
	}Z	ready_in [2:0]
	~Z	data_out [64:0]
	![	valid_out [2:0]
	>0	ready_out
	z/	ready_out
	"[	i1 [32:0]
	#[	j1 [32:0]
	$[	i2 [32:0]
	%[	j2 [32:0]
	&[	i3 [32:0]
	'[	j3 [32:0]
